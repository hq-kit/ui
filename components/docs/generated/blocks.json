{
  "application/navbar/inset/page.tsx": "import { Skeleton } from '@/components/ui'\n\nexport default function Page() {\n    return (\n        <div className='flex h-full flex-1 flex-col gap-4 py-4'>\n            <div className='grid auto-rows-min gap-4 md:grid-cols-3'>\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n            </div>\n            <Skeleton className='min-h-[100vh] flex-1 rounded-xl bg-muted/50 md:min-h-min' />\n        </div>\n    )\n}\n",
  "application/navbar/inset/layout.tsx": "'use client'\n\nimport { IconBrandCleon, IconGauge, IconLogOut, IconSearch, IconSettings, IconShield, IconShoppingBag } from 'hq-icons'\n\nimport { ThemeToggle } from '@/components/theme-toggle'\nimport { Avatar, Breadcrumbs, Button, Menu, Navbar, Separator } from '@/components/ui'\n\nexport default function AppNavbar({ children }: { children: React.ReactNode }) {\n    return (\n        <Navbar variant='inset'>\n            <Navbar.Nav>\n                <Navbar.Logo aria-label='Goto documenation of Navbar' href='/docs/components/layouts/navbar'>\n                    <IconBrandCleon className='size-6 sm:size-5' />\n                </Navbar.Logo>\n                <Navbar.Section>\n                    <Navbar.Item href='#' isCurrent>\n                        Home\n                    </Navbar.Item>\n                    <Navbar.Item href='#'>About</Navbar.Item>\n                    <Navbar.Item href='#'>Contact</Navbar.Item>\n                </Navbar.Section>\n\n                <Navbar.Section className='ml-auto hidden md:flex'>\n                    <Navbar.Flex className='sm:gap-x-1'>\n                        <Button variant='ghost' icon aria-label='Search for products'>\n                            <IconSearch />\n                        </Button>\n                        <ThemeToggle variant='ghost' />\n                    </Navbar.Flex>\n                    <Separator orientation='vertical' className='mr-3 ml-1 h-6' />\n                    <UserMenu />\n                </Navbar.Section>\n            </Navbar.Nav>\n            <Navbar.Compact>\n                <Navbar.Flex>\n                    <Navbar.Trigger className='-ml-2' />\n                    <Separator orientation='vertical' className='h-6 sm:mx-1' />\n                    <Navbar.Logo aria-label='Goto documenation of Navbar' href='/docs/components/layouts/navbar'>\n                        <IconBrandCleon className='size-5' />\n                    </Navbar.Logo>\n                </Navbar.Flex>\n                <Navbar.Flex>\n                    <Navbar.Flex>\n                        <Button variant='ghost' icon aria-label='Search for products'>\n                            <IconSearch />\n                        </Button>\n                        <Button variant='ghost' icon aria-label='Your Bag'>\n                            <IconShoppingBag />\n                        </Button>\n                        <ThemeToggle variant='ghost' />\n                    </Navbar.Flex>\n                    <Separator orientation='vertical' className='mr-3 ml-1 h-6' />\n                    <UserMenu />\n                </Navbar.Flex>\n            </Navbar.Compact>\n            <Navbar.Breadcrumbs>\n                <Breadcrumbs>\n                    <Breadcrumbs.Item href='#'>Home</Breadcrumbs.Item>\n                    <Breadcrumbs.Item href='#'>Blocks</Breadcrumbs.Item>\n                    <Breadcrumbs.Item>Navbar</Breadcrumbs.Item>\n                </Breadcrumbs>\n            </Navbar.Breadcrumbs>\n            <Navbar.Inset>{children}</Navbar.Inset>\n        </Navbar>\n    )\n}\n\nfunction UserMenu() {\n    return (\n        <Menu>\n            <Menu.Trigger aria-label='Open Menu'>\n                <Avatar alt='DQ' size='sm' shape='square' src='https://github.com/dq-alhq.png' />\n            </Menu.Trigger>\n            <Menu.Content placement='bottom right' className='sm:min-w-56'>\n                <Menu.Header>\n                    <span className='block'>DQ Al-Haqqi</span>\n                    <span className='font-normal text-muted-fg'>@dq-alhq</span>\n                </Menu.Header>\n                <Menu.Item href='#dashboard'>\n                    <IconGauge />\n                    Dashboard\n                </Menu.Item>\n                <Menu.Item href='#settings'>\n                    <IconSettings />\n                    Settings\n                </Menu.Item>\n                <Menu.Item href='#security'>\n                    <IconShield />\n                    Security\n                </Menu.Item>\n                <Menu.Separator />\n                <Menu.Item href='#logout'>\n                    <IconLogOut />\n                    Log out\n                </Menu.Item>\n            </Menu.Content>\n        </Menu>\n    )\n}\n",
  "application/navbar/float/page.tsx": "import { Skeleton } from '@/components/ui'\n\nexport default function Page() {\n    return (\n        <div className='flex h-full flex-1 flex-col gap-4 py-4'>\n            <div className='grid auto-rows-min gap-4 md:grid-cols-3'>\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n            </div>\n            <Skeleton className='min-h-[100vh] flex-1 rounded-xl bg-muted/50 md:min-h-min' />\n        </div>\n    )\n}\n",
  "application/navbar/float/layout.tsx": "'use client'\n\nimport { IconBrandCleon, IconGauge, IconLogOut, IconSearch, IconSettings, IconShield, IconShoppingBag } from 'hq-icons'\n\nimport { ThemeToggle } from '@/components/theme-toggle'\nimport { Avatar, Breadcrumbs, Button, Menu, Navbar, Separator } from '@/components/ui'\n\nexport default function AppNavbar({ children }: { children: React.ReactNode }) {\n    return (\n        <Navbar variant='float'>\n            <Navbar.Nav>\n                <Navbar.Logo aria-label='Goto documenation of Navbar' href='/docs/components/layouts/navbar'>\n                    <IconBrandCleon className='size-6 sm:size-5' />\n                </Navbar.Logo>\n                <Navbar.Section>\n                    <Navbar.Item href='#' isCurrent>\n                        Home\n                    </Navbar.Item>\n                    <Navbar.Item href='#'>About</Navbar.Item>\n                    <Navbar.Item href='#'>Contact</Navbar.Item>\n                </Navbar.Section>\n\n                <Navbar.Section className='ml-auto hidden md:flex'>\n                    <Navbar.Flex className='sm:gap-x-1'>\n                        <Button variant='ghost' icon aria-label='Search for products'>\n                            <IconSearch />\n                        </Button>\n                        <ThemeToggle variant='ghost' />\n                    </Navbar.Flex>\n                    <Separator orientation='vertical' className='mr-3 ml-1 h-6' />\n                    <UserMenu />\n                </Navbar.Section>\n            </Navbar.Nav>\n            <Navbar.Compact>\n                <Navbar.Flex>\n                    <Navbar.Trigger className='-ml-2' />\n                    <Separator orientation='vertical' className='h-6 sm:mx-1' />\n                    <Navbar.Logo aria-label='Goto documenation of Navbar' href='/docs/components/layouts/navbar'>\n                        <IconBrandCleon className='size-5' />\n                    </Navbar.Logo>\n                </Navbar.Flex>\n                <Navbar.Flex>\n                    <Navbar.Flex>\n                        <Button variant='ghost' icon aria-label='Search for products'>\n                            <IconSearch />\n                        </Button>\n                        <Button variant='ghost' icon aria-label='Your Bag'>\n                            <IconShoppingBag />\n                        </Button>\n                        <ThemeToggle variant='ghost' />\n                    </Navbar.Flex>\n                    <Separator orientation='vertical' className='mr-3 ml-1 h-6' />\n                    <UserMenu />\n                </Navbar.Flex>\n            </Navbar.Compact>\n            <Navbar.Breadcrumbs>\n                <Breadcrumbs>\n                    <Breadcrumbs.Item href='#'>Home</Breadcrumbs.Item>\n                    <Breadcrumbs.Item href='#'>Blocks</Breadcrumbs.Item>\n                    <Breadcrumbs.Item>Navbar</Breadcrumbs.Item>\n                </Breadcrumbs>\n            </Navbar.Breadcrumbs>\n            <Navbar.Inset>{children}</Navbar.Inset>\n        </Navbar>\n    )\n}\n\nfunction UserMenu() {\n    return (\n        <Menu>\n            <Menu.Trigger aria-label='Open Menu'>\n                <Avatar alt='DQ' size='sm' shape='square' src='https://github.com/dq-alhq.png' />\n            </Menu.Trigger>\n            <Menu.Content placement='bottom right' className='sm:min-w-56'>\n                <Menu.Header>\n                    <span className='block'>DQ Al-Haqqi</span>\n                    <span className='font-normal text-muted-fg'>@dq-alhq</span>\n                </Menu.Header>\n                <Menu.Item href='#dashboard'>\n                    <IconGauge />\n                    Dashboard\n                </Menu.Item>\n                <Menu.Item href='#settings'>\n                    <IconSettings />\n                    Settings\n                </Menu.Item>\n                <Menu.Item href='#security'>\n                    <IconShield />\n                    Security\n                </Menu.Item>\n                <Menu.Separator />\n                <Menu.Item href='#logout'>\n                    <IconLogOut />\n                    Log out\n                </Menu.Item>\n            </Menu.Content>\n        </Menu>\n    )\n}\n",
  "application/navbar/basic/page.tsx": "import { Skeleton } from '@/components/ui'\n\nexport default function Page() {\n    return (\n        <div className='flex h-full flex-1 flex-col gap-4 py-4'>\n            <div className='grid auto-rows-min gap-4 md:grid-cols-3'>\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n            </div>\n            <Skeleton className='min-h-[100vh] flex-1 rounded-xl bg-muted/50 md:min-h-min' />\n        </div>\n    )\n}\n",
  "application/navbar/basic/layout.tsx": "'use client'\n\nimport { IconBrandCleon, IconGauge, IconLogOut, IconSearch, IconSettings, IconShield, IconShoppingBag } from 'hq-icons'\n\nimport { ThemeToggle } from '@/components/theme-toggle'\nimport { Avatar, Breadcrumbs, Button, Menu, Navbar, Separator } from '@/components/ui'\n\nexport default function AppNavbar({ children }: { children: React.ReactNode }) {\n    return (\n        <Navbar>\n            <Navbar.Nav>\n                <Navbar.Logo aria-label='Goto documenation of Navbar' href='/docs/components/layouts/navbar'>\n                    <IconBrandCleon className='size-6 sm:size-5' />\n                </Navbar.Logo>\n                <Navbar.Section>\n                    <Navbar.Item href='#' isCurrent>\n                        Home\n                    </Navbar.Item>\n                    <Navbar.Item href='#'>About</Navbar.Item>\n                    <Navbar.Item href='#'>Contact</Navbar.Item>\n                </Navbar.Section>\n\n                <Navbar.Section className='ml-auto hidden md:flex'>\n                    <Navbar.Flex className='sm:gap-x-1'>\n                        <Button variant='ghost' icon aria-label='Search for products'>\n                            <IconSearch />\n                        </Button>\n                        <ThemeToggle variant='ghost' />\n                    </Navbar.Flex>\n                    <Separator orientation='vertical' className='mr-3 ml-1 h-6' />\n                    <UserMenu />\n                </Navbar.Section>\n            </Navbar.Nav>\n            <Navbar.Compact>\n                <Navbar.Flex>\n                    <Navbar.Trigger className='-ml-2' />\n                    <Separator orientation='vertical' className='h-6 sm:mx-1' />\n                    <Navbar.Logo aria-label='Goto documenation of Navbar' href='/docs/components/layouts/navbar'>\n                        <IconBrandCleon className='size-5' />\n                    </Navbar.Logo>\n                </Navbar.Flex>\n                <Navbar.Flex>\n                    <Navbar.Flex>\n                        <Button variant='ghost' icon aria-label='Search for products'>\n                            <IconSearch />\n                        </Button>\n                        <Button variant='ghost' icon aria-label='Your Bag'>\n                            <IconShoppingBag />\n                        </Button>\n                        <ThemeToggle variant='ghost' />\n                    </Navbar.Flex>\n                    <Separator orientation='vertical' className='mr-3 ml-1 h-6' />\n                    <UserMenu />\n                </Navbar.Flex>\n            </Navbar.Compact>\n            <Navbar.Breadcrumbs>\n                <Breadcrumbs>\n                    <Breadcrumbs.Item href='#'>Home</Breadcrumbs.Item>\n                    <Breadcrumbs.Item href='#'>Blocks</Breadcrumbs.Item>\n                    <Breadcrumbs.Item>Navbar</Breadcrumbs.Item>\n                </Breadcrumbs>\n            </Navbar.Breadcrumbs>\n            <Navbar.Inset>{children}</Navbar.Inset>\n        </Navbar>\n    )\n}\n\nfunction UserMenu() {\n    return (\n        <Menu>\n            <Menu.Trigger aria-label='Open Menu'>\n                <Avatar alt='DQ' size='sm' shape='square' src='https://github.com/dq-alhq.png' />\n            </Menu.Trigger>\n            <Menu.Content placement='bottom right' className='sm:min-w-56'>\n                <Menu.Header>\n                    <span className='block'>DQ Al-Haqqi</span>\n                    <span className='font-normal text-muted-fg'>@dq-alhq</span>\n                </Menu.Header>\n                <Menu.Item href='#dashboard'>\n                    <IconGauge />\n                    Dashboard\n                </Menu.Item>\n                <Menu.Item href='#settings'>\n                    <IconSettings />\n                    Settings\n                </Menu.Item>\n                <Menu.Item href='#security'>\n                    <IconShield />\n                    Security\n                </Menu.Item>\n                <Menu.Separator />\n                <Menu.Item href='#logout'>\n                    <IconLogOut />\n                    Log out\n                </Menu.Item>\n            </Menu.Content>\n        </Menu>\n    )\n}\n",
  "application/dashboard/simple/app-sidebar-nav.tsx": "'use client'\n\nimport { IconBrandCleon, IconLogOut, IconSettings } from 'hq-icons'\n\nimport { ThemeToggle } from '@/components/theme-toggle'\nimport { Avatar, Breadcrumbs, Link, Menu, SidebarNav } from '@/components/ui'\n\nexport default function AppSidebarNav() {\n    return (\n        <SidebarNav>\n            <Link href='#' className='ml-auto pl-16 md:hidden'>\n                <IconBrandCleon className='size-6' />\n            </Link>\n            <Breadcrumbs className='hidden md:flex'>\n                <Breadcrumbs.Item href='#'>Dashboard</Breadcrumbs.Item>\n                <Breadcrumbs.Item>Content</Breadcrumbs.Item>\n            </Breadcrumbs>\n            <div className='ml-auto'>\n                <ThemeToggle variant='ghost' />\n            </div>\n            <Menu>\n                <Menu.Trigger className='md:hidden' aria-label='Open Menu'>\n                    <Avatar alt='Diqi Al-Haqqi' src='https://github.com/dq-alhq.png' />\n                </Menu.Trigger>\n                <Menu.Content placement='right bottom' className='sm:min-w-(--trigger-width)'>\n                    <Menu.Header>\n                        <span className='block'>DQ Al Haqqi</span>\n                        <span className='font-normal text-muted-fg'>@dq-alhq</span>\n                    </Menu.Header>\n                    <Menu.Item href='#settings'>\n                        <IconSettings />\n                        Settings\n                    </Menu.Item>\n                    <Menu.Item href='#logout'>\n                        <IconLogOut />\n                        Log out\n                    </Menu.Item>\n                </Menu.Content>\n            </Menu>\n        </SidebarNav>\n    )\n}\n",
  "application/dashboard/simple/page.tsx": "'use client'\n\nimport ChartAreaInteractive from '@/components/chart-area'\nimport DataTable from '@/components/data-table'\nimport Stats from '@/components/stats'\n\nimport data from '@/components/data.json'\n\nexport default function Dashboard() {\n    return (\n        <div className='flex flex-1 flex-col'>\n            <div className='flex flex-1 flex-col gap-2'>\n                <div className='flex flex-col gap-4 py-4 md:gap-6 md:py-6'>\n                    <Stats />\n                    <div className='px-4 lg:px-6'>\n                        <ChartAreaInteractive />\n                    </div>\n                    <div className='px-4 lg:px-6'>\n                        <DataTable data={data} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n",
  "application/dashboard/simple/data.json": "[\n  {\n    \"id\": 1,\n    \"header\": \"Cover page\",\n    \"type\": \"Cover page\",\n    \"status\": \"In Process\",\n    \"target\": \"18\",\n    \"limit\": \"5\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 2,\n    \"header\": \"Table of contents\",\n    \"type\": \"Table of contents\",\n    \"status\": \"Done\",\n    \"target\": \"29\",\n    \"limit\": \"24\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 3,\n    \"header\": \"Executive summary\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"10\",\n    \"limit\": \"13\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 4,\n    \"header\": \"Technical approach\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"27\",\n    \"limit\": \"23\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 5,\n    \"header\": \"Design\",\n    \"type\": \"Narrative\",\n    \"status\": \"In Process\",\n    \"target\": \"2\",\n    \"limit\": \"16\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 6,\n    \"header\": \"Capabilities\",\n    \"type\": \"Narrative\",\n    \"status\": \"In Process\",\n    \"target\": \"20\",\n    \"limit\": \"8\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 7,\n    \"header\": \"Integration with existing systems\",\n    \"type\": \"Narrative\",\n    \"status\": \"In Process\",\n    \"target\": \"19\",\n    \"limit\": \"21\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 8,\n    \"header\": \"Innovation and Advantages\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"25\",\n    \"limit\": \"26\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 9,\n    \"header\": \"Overview of EMR's Innovative Solutions\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"7\",\n    \"limit\": \"23\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 10,\n    \"header\": \"Advanced Algorithms and Machine Learning\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"30\",\n    \"limit\": \"28\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 11,\n    \"header\": \"Adaptive Communication Protocols\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"9\",\n    \"limit\": \"31\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 12,\n    \"header\": \"Advantages Over Current Technologies\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"12\",\n    \"limit\": \"0\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 13,\n    \"header\": \"Past Performance\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"22\",\n    \"limit\": \"33\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 14,\n    \"header\": \"Customer Feedback and Satisfaction Levels\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"15\",\n    \"limit\": \"34\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 15,\n    \"header\": \"Implementation Challenges and Solutions\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"3\",\n    \"limit\": \"35\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 16,\n    \"header\": \"Security Measures and Data Protection Policies\",\n    \"type\": \"Narrative\",\n    \"status\": \"In Process\",\n    \"target\": \"6\",\n    \"limit\": \"36\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 17,\n    \"header\": \"Scalability and Future Proofing\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"4\",\n    \"limit\": \"37\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 18,\n    \"header\": \"Cost-Benefit Analysis\",\n    \"type\": \"Plain language\",\n    \"status\": \"Done\",\n    \"target\": \"14\",\n    \"limit\": \"38\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 19,\n    \"header\": \"User Training and Onboarding Experience\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"17\",\n    \"limit\": \"39\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 20,\n    \"header\": \"Future Development Roadmap\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"11\",\n    \"limit\": \"40\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 21,\n    \"header\": \"System Architecture Overview\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"24\",\n    \"limit\": \"18\",\n    \"reviewer\": \"Maya Johnson\"\n  },\n  {\n    \"id\": 22,\n    \"header\": \"Risk Management Plan\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"15\",\n    \"limit\": \"22\",\n    \"reviewer\": \"Carlos Rodriguez\"\n  },\n  {\n    \"id\": 23,\n    \"header\": \"Compliance Documentation\",\n    \"type\": \"Legal\",\n    \"status\": \"In Process\",\n    \"target\": \"31\",\n    \"limit\": \"27\",\n    \"reviewer\": \"Sarah Chen\"\n  },\n  {\n    \"id\": 24,\n    \"header\": \"API Documentation\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"8\",\n    \"limit\": \"12\",\n    \"reviewer\": \"Raj Patel\"\n  },\n  {\n    \"id\": 25,\n    \"header\": \"User Interface Mockups\",\n    \"type\": \"Visual\",\n    \"status\": \"In Process\",\n    \"target\": \"19\",\n    \"limit\": \"25\",\n    \"reviewer\": \"Leila Ahmadi\"\n  },\n  {\n    \"id\": 26,\n    \"header\": \"Database Schema\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"22\",\n    \"limit\": \"20\",\n    \"reviewer\": \"Thomas Wilson\"\n  },\n  {\n    \"id\": 27,\n    \"header\": \"Testing Methodology\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"17\",\n    \"limit\": \"14\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 28,\n    \"header\": \"Deployment Strategy\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"26\",\n    \"limit\": \"30\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 29,\n    \"header\": \"Budget Breakdown\",\n    \"type\": \"Financial\",\n    \"status\": \"In Process\",\n    \"target\": \"13\",\n    \"limit\": \"16\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 30,\n    \"header\": \"Market Analysis\",\n    \"type\": \"Research\",\n    \"status\": \"Done\",\n    \"target\": \"29\",\n    \"limit\": \"32\",\n    \"reviewer\": \"Sophia Martinez\"\n  },\n  {\n    \"id\": 31,\n    \"header\": \"Competitor Comparison\",\n    \"type\": \"Research\",\n    \"status\": \"In Process\",\n    \"target\": \"21\",\n    \"limit\": \"19\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 32,\n    \"header\": \"Maintenance Plan\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"16\",\n    \"limit\": \"23\",\n    \"reviewer\": \"Alex Thompson\"\n  },\n  {\n    \"id\": 33,\n    \"header\": \"User Personas\",\n    \"type\": \"Research\",\n    \"status\": \"In Process\",\n    \"target\": \"27\",\n    \"limit\": \"24\",\n    \"reviewer\": \"Nina Patel\"\n  },\n  {\n    \"id\": 34,\n    \"header\": \"Accessibility Compliance\",\n    \"type\": \"Legal\",\n    \"status\": \"Done\",\n    \"target\": \"18\",\n    \"limit\": \"21\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 35,\n    \"header\": \"Performance Metrics\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"23\",\n    \"limit\": \"26\",\n    \"reviewer\": \"David Kim\"\n  },\n  {\n    \"id\": 36,\n    \"header\": \"Disaster Recovery Plan\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"14\",\n    \"limit\": \"17\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 37,\n    \"header\": \"Third-party Integrations\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"25\",\n    \"limit\": \"28\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 38,\n    \"header\": \"User Feedback Summary\",\n    \"type\": \"Research\",\n    \"status\": \"Done\",\n    \"target\": \"20\",\n    \"limit\": \"15\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 39,\n    \"header\": \"Localization Strategy\",\n    \"type\": \"Narrative\",\n    \"status\": \"In Process\",\n    \"target\": \"12\",\n    \"limit\": \"19\",\n    \"reviewer\": \"Maria Garcia\"\n  },\n  {\n    \"id\": 40,\n    \"header\": \"Mobile Compatibility\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"28\",\n    \"limit\": \"31\",\n    \"reviewer\": \"James Wilson\"\n  },\n  {\n    \"id\": 41,\n    \"header\": \"Data Migration Plan\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"19\",\n    \"limit\": \"22\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 42,\n    \"header\": \"Quality Assurance Protocols\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"30\",\n    \"limit\": \"33\",\n    \"reviewer\": \"Priya Singh\"\n  },\n  {\n    \"id\": 43,\n    \"header\": \"Stakeholder Analysis\",\n    \"type\": \"Research\",\n    \"status\": \"In Process\",\n    \"target\": \"11\",\n    \"limit\": \"14\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 44,\n    \"header\": \"Environmental Impact Assessment\",\n    \"type\": \"Research\",\n    \"status\": \"Done\",\n    \"target\": \"24\",\n    \"limit\": \"27\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 45,\n    \"header\": \"Intellectual Property Rights\",\n    \"type\": \"Legal\",\n    \"status\": \"In Process\",\n    \"target\": \"17\",\n    \"limit\": \"20\",\n    \"reviewer\": \"Sarah Johnson\"\n  },\n  {\n    \"id\": 46,\n    \"header\": \"Customer Support Framework\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"22\",\n    \"limit\": \"25\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 47,\n    \"header\": \"Version Control Strategy\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"15\",\n    \"limit\": \"18\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 48,\n    \"header\": \"Continuous Integration Pipeline\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"26\",\n    \"limit\": \"29\",\n    \"reviewer\": \"Michael Chen\"\n  },\n  {\n    \"id\": 49,\n    \"header\": \"Regulatory Compliance\",\n    \"type\": \"Legal\",\n    \"status\": \"In Process\",\n    \"target\": \"13\",\n    \"limit\": \"16\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 50,\n    \"header\": \"User Authentication System\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"28\",\n    \"limit\": \"31\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 51,\n    \"header\": \"Data Analytics Framework\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"21\",\n    \"limit\": \"24\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 52,\n    \"header\": \"Cloud Infrastructure\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"16\",\n    \"limit\": \"19\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 53,\n    \"header\": \"Network Security Measures\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"29\",\n    \"limit\": \"32\",\n    \"reviewer\": \"Lisa Wong\"\n  },\n  {\n    \"id\": 54,\n    \"header\": \"Project Timeline\",\n    \"type\": \"Planning\",\n    \"status\": \"Done\",\n    \"target\": \"14\",\n    \"limit\": \"17\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 55,\n    \"header\": \"Resource Allocation\",\n    \"type\": \"Planning\",\n    \"status\": \"In Process\",\n    \"target\": \"27\",\n    \"limit\": \"30\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 56,\n    \"header\": \"Team Structure and Roles\",\n    \"type\": \"Planning\",\n    \"status\": \"Done\",\n    \"target\": \"20\",\n    \"limit\": \"23\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 57,\n    \"header\": \"Communication Protocols\",\n    \"type\": \"Planning\",\n    \"status\": \"In Process\",\n    \"target\": \"15\",\n    \"limit\": \"18\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 58,\n    \"header\": \"Success Metrics\",\n    \"type\": \"Planning\",\n    \"status\": \"Done\",\n    \"target\": \"30\",\n    \"limit\": \"33\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 59,\n    \"header\": \"Internationalization Support\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"23\",\n    \"limit\": \"26\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 60,\n    \"header\": \"Backup and Recovery Procedures\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"18\",\n    \"limit\": \"21\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 61,\n    \"header\": \"Monitoring and Alerting System\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"25\",\n    \"limit\": \"28\",\n    \"reviewer\": \"Daniel Park\"\n  },\n  {\n    \"id\": 62,\n    \"header\": \"Code Review Guidelines\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"12\",\n    \"limit\": \"15\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 63,\n    \"header\": \"Documentation Standards\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"27\",\n    \"limit\": \"30\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 64,\n    \"header\": \"Release Management Process\",\n    \"type\": \"Planning\",\n    \"status\": \"Done\",\n    \"target\": \"22\",\n    \"limit\": \"25\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 65,\n    \"header\": \"Feature Prioritization Matrix\",\n    \"type\": \"Planning\",\n    \"status\": \"In Process\",\n    \"target\": \"19\",\n    \"limit\": \"22\",\n    \"reviewer\": \"Emma Davis\"\n  },\n  {\n    \"id\": 66,\n    \"header\": \"Technical Debt Assessment\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"24\",\n    \"limit\": \"27\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 67,\n    \"header\": \"Capacity Planning\",\n    \"type\": \"Planning\",\n    \"status\": \"In Process\",\n    \"target\": \"21\",\n    \"limit\": \"24\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 68,\n    \"header\": \"Service Level Agreements\",\n    \"type\": \"Legal\",\n    \"status\": \"Done\",\n    \"target\": \"26\",\n    \"limit\": \"29\",\n    \"reviewer\": \"Assign reviewer\"\n  }\n]\n",
  "application/dashboard/simple/layout.tsx": "import { SidebarInset } from '@/components/ui'\n\nimport AppSidebar from '@/components/app-sidebar'\nimport AppSidebarNav from '@/components/app-sidebar-nav'\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n    return (\n        <div className='flex'>\n            <AppSidebar />\n            <SidebarInset>\n                <AppSidebarNav />\n                {children}\n            </SidebarInset>\n        </div>\n    )\n}\n",
  "application/dashboard/simple/app-sidebar.tsx": "'use client'\n\nimport {\n    IconBrandCleon,\n    IconChevronRight,\n    IconCreditCard,\n    IconEllipsis,\n    IconGauge,\n    IconLogOut,\n    IconMessage,\n    IconNotebook,\n    IconSettings,\n    IconTicket\n} from 'hq-icons'\n\nimport { Menu, Sidebar, User } from '@/components/ui'\n\nexport default function AppSidebar() {\n    return (\n        <Sidebar variant='default' collapsible='dock'>\n            <Sidebar.Header>\n                <IconBrandCleon />\n                <Sidebar.Label>HQ UI</Sidebar.Label>\n            </Sidebar.Header>\n            <Sidebar.Content>\n                <Sidebar.Section title='Overview'>\n                    <Sidebar.Item tooltip='Overview' isCurrent href='#'>\n                        <IconGauge />\n                        <Sidebar.Label>Overview</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item href='#' badge='4 Pending' tooltip='Payments'>\n                        <IconCreditCard />\n                        <Sidebar.Label>Payments</Sidebar.Label>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n\n                <Sidebar.Section defaultExpandedKeys={[1]}>\n                    <Sidebar.Item id={1}>\n                        <Sidebar.SubItemTrigger>\n                            <IconEllipsis />\n                            <Sidebar.Label>Support</Sidebar.Label>\n                        </Sidebar.SubItemTrigger>\n                        <Sidebar.SubItem>\n                            <Sidebar.Item href='#'>\n                                <IconTicket />\n                                <Sidebar.Label>Tickets</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconMessage />\n                                <Sidebar.Label>Chat Support</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <Sidebar.Label>FAQ</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconNotebook />\n                                <Sidebar.Label>Documentation</Sidebar.Label>\n                            </Sidebar.Item>\n                        </Sidebar.SubItem>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n            </Sidebar.Content>\n            <Sidebar.Footer>\n                <Menu>\n                    <Menu.Trigger\n                        slot={null}\n                        className='group flex size-full items-center justify-between rounded-lg pressed:bg-muted p-2 hover:bg-muted'\n                    >\n                        <User\n                            src='https://github.com/dq-alhq.png'\n                            name='DQ Al Haqqi'\n                            description='@dq-alhq'\n                            shape='square'\n                        />\n                        <IconChevronRight className='group-aria-expanded:-rotate-90 size-4' />\n                    </Menu.Trigger>\n                    <Menu.Content placement='top left' className='sm:min-w-(--trigger-width)'>\n                        <Menu.Header>\n                            <span className='block'>DQ Al Haqqi</span>\n                            <span className='font-normal text-muted-fg'>@dq-alhq</span>\n                        </Menu.Header>\n                        <Menu.Item href='#settings'>\n                            <IconSettings />\n                            Settings\n                        </Menu.Item>\n                        <Menu.Item href='#logout'>\n                            <IconLogOut />\n                            Log out\n                        </Menu.Item>\n                    </Menu.Content>\n                </Menu>\n            </Sidebar.Footer>\n            <Sidebar.Rail />\n            <Sidebar.Trigger />\n        </Sidebar>\n    )\n}\n",
  "application/dashboard/simple/data-table.tsx": "import { Card, Table } from '@/components/ui'\n\ntype Item = {\n    id: number\n    header: string\n    type: string\n    status: string\n    target: string\n    limit: string\n    reviewer: string\n}\n\nexport default function DataTable({ data }: { data: Item[] }) {\n    return (\n        <Card>\n            <Table>\n                <Table.Header>\n                    <Table.Column className='w-0'>#</Table.Column>\n                    <Table.Column isRowHeader>Name</Table.Column>\n                    <Table.Column>Type</Table.Column>\n                    <Table.Column>Status</Table.Column>\n                </Table.Header>\n                <Table.Body items={data}>\n                    {(item) => (\n                        <Table.Row>\n                            <Table.Cell>{item.id}</Table.Cell>\n                            <Table.Cell>{item.header}</Table.Cell>\n                            <Table.Cell>{item.type}</Table.Cell>\n                            <Table.Cell>{item.status}</Table.Cell>\n                        </Table.Row>\n                    )}\n                </Table.Body>\n            </Table>\n        </Card>\n    )\n}\n",
  "application/dashboard/simple/stats.tsx": "import { IconTrendingDown, IconTrendingUp } from 'hq-icons'\n\nimport { Badge, Card } from '@/components/ui'\n\nexport default function Stats() {\n    return (\n        <div className='grid grid-cols-1 gap-4 px-4 md:grid-cols-2 lg:px-6 xl:grid-cols-4'>\n            <Card>\n                <Card.Header className='relative'>\n                    <Card.Description>Total Revenue</Card.Description>\n                    <Card.Title className='font-semibold text-2xl tabular-nums md:text-3xl'>$1,250.00</Card.Title>\n                    <div className='absolute top-4 right-4'>\n                        <Badge variant='outline'>\n                            <IconTrendingUp />\n                            +12.5%\n                        </Badge>\n                    </div>\n                </Card.Header>\n                <Card.Footer className='flex-col items-start gap-1 text-sm lg:flex-col'>\n                    <div className='line-clamp-1 flex gap-2 font-medium'>\n                        Trending up this month <IconTrendingUp className='size-4' />\n                    </div>\n                    <div className='text-muted-foreground'>Visitors for the last 6 months</div>\n                </Card.Footer>\n            </Card>\n            <Card>\n                <Card.Header className='relative'>\n                    <Card.Description>New Customers</Card.Description>\n                    <Card.Title className='font-semibold text-2xl tabular-nums md:text-3xl'>1,234</Card.Title>\n                    <div className='absolute top-4 right-4'>\n                        <Badge variant='outline'>\n                            <IconTrendingDown />\n                            -20%\n                        </Badge>\n                    </div>\n                </Card.Header>\n                <Card.Footer className='flex-col items-start gap-1 text-sm lg:flex-col'>\n                    <div className='line-clamp-1 flex gap-2 font-medium'>\n                        Down 20% this period <IconTrendingDown className='size-4' />\n                    </div>\n                    <div className='text-muted-foreground'>Acquisition needs attention</div>\n                </Card.Footer>\n            </Card>\n            <Card>\n                <Card.Header className='relative'>\n                    <Card.Description>Active Accounts</Card.Description>\n                    <Card.Title className='font-semibold text-2xl tabular-nums md:text-3xl'>45,678</Card.Title>\n                    <div className='absolute top-4 right-4'>\n                        <Badge variant='outline'>\n                            <IconTrendingUp />\n                            +12.5%\n                        </Badge>\n                    </div>\n                </Card.Header>\n                <Card.Footer className='flex-col items-start gap-1 text-sm lg:flex-col'>\n                    <div className='line-clamp-1 flex gap-2 font-medium'>\n                        Strong user retention <IconTrendingUp className='size-4' />\n                    </div>\n                    <div className='text-muted-foreground'>Engagement exceed targets</div>\n                </Card.Footer>\n            </Card>\n            <Card>\n                <Card.Header className='relative'>\n                    <Card.Description>Growth Rate</Card.Description>\n                    <Card.Title className='font-semibold text-2xl tabular-nums md:text-3xl'>4.5%</Card.Title>\n                    <div className='absolute top-4 right-4'>\n                        <Badge variant='outline'>\n                            <IconTrendingUp />\n                            +4.5%\n                        </Badge>\n                    </div>\n                </Card.Header>\n                <Card.Footer className='flex-col items-start gap-1 text-sm lg:flex-col'>\n                    <div className='line-clamp-1 flex gap-2 font-medium'>\n                        Steady performance <IconTrendingUp className='size-4' />\n                    </div>\n                    <div className='text-muted-foreground'>Meets growth projections</div>\n                </Card.Footer>\n            </Card>\n        </div>\n    )\n}\n",
  "application/dashboard/simple/chart-area.tsx": "'use client'\n\nimport { useEffect, useState } from 'react'\n\nimport type { Selection } from 'react-aria-components'\nimport { Area, AreaChart, CartesianGrid, XAxis } from 'recharts'\n\nimport { Card, Chart, type ChartConfig, Select, Toggle, ToggleGroup } from '@/components/ui'\nimport { useIsMobile } from '@/lib/hooks'\n\nconst chartData = [\n    { date: '2024-04-01', desktop: 222, mobile: 150 },\n    { date: '2024-04-02', desktop: 97, mobile: 180 },\n    { date: '2024-04-03', desktop: 167, mobile: 120 },\n    { date: '2024-04-04', desktop: 242, mobile: 260 },\n    { date: '2024-04-05', desktop: 373, mobile: 290 },\n    { date: '2024-04-06', desktop: 301, mobile: 340 },\n    { date: '2024-04-07', desktop: 245, mobile: 180 },\n    { date: '2024-04-08', desktop: 409, mobile: 320 },\n    { date: '2024-04-09', desktop: 59, mobile: 110 },\n    { date: '2024-04-10', desktop: 261, mobile: 190 },\n    { date: '2024-04-11', desktop: 327, mobile: 350 },\n    { date: '2024-04-12', desktop: 292, mobile: 210 },\n    { date: '2024-04-13', desktop: 342, mobile: 380 },\n    { date: '2024-04-14', desktop: 137, mobile: 220 },\n    { date: '2024-04-15', desktop: 120, mobile: 170 },\n    { date: '2024-04-16', desktop: 138, mobile: 190 },\n    { date: '2024-04-17', desktop: 446, mobile: 360 },\n    { date: '2024-04-18', desktop: 364, mobile: 410 },\n    { date: '2024-04-19', desktop: 243, mobile: 180 },\n    { date: '2024-04-20', desktop: 89, mobile: 150 },\n    { date: '2024-04-21', desktop: 137, mobile: 200 },\n    { date: '2024-04-22', desktop: 224, mobile: 170 },\n    { date: '2024-04-23', desktop: 138, mobile: 230 },\n    { date: '2024-04-24', desktop: 387, mobile: 290 },\n    { date: '2024-04-25', desktop: 215, mobile: 250 },\n    { date: '2024-04-26', desktop: 75, mobile: 130 },\n    { date: '2024-04-27', desktop: 383, mobile: 420 },\n    { date: '2024-04-28', desktop: 122, mobile: 180 },\n    { date: '2024-04-29', desktop: 315, mobile: 240 },\n    { date: '2024-04-30', desktop: 454, mobile: 380 },\n    { date: '2024-05-01', desktop: 165, mobile: 220 },\n    { date: '2024-05-02', desktop: 293, mobile: 310 },\n    { date: '2024-05-03', desktop: 247, mobile: 190 },\n    { date: '2024-05-04', desktop: 385, mobile: 420 },\n    { date: '2024-05-05', desktop: 481, mobile: 390 },\n    { date: '2024-05-06', desktop: 498, mobile: 520 },\n    { date: '2024-05-07', desktop: 388, mobile: 300 },\n    { date: '2024-05-08', desktop: 149, mobile: 210 },\n    { date: '2024-05-09', desktop: 227, mobile: 180 },\n    { date: '2024-05-10', desktop: 293, mobile: 330 },\n    { date: '2024-05-11', desktop: 335, mobile: 270 },\n    { date: '2024-05-12', desktop: 197, mobile: 240 },\n    { date: '2024-05-13', desktop: 197, mobile: 160 },\n    { date: '2024-05-14', desktop: 448, mobile: 490 },\n    { date: '2024-05-15', desktop: 473, mobile: 380 },\n    { date: '2024-05-16', desktop: 338, mobile: 400 },\n    { date: '2024-05-17', desktop: 499, mobile: 420 },\n    { date: '2024-05-18', desktop: 315, mobile: 350 },\n    { date: '2024-05-19', desktop: 235, mobile: 180 },\n    { date: '2024-05-20', desktop: 177, mobile: 230 },\n    { date: '2024-05-21', desktop: 82, mobile: 140 },\n    { date: '2024-05-22', desktop: 81, mobile: 120 },\n    { date: '2024-05-23', desktop: 252, mobile: 290 },\n    { date: '2024-05-24', desktop: 294, mobile: 220 },\n    { date: '2024-05-25', desktop: 201, mobile: 250 },\n    { date: '2024-05-26', desktop: 213, mobile: 170 },\n    { date: '2024-05-27', desktop: 420, mobile: 460 },\n    { date: '2024-05-28', desktop: 233, mobile: 190 },\n    { date: '2024-05-29', desktop: 78, mobile: 130 },\n    { date: '2024-05-30', desktop: 340, mobile: 280 },\n    { date: '2024-05-31', desktop: 178, mobile: 230 },\n    { date: '2024-06-01', desktop: 178, mobile: 200 },\n    { date: '2024-06-02', desktop: 470, mobile: 410 },\n    { date: '2024-06-03', desktop: 103, mobile: 160 },\n    { date: '2024-06-04', desktop: 439, mobile: 380 },\n    { date: '2024-06-05', desktop: 88, mobile: 140 },\n    { date: '2024-06-06', desktop: 294, mobile: 250 },\n    { date: '2024-06-07', desktop: 323, mobile: 370 },\n    { date: '2024-06-08', desktop: 385, mobile: 320 },\n    { date: '2024-06-09', desktop: 438, mobile: 480 },\n    { date: '2024-06-10', desktop: 155, mobile: 200 },\n    { date: '2024-06-11', desktop: 92, mobile: 150 },\n    { date: '2024-06-12', desktop: 492, mobile: 420 },\n    { date: '2024-06-13', desktop: 81, mobile: 130 },\n    { date: '2024-06-14', desktop: 426, mobile: 380 },\n    { date: '2024-06-15', desktop: 307, mobile: 350 },\n    { date: '2024-06-16', desktop: 371, mobile: 310 },\n    { date: '2024-06-17', desktop: 475, mobile: 520 },\n    { date: '2024-06-18', desktop: 107, mobile: 170 },\n    { date: '2024-06-19', desktop: 341, mobile: 290 },\n    { date: '2024-06-20', desktop: 408, mobile: 450 },\n    { date: '2024-06-21', desktop: 169, mobile: 210 },\n    { date: '2024-06-22', desktop: 317, mobile: 270 },\n    { date: '2024-06-23', desktop: 480, mobile: 530 },\n    { date: '2024-06-24', desktop: 132, mobile: 180 },\n    { date: '2024-06-25', desktop: 141, mobile: 190 },\n    { date: '2024-06-26', desktop: 434, mobile: 380 },\n    { date: '2024-06-27', desktop: 448, mobile: 490 },\n    { date: '2024-06-28', desktop: 149, mobile: 200 },\n    { date: '2024-06-29', desktop: 103, mobile: 160 },\n    { date: '2024-06-30', desktop: 446, mobile: 400 }\n]\n\nconst chartConfig = {\n    visitors: {\n        label: 'Visitors'\n    },\n    desktop: {\n        label: 'Desktop',\n        color: 'hsl(var(--chart-1))'\n    },\n    mobile: {\n        label: 'Mobile',\n        color: 'hsl(var(--chart-2))'\n    }\n} satisfies ChartConfig\n\nexport default function ChartAreaInteractive() {\n    const isMobile = useIsMobile()\n    const [timeRange, setTimeRange] = useState<Selection>(new Set(['30d']))\n\n    useEffect(() => {\n        if (isMobile) {\n            setTimeRange(new Set(['7d']))\n        }\n    }, [isMobile])\n\n    const filteredData = chartData.filter((item) => {\n        const date = new Date(item.date)\n        const referenceDate = new Date('2024-06-30')\n        let daysToSubtract = 90\n        if ([...timeRange].flat().join('') === '30d') {\n            daysToSubtract = 30\n        } else if ([...timeRange].flat().join('') === '7d') {\n            daysToSubtract = 7\n        }\n        const startDate = new Date(referenceDate)\n        startDate.setDate(startDate.getDate() - daysToSubtract)\n        return date >= startDate\n    })\n\n    return (\n        <Card className='@container/card'>\n            <Card.Header className='relative'>\n                <Card.Title>Total Visitors</Card.Title>\n                <Card.Description>\n                    <span className='@[540px]/card:block hidden'>Total for the last 3 months</span>\n                    <span className='@[540px]/card:hidden'>Last 3 months</span>\n                </Card.Description>\n                <div className='absolute top-4 right-4'>\n                    <ToggleGroup\n                        selectionMode='single'\n                        selectedKeys={timeRange}\n                        onSelectionChange={setTimeRange}\n                        variant='outline'\n                        className='@[767px]/card:flex hidden'\n                    >\n                        <Toggle id='90d' className='h-8 px-2.5'>\n                            Last 3 months\n                        </Toggle>\n                        <Toggle id='30d' className='h-8 px-2.5'>\n                            Last 30 days\n                        </Toggle>\n                        <Toggle id='7d' className='h-8 px-2.5'>\n                            Last 7 days\n                        </Toggle>\n                    </ToggleGroup>\n                    <Select\n                        className='@[767px]/card:hidden'\n                        selectedKey={[...timeRange].flat().join('')}\n                        onSelectionChange={(id) => setTimeRange(new Set([id]))}\n                    >\n                        <Select.Item id='90d' className='rounded-lg'>\n                            Last 3 months\n                        </Select.Item>\n                        <Select.Item id='30d' className='rounded-lg'>\n                            Last 30 days\n                        </Select.Item>\n                        <Select.Item id='7d' className='rounded-lg'>\n                            Last 7 days\n                        </Select.Item>\n                    </Select>\n                </div>\n            </Card.Header>\n            <Card.Content className='px-2 pt-4 sm:px-6 sm:pt-6'>\n                <Chart config={chartConfig} className='aspect-auto h-[250px] w-full'>\n                    <AreaChart data={filteredData}>\n                        <defs>\n                            <linearGradient id='fillDesktop' x1='0' y1='0' x2='0' y2='1'>\n                                <stop offset='5%' stopColor='var(--color-chart-1)' stopOpacity={1.0} />\n                                <stop offset='95%' stopColor='var(--color-chart-2)' stopOpacity={0.1} />\n                            </linearGradient>\n                            <linearGradient id='fillMobile' x1='0' y1='0' x2='0' y2='1'>\n                                <stop offset='5%' stopColor='var(--color-chart-2)' stopOpacity={0.8} />\n                                <stop offset='95%' stopColor='var(--color-chart-3)' stopOpacity={0.1} />\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid vertical={false} />\n                        <XAxis\n                            dataKey='date'\n                            tickLine={false}\n                            axisLine={false}\n                            tickMargin={8}\n                            minTickGap={32}\n                            tickFormatter={(value) => {\n                                const date = new Date(value)\n                                return date.toLocaleDateString('en-US', {\n                                    month: 'short',\n                                    day: 'numeric'\n                                })\n                            }}\n                        />\n                        <Chart.Tooltip\n                            cursor={false}\n                            content={\n                                <Chart.TooltipContent\n                                    labelFormatter={(value) => {\n                                        return new Date(value).toLocaleDateString('en-US', {\n                                            month: 'short',\n                                            day: 'numeric'\n                                        })\n                                    }}\n                                    indicator='dot'\n                                />\n                            }\n                        />\n                        <Area\n                            dataKey='mobile'\n                            type='natural'\n                            fill='url(#fillMobile)'\n                            stroke='var(--color-chart-1)'\n                            stackId='a'\n                        />\n                        <Area\n                            dataKey='desktop'\n                            type='natural'\n                            fill='url(#fillDesktop)'\n                            stroke='var(--color-chart-1)'\n                            stackId='a'\n                        />\n                    </AreaChart>\n                </Chart>\n            </Card.Content>\n        </Card>\n    )\n}\n",
  "application/dashboard/user-setting/plan-billing-setting.tsx": "'use client'\n\nimport { IconCircleUser, IconCreditCard, IconHash, IconLock, IconMap } from 'hq-icons'\n\nimport { Button, Card, DatePicker, Form, GridList, Heading, Note, TextField } from '@/components/ui'\n\nexport default function PlanBillingSetting() {\n    return (\n        <Card>\n            <Card.Header>\n                <Card.Title>Manage Your Plan</Card.Title>\n                <Card.Description>Upgrade or downgrade your current plan.</Card.Description>\n            </Card.Header>\n            <Form>\n                <Card.Content className='grid gap-4'>\n                    <Note>\n                        Changing the plan will take effect immediately. You will be charged for the rest of the current\n                        month.\n                    </Note>\n                    <GridList aria-label='Select items' selectionMode='single'>\n                        <GridList.Item textValue='Basic'>Basic</GridList.Item>\n                        <GridList.Item textValue='Standard'>Standard</GridList.Item>\n                        <GridList.Item textValue='Deluxe'>Deluxe</GridList.Item>\n                        <GridList.Item textValue='Ultimate'>Ultimate</GridList.Item>\n                    </GridList>\n                    <Heading level={4}>Payment Details</Heading>\n                    <TextField\n                        autoFocus\n                        prefix={<IconCircleUser />}\n                        label='Card Holder'\n                        name='card_holder'\n                        id='card_holder'\n                    />\n                    <div className='grid gap-4 md:grid-cols-4'>\n                        <TextField\n                            className='md:col-span-2'\n                            prefix={<IconCreditCard />}\n                            label='Card Number'\n                            name='card_number'\n                            id='card_number'\n                        />\n                        <DatePicker label='Expiration Date' name='expiration_date' id='expiration_date' />\n                        <TextField prefix={<IconLock />} label='CVC / CVC2' name='cvc' id='cvc' />\n                    </div>\n                    <div className='grid gap-4 lg:grid-cols-2'>\n                        <TextField prefix={<IconMap />} label='Country' name='country' id='country' />\n                        <TextField prefix={<IconHash />} label='Zip / Postal Code' name='zip' id='zip' />\n                    </div>\n                </Card.Content>\n                <Card.Footer>\n                    <Button>Save</Button>\n                </Card.Footer>\n            </Form>\n        </Card>\n    )\n}\n",
  "application/dashboard/user-setting/page.tsx": "'use client'\n\nimport { Card, Container, Tabs } from '@/components/ui'\nimport { useIsMobile } from '@/lib/hooks'\nimport AccountSetting from '@/components/account-setting'\nimport DangerArea from '@/components/danger-area'\nimport PlanBillingSetting from '@/components/plan-billing-setting'\nimport SecuritySetting from '@/components/security-setting'\n\nexport default function UserSetting() {\n    const isMobile = useIsMobile()\n    return (\n        <Container className='py-6 xl:py-12'>\n            <Card className='mb-6'>\n                <Card.Header>\n                    <Card.Title>User Setting</Card.Title>\n                    <Card.Description>Manage your account settings and preferences.</Card.Description>\n                </Card.Header>\n            </Card>\n            <Tabs orientation={isMobile ? 'horizontal' : 'vertical'} aria-label='E-Learning Platform'>\n                <Tabs.List>\n                    <Tabs.Label id='account'>Account</Tabs.Label>\n                    <Tabs.Label id='security'>Security</Tabs.Label>\n                    <Tabs.Label id='plan'>Plan & Billing</Tabs.Label>\n                    <Tabs.Label id='danger'>Danger Area</Tabs.Label>\n                </Tabs.List>\n                <Tabs.Content id='account'>\n                    <AccountSetting />\n                </Tabs.Content>\n                <Tabs.Content id='security'>\n                    <SecuritySetting />\n                </Tabs.Content>\n                <Tabs.Content id='plan'>\n                    <PlanBillingSetting />\n                </Tabs.Content>\n                <Tabs.Content id='danger'>\n                    <DangerArea />\n                </Tabs.Content>\n            </Tabs>\n        </Container>\n    )\n}\n",
  "application/dashboard/user-setting/account-setting.tsx": "'use client'\n\nimport { useState } from 'react'\n\nimport type { DropEvent } from '@react-types/shared'\nimport { IconBrandFacebook, IconBrandGithub, IconBrandInstagram, IconBrandX } from 'hq-icons'\nimport { isFileDropItem } from 'react-aria-components'\n\nimport { Avatar, Button, Card, DropZone, FileTrigger, Form, TextField, Textarea } from '@/components/ui'\n\nexport default function AccountSetting() {\n    const [droppedImage, setDroppedImage] = useState<string>('')\n    async function onDropHandler(e: DropEvent) {\n        const item = e.items\n            .filter(isFileDropItem)\n            .find((item) => item.type === 'image/jpeg' || item.type === 'image/png')\n        if (item) {\n            const file = await item.getFile()\n            setDroppedImage(URL.createObjectURL(file))\n        }\n    }\n    async function onSelectHandler(e: FileList | null) {\n        if (e) {\n            const files = Array.from([...e])\n            const item = files[0]\n            if (item) {\n                setDroppedImage(URL.createObjectURL(item))\n            }\n        }\n    }\n    return (\n        <section className='space-y-4'>\n            <Card>\n                <Card.Header>\n                    <Card.Title>Account</Card.Title>\n                    <Card.Description>Your account details.</Card.Description>\n                </Card.Header>\n                <Form>\n                    <Card.Content className='space-y-4'>\n                        <div className='flex items-center gap-2'>\n                            <DropZone\n                                getDropOperation={(types) =>\n                                    types.has('image/jpeg') || types.has('image/png') ? 'copy' : 'cancel'\n                                }\n                                onDrop={onDropHandler}\n                                className='size-10 overflow-hidden rounded-full p-0'\n                            >\n                                <Avatar src={droppedImage ?? ''} size='lg' />\n                                <input type='hidden' name='image' value={droppedImage ?? ''} />\n                            </DropZone>\n                            <FileTrigger\n                                size='sm'\n                                acceptedFileTypes={['image/png', 'image/jpeg']}\n                                onSelect={onSelectHandler}\n                            >\n                                Upload avatar\n                            </FileTrigger>\n                        </div>\n                        <TextField\n                            autoFocus\n                            label='Name'\n                            placeholder='Enter your name'\n                            id='name'\n                            name='name'\n                            isRequired\n                        />\n                        <TextField\n                            type='email'\n                            isRequired\n                            label='Email'\n                            placeholder='Enter your email'\n                            id='email'\n                            name='email'\n                        />\n                        <Textarea label='Bio' placeholder='Enter your bio' id='bio' name='bio' />\n                    </Card.Content>\n                    <Card.Footer>\n                        <Button>Save</Button>\n                    </Card.Footer>\n                </Form>\n            </Card>\n            <Card>\n                <Form>\n                    <Card.Header>\n                        <Card.Title>Social Accounts</Card.Title>\n                        <Card.Description>Your social accounts.</Card.Description>\n                    </Card.Header>\n                    <Card.Content className='grid gap-4 lg:grid-cols-2'>\n                        <TextField label='Github Username' prefix={<IconBrandGithub />} id='github' name='github' />\n                        <TextField label='X Username' prefix={<IconBrandX />} id='twitter' name='twitter' />\n                        <TextField label='Facebook' prefix={<IconBrandFacebook />} id='facebook' name='facebook' />\n                        <TextField label='Instagram' prefix={<IconBrandInstagram />} id='ig' name='ig' />\n                    </Card.Content>\n                    <Card.Footer>\n                        <Button>Save</Button>\n                    </Card.Footer>\n                </Form>\n            </Card>\n        </section>\n    )\n}\n",
  "application/dashboard/user-setting/layout.tsx": "export default function Layout({ children }: { children: React.ReactNode }) {\n    return <main className='h-dvh w-full'>{children}</main>\n}\n",
  "application/dashboard/user-setting/danger-area.tsx": "'use client'\n\nimport { IconUserX } from 'hq-icons'\n\nimport { Button, Card, Form, Modal, Note, TextField } from '@/components/ui'\n\nexport default function SecuritySetting() {\n    return (\n        <Card>\n            <Card.Header>\n                <Card.Title>Danger Area</Card.Title>\n                <Card.Description>Delete your account.</Card.Description>\n            </Card.Header>\n            <Card.Footer className='sm:justify-start'>\n                <Modal>\n                    <Button variant='danger'>\n                        <IconUserX />\n                        Delete Account\n                    </Button>\n                    <Modal.Content role='alertdialog'>\n                        <Modal.Header>\n                            <Modal.Title>Delete Account</Modal.Title>\n                            <Modal.Description>\n                                This will permanently delete your account and all your data\n                            </Modal.Description>\n                            <Note variant='danger'>No undo button here, so be sure!</Note>\n                        </Modal.Header>\n                        <Form onSubmit={() => {}}>\n                            <Modal.Body>\n                                <TextField isRequired autoFocus label='Password' type='password' />\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button slot='close' variant='outline'>\n                                    Cancel\n                                </Button>\n                                <Button variant='danger'>Confirm</Button>\n                            </Modal.Footer>\n                        </Form>\n                    </Modal.Content>\n                </Modal>\n            </Card.Footer>\n        </Card>\n    )\n}\n",
  "application/dashboard/user-setting/security-setting.tsx": "'use client'\n\nimport { IconKey } from 'hq-icons'\n\nimport { Button, Card, Form, Switch, TextField } from '@/components/ui'\n\nexport default function SecuritySetting() {\n    return (\n        <Card>\n            <Card.Header>\n                <Card.Title>Security</Card.Title>\n                <Card.Description>Secure your account.</Card.Description>\n            </Card.Header>\n            <Form>\n                <Card.Content className='grid gap-4'>\n                    <TextField\n                        prefix={<IconKey />}\n                        autoFocus\n                        type='password'\n                        label='Current Password'\n                        id='current_password'\n                        name='current_password'\n                        isRequired\n                    />\n                    <TextField\n                        prefix={<IconKey />}\n                        type='password'\n                        label='New Password'\n                        id='new_password'\n                        name='new_password'\n                        isRequired\n                    />\n                    <TextField\n                        prefix={<IconKey />}\n                        type='password'\n                        label='Confirm New Password'\n                        id='new_password_confirm'\n                        name='new_password_confirm'\n                        isRequired\n                    />\n                    <div className='text-muted-fg'>Account Preferences</div>\n                    <Switch>Enable 2FA</Switch>\n                    <Switch>Auto Logout</Switch>\n                </Card.Content>\n                <Card.Footer>\n                    <Button>Save</Button>\n                </Card.Footer>\n            </Form>\n        </Card>\n    )\n}\n",
  "application/authentication/split-card/page.tsx": "'use client'\n\nimport { IconBrandCleon, IconBrandGithub, IconBrandGoogle, IconImage } from 'hq-icons'\n\nimport {\n    Button,\n    Card,\n    Checkbox,\n    Description,\n    Form,\n    Heading,\n    Link,\n    Separator,\n    Skeleton,\n    TextField,\n    toast\n} from '@/components/ui'\n\nexport default function Page() {\n    return (\n        <>\n            <Card className='grid w-full max-w-5xl lg:grid-cols-2'>\n                <div className='flex h-full items-center justify-center px-4 lg:px-8'>\n                    <div className='mx-auto w-full max-w-lg'>\n                        <div className='my-6 flex flex-col justify-center'>\n                            <Link href='#'>\n                                <IconBrandCleon className='mb-2 size-10' />\n                            </Link>\n                            <Heading level={1}>Register</Heading>\n                            <Description>Fill in the form below to create your account</Description>\n                        </div>\n                        <Form\n                            onSubmit={(e) => {\n                                e.preventDefault()\n                                toast.success('Dummy Login Successfully')\n                            }}\n                        >\n                            <div className='grid gap-4'>\n                                <TextField isRequired label='Name' placeholder='Enter your Name' />\n                                <TextField isRequired label='Email' type='email' placeholder='Enter your email' />\n                                <TextField\n                                    isRequired\n                                    label='Password'\n                                    type='password'\n                                    placeholder='Enter your password'\n                                />\n                                <TextField\n                                    isRequired\n                                    label='Confirm Password'\n                                    type='password'\n                                    placeholder='Enter your password'\n                                />\n                                <Checkbox>I agree to the terms and conditions</Checkbox>\n                                <Button type='submit' className='w-full'>\n                                    Login\n                                </Button>\n                                <Link href='#' className='text-center text-muted-fg text-sm hover:text-fg'>\n                                    Don't have an account? Register\n                                </Link>\n                                <Separator>Or continue with</Separator>\n                                <div className='flex gap-4 pb-6'>\n                                    <Button variant='outline' className='w-full'>\n                                        <IconBrandGithub className='size-4' />\n                                        Github\n                                    </Button>\n                                    <Button variant='outline' className='w-full'>\n                                        <IconBrandGoogle className='size-4' />\n                                        Google\n                                    </Button>\n                                </div>\n                            </div>\n                        </Form>\n                    </div>\n                </div>\n                <div className='relative hidden lg:block'>\n                    <Skeleton className='size-full' />\n                    <IconImage className='-translate-x-1/2 -translate-y-1/2 absolute top-1/2 left-1/2 size-24 text-muted-fg' />\n                </div>\n            </Card>\n        </>\n    )\n}\n",
  "application/authentication/split-card/layout.tsx": "export default function Layout({ children }: { children: React.ReactNode }) {\n    return (\n        <main className='flex h-dvh w-full flex-col items-center justify-center gap-6 bg-muted px-4 lg:px-8'>\n            {children}\n        </main>\n    )\n}\n",
  "application/authentication/overlay/page.tsx": "'use client'\n\nimport { useState } from 'react'\n\nimport { IconBrandCleon, IconBrandGithub, IconBrandGoogle, IconImage } from 'hq-icons'\n\nimport {\n    Button,\n    Card,\n    Checkbox,\n    Description,\n    Form,\n    Heading,\n    Link,\n    ModalContent,\n    Separator,\n    Skeleton,\n    TextField,\n    toast\n} from '@/components/ui'\n\nexport default function Page() {\n    const [isOpen, setIsOpen] = useState<boolean>(true)\n    return (\n        <>\n            <Button onPress={() => setIsOpen(true)}>Open</Button>\n            <ModalContent\n                size='5xl'\n                isOpen={isOpen}\n                onOpenChange={setIsOpen}\n                className='flex flex-col items-center justify-center gap-6'\n            >\n                <Card className='grid w-full max-w-5xl lg:grid-cols-2'>\n                    <div className='flex h-full items-center justify-center px-4 lg:px-8'>\n                        <div className='mx-auto w-full max-w-lg'>\n                            <div className='my-6 flex flex-col justify-center'>\n                                <Link href='#'>\n                                    <IconBrandCleon className='mb-2 size-10' />\n                                </Link>\n                                <Heading level={1}>Register</Heading>\n                                <Description>Fill in the form below to create your account</Description>\n                            </div>\n                            <Form\n                                onSubmit={(e) => {\n                                    e.preventDefault()\n                                    toast.success('Dummy Login Successfully')\n                                }}\n                            >\n                                <div className='grid gap-4'>\n                                    <TextField isRequired label='Name' placeholder='Enter your Name' />\n                                    <TextField isRequired label='Email' type='email' placeholder='Enter your email' />\n                                    <TextField\n                                        isRequired\n                                        label='Password'\n                                        type='password'\n                                        placeholder='Enter your password'\n                                    />\n                                    <TextField\n                                        isRequired\n                                        label='Confirm Password'\n                                        type='password'\n                                        placeholder='Enter your password'\n                                    />\n                                    <Checkbox>I agree to the terms and conditions</Checkbox>\n                                    <Button type='submit' className='w-full'>\n                                        Login\n                                    </Button>\n                                    <Link href='#' className='text-center text-muted-fg text-sm hover:text-fg'>\n                                        Don't have an account? Register\n                                    </Link>\n                                    <Separator>Or continue with</Separator>\n                                    <div className='flex gap-4 pb-6'>\n                                        <Button variant='outline' className='w-full'>\n                                            <IconBrandGithub className='size-4' />\n                                            Github\n                                        </Button>\n                                        <Button variant='outline' className='w-full'>\n                                            <IconBrandGoogle className='size-4' />\n                                            Google\n                                        </Button>\n                                    </div>\n                                </div>\n                            </Form>\n                        </div>\n                    </div>\n                    <div className='relative hidden lg:block'>\n                        <Skeleton className='size-full' />\n                        <IconImage className='-translate-x-1/2 -translate-y-1/2 absolute top-1/2 left-1/2 size-24 text-muted-fg' />\n                    </div>\n                </Card>\n            </ModalContent>\n        </>\n    )\n}\n",
  "application/authentication/overlay/layout.tsx": "export default function Layout({ children }: { children: React.ReactNode }) {\n    return <main className='flex h-dvh w-full items-center justify-center bg-muted'>{children}</main>\n}\n",
  "application/authentication/card/page.tsx": "'use client'\nimport { Button, Card, Checkbox, Form, Separator, TextField, toast } from '@/components/ui'\nimport { IconBrandCleon, IconBrandGithub, IconBrandGoogle } from 'hq-icons'\nimport Link from 'next/link'\n\nexport default function Page() {\n    return (\n        <>\n            <Link href='#'>\n                <IconBrandCleon className='size-10' />\n            </Link>\n            <Card className='w-full max-w-md shadow-lg'>\n                <Card.Header>\n                    <Card.Title>Register</Card.Title>\n                    <Card.Description>Fill in the form below to create your account</Card.Description>\n                </Card.Header>\n                <Form\n                    onSubmit={(e) => {\n                        e.preventDefault()\n                        toast.success('Dummy Login Successfully')\n                    }}\n                >\n                    <Card.Content className='grid gap-4'>\n                        <TextField isRequired label='Name' placeholder='Enter your Name' />\n                        <TextField isRequired label='Email' type='email' placeholder='Enter your email' />\n                        <TextField isRequired label='Password' type='password' placeholder='Enter your password' />\n                        <TextField\n                            isRequired\n                            label='Confirm Password'\n                            type='password'\n                            placeholder='Enter your password'\n                        />\n                        <Checkbox>I agree to the terms and conditions</Checkbox>\n                        <Button type='submit' className='w-full'>\n                            Login\n                        </Button>\n                        <Link href='#' className='text-center text-muted-fg text-sm hover:text-fg'>\n                            Don't have an account? Register\n                        </Link>\n                        <Separator>Or continue with</Separator>\n                        <div className='flex gap-4 pb-6'>\n                            <Button variant='outline' className='w-full'>\n                                <IconBrandGithub className='size-4' />\n                                Github\n                            </Button>\n                            <Button variant='outline' className='w-full'>\n                                <IconBrandGoogle className='size-4' />\n                                Google\n                            </Button>\n                        </div>\n                    </Card.Content>\n                </Form>\n            </Card>\n        </>\n    )\n}\n",
  "application/authentication/card/layout.tsx": "export default function Layout({ children }: { children: React.ReactNode }) {\n    return <main className='flex h-dvh w-full flex-col items-center justify-center gap-6 bg-muted'>{children}</main>\n}\n",
  "application/authentication/split/page.tsx": "'use client'\n\nimport { IconBrandCleon, IconBrandGithub, IconBrandGoogle, IconImage } from 'hq-icons'\n\nimport {\n    Button,\n    Checkbox,\n    Description,\n    Form,\n    Heading,\n    Link,\n    Separator,\n    Skeleton,\n    TextField,\n    toast\n} from '@/components/ui'\n\nexport default function Page() {\n    return (\n        <>\n            <div className='flex h-full items-center justify-center px-4 lg:px-8'>\n                <div className='mx-auto w-full max-w-lg'>\n                    <div className='mb-6 flex flex-col items-center justify-center'>\n                        <Link href='#'>\n                            <IconBrandCleon className='mb-2 size-10' />\n                        </Link>\n                        <Heading level={1}>Register</Heading>\n                        <Description>Fill in the form below to create your account</Description>\n                    </div>\n                    <Form\n                        onSubmit={(e) => {\n                            e.preventDefault()\n                            toast.success('Dummy Login Successfully')\n                        }}\n                    >\n                        <div className='grid gap-4'>\n                            <TextField isRequired label='Name' placeholder='Enter your Name' />\n                            <TextField isRequired label='Email' type='email' placeholder='Enter your email' />\n                            <TextField isRequired label='Password' type='password' placeholder='Enter your password' />\n                            <TextField\n                                isRequired\n                                label='Confirm Password'\n                                type='password'\n                                placeholder='Enter your password'\n                            />\n                            <Checkbox>I agree to the terms and conditions</Checkbox>\n                            <Button type='submit' className='w-full'>\n                                Login\n                            </Button>\n                            <Link href='#' className='text-center text-muted-fg text-sm hover:text-fg'>\n                                Don't have an account? Register\n                            </Link>\n                            <Separator>Or continue with</Separator>\n                            <div className='flex gap-4 pb-6'>\n                                <Button variant='outline' className='w-full'>\n                                    <IconBrandGithub className='size-4' />\n                                    Github\n                                </Button>\n                                <Button variant='outline' className='w-full'>\n                                    <IconBrandGoogle className='size-4' />\n                                    Google\n                                </Button>\n                            </div>\n                        </div>\n                    </Form>\n                </div>\n            </div>\n            <div className='relative hidden lg:block'>\n                <Skeleton className='size-full' />\n                <IconImage className='-translate-x-1/2 -translate-y-1/2 absolute top-1/2 left-1/2 size-24 text-muted-fg' />\n            </div>\n        </>\n    )\n}\n",
  "application/authentication/split/layout.tsx": "export default function Layout({ children }: { children: React.ReactNode }) {\n    return <main className='grid h-dvh w-full lg:grid-cols-2'>{children}</main>\n}\n",
  "application/sidebar/inset/app-sidebar-nav.tsx": "'use client'\n\nimport { ThemeToggle } from '@/components/theme-toggle'\nimport { Link } from '@/components/ui'\nimport { Avatar } from '@/components/ui/avatar'\nimport { Breadcrumbs } from '@/components/ui/breadcrumbs'\nimport { Menu } from '@/components/ui/menu'\nimport { SidebarNav } from '@/components/ui/sidebar'\nimport { IconBrandCleon, IconLogOut, IconSettings } from 'hq-icons'\n\nexport default function AppSidebarNav() {\n    return (\n        <SidebarNav>\n            <Link href='#' className='ml-auto pl-16 md:hidden'>\n                <IconBrandCleon className='size-6' />\n            </Link>\n            <Breadcrumbs className='hidden md:flex'>\n                <Breadcrumbs.Item href='#'>Dashboard</Breadcrumbs.Item>\n                <Breadcrumbs.Item>Content</Breadcrumbs.Item>\n            </Breadcrumbs>\n            <div className='ml-auto'>\n                <ThemeToggle variant='ghost' />\n            </div>\n            <Menu>\n                <Menu.Trigger className='md:hidden' aria-label='Open Menu'>\n                    <Avatar alt='Diqi Al-Haqqi' src='https://github.com/dq-alhq.png' />\n                </Menu.Trigger>\n                <Menu.Content placement='right bottom' className='sm:min-w-(--trigger-width)'>\n                    <Menu.Header>\n                        <span className='block'>DQ Al Haqqi</span>\n                        <span className='font-normal text-muted-fg'>@dq-alhq</span>\n                    </Menu.Header>\n                    <Menu.Item href='#settings'>\n                        <IconSettings />\n                        Settings\n                    </Menu.Item>\n                    <Menu.Item href='#logout'>\n                        <IconLogOut />\n                        Log out\n                    </Menu.Item>\n                </Menu.Content>\n            </Menu>\n        </SidebarNav>\n    )\n}\n",
  "application/sidebar/inset/page.tsx": "import { Skeleton } from '@/components/ui'\n\nexport default function Page() {\n    return (\n        <div className='flex flex-1 flex-col gap-4 p-4'>\n            <div className='grid auto-rows-min gap-4 md:grid-cols-3'>\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n            </div>\n            <Skeleton className='min-h-[100vh] flex-1 rounded-xl bg-muted/50 md:min-h-min' />\n        </div>\n    )\n}\n",
  "application/sidebar/inset/layout.tsx": "import { SidebarInset } from '@/components/ui'\nimport AppSidebar from '@/components/app-sidebar'\nimport AppSidebarNav from '@/components/app-sidebar-nav'\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n    return (\n        <div className='flex'>\n            <AppSidebar />\n            <SidebarInset>\n                <AppSidebarNav />\n                {children}\n            </SidebarInset>\n        </div>\n    )\n}\n",
  "application/sidebar/inset/app-sidebar.tsx": "'use client'\n\nimport {\n    IconBrandCleon,\n    IconChevronRight,\n    IconCreditCard,\n    IconEllipsis,\n    IconGauge,\n    IconLogOut,\n    IconMessage,\n    IconNotebook,\n    IconSettings,\n    IconShieldQuestion,\n    IconTicket\n} from 'hq-icons'\n\nimport { Menu, Sidebar, User } from '@/components/ui'\n\nexport default function AppSidebar() {\n    return (\n        <Sidebar variant='inset'>\n            <Sidebar.Header>\n                <IconBrandCleon />\n                <Sidebar.Label>HQ UI</Sidebar.Label>\n            </Sidebar.Header>\n            <Sidebar.Content>\n                <Sidebar.Section title='Overview'>\n                    <Sidebar.Item tooltip='Overview' isCurrent href='#'>\n                        <IconGauge />\n                        <Sidebar.Label>Overview</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item href='#' badge='4 Pending' tooltip='Payments'>\n                        <IconCreditCard />\n                        <Sidebar.Label>Payments</Sidebar.Label>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n\n                <Sidebar.Section defaultExpandedKeys={[1]}>\n                    <Sidebar.Item id={1}>\n                        <Sidebar.SubItemTrigger>\n                            <IconEllipsis />\n                            <Sidebar.Label>Support</Sidebar.Label>\n                        </Sidebar.SubItemTrigger>\n                        <Sidebar.SubItem>\n                            <Sidebar.Item href='#'>\n                                <IconTicket />\n                                <Sidebar.Label>Tickets</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconMessage />\n                                <Sidebar.Label>Chat Support</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconShieldQuestion />\n                                <Sidebar.Label>FAQ</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconNotebook />\n                                <Sidebar.Label>Documentation</Sidebar.Label>\n                            </Sidebar.Item>\n                        </Sidebar.SubItem>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n            </Sidebar.Content>\n            <Sidebar.Footer>\n                <Menu>\n                    <Menu.Trigger\n                        slot={null}\n                        className='group flex size-full items-center justify-between rounded-lg pressed:bg-muted p-2 hover:bg-muted'\n                    >\n                        <User\n                            src='https://github.com/dq-alhq.png'\n                            name='DQ Al Haqqi'\n                            description='@dq-alhq'\n                            shape='square'\n                        />\n                        <IconChevronRight className='group-aria-expanded:-rotate-90 size-4' />\n                    </Menu.Trigger>\n                    <Menu.Content placement='top left' className='sm:min-w-(--trigger-width)'>\n                        <Menu.Header>\n                            <span className='block'>DQ Al Haqqi</span>\n                            <span className='font-normal text-muted-fg'>@dq-alhq</span>\n                        </Menu.Header>\n                        <Menu.Item href='#settings'>\n                            <IconSettings />\n                            Settings\n                        </Menu.Item>\n                        <Menu.Item href='#logout'>\n                            <IconLogOut />\n                            Log out\n                        </Menu.Item>\n                    </Menu.Content>\n                </Menu>\n            </Sidebar.Footer>\n            <Sidebar.Rail />\n            <Sidebar.Trigger />\n        </Sidebar>\n    )\n}\n",
  "application/sidebar/fixed/app-sidebar-nav.tsx": "'use client'\n\nimport { ThemeToggle } from '@/components/theme-toggle'\nimport { Link } from '@/components/ui'\nimport { Avatar } from '@/components/ui/avatar'\nimport { Breadcrumbs } from '@/components/ui/breadcrumbs'\nimport { Menu } from '@/components/ui/menu'\nimport { SidebarNav } from '@/components/ui/sidebar'\nimport { IconBrandCleon, IconLogOut, IconSettings } from 'hq-icons'\n\nexport default function AppSidebarNav() {\n    return (\n        <SidebarNav>\n            <Link href='#' className='ml-auto pl-16 md:hidden'>\n                <IconBrandCleon className='size-6' />\n            </Link>\n            <Breadcrumbs className='hidden md:flex'>\n                <Breadcrumbs.Item href='#'>Dashboard</Breadcrumbs.Item>\n                <Breadcrumbs.Item>Content</Breadcrumbs.Item>\n            </Breadcrumbs>\n            <div className='ml-auto'>\n                <ThemeToggle variant='ghost' />\n            </div>\n            <Menu>\n                <Menu.Trigger className='md:hidden' aria-label='Open Menu'>\n                    <Avatar alt='Diqi Al-Haqqi' src='https://github.com/dq-alhq.png' />\n                </Menu.Trigger>\n                <Menu.Content placement='right bottom' className='sm:min-w-(--trigger-width)'>\n                    <Menu.Header>\n                        <span className='block'>DQ Al Haqqi</span>\n                        <span className='font-normal text-muted-fg'>@dq-alhq</span>\n                    </Menu.Header>\n                    <Menu.Item href='#settings'>\n                        <IconSettings />\n                        Settings\n                    </Menu.Item>\n                    <Menu.Item href='#logout'>\n                        <IconLogOut />\n                        Log out\n                    </Menu.Item>\n                </Menu.Content>\n            </Menu>\n        </SidebarNav>\n    )\n}\n",
  "application/sidebar/fixed/page.tsx": "import { Skeleton } from '@/components/ui'\n\nexport default function Page() {\n    return (\n        <div className='flex flex-1 flex-col gap-4 p-4'>\n            <div className='grid auto-rows-min gap-4 md:grid-cols-3'>\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n            </div>\n            <Skeleton className='min-h-[100vh] flex-1 rounded-xl bg-muted/50 md:min-h-min' />\n        </div>\n    )\n}\n",
  "application/sidebar/fixed/layout.tsx": "import { SidebarInset } from '@/components/ui'\nimport AppSidebar from '@/components/app-sidebar'\nimport AppSidebarNav from '@/components/app-sidebar-nav'\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n    return (\n        <div className='flex'>\n            <AppSidebar />\n            <SidebarInset>\n                <AppSidebarNav />\n                {children}\n            </SidebarInset>\n        </div>\n    )\n}\n",
  "application/sidebar/fixed/app-sidebar.tsx": "'use client'\n\nimport {\n    IconBrandCleon,\n    IconChevronRight,\n    IconCreditCard,\n    IconEllipsis,\n    IconGauge,\n    IconLogOut,\n    IconMessage,\n    IconNotebook,\n    IconSettings,\n    IconShieldQuestion,\n    IconTicket\n} from 'hq-icons'\n\nimport { Menu, Sidebar, User } from '@/components/ui'\n\nexport default function AppSidebar() {\n    return (\n        <Sidebar collapsible='none'>\n            <Sidebar.Header>\n                <IconBrandCleon />\n                <Sidebar.Label>HQ UI</Sidebar.Label>\n            </Sidebar.Header>\n            <Sidebar.Content>\n                <Sidebar.Section title='Overview'>\n                    <Sidebar.Item tooltip='Overview' isCurrent href='#'>\n                        <IconGauge />\n                        <Sidebar.Label>Overview</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item href='#' badge='4 Pending' tooltip='Payments'>\n                        <IconCreditCard />\n                        <Sidebar.Label>Payments</Sidebar.Label>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n\n                <Sidebar.Section defaultExpandedKeys={[1]}>\n                    <Sidebar.Item id={1}>\n                        <Sidebar.SubItemTrigger>\n                            <IconEllipsis />\n                            <Sidebar.Label>Support</Sidebar.Label>\n                        </Sidebar.SubItemTrigger>\n                        <Sidebar.SubItem>\n                            <Sidebar.Item href='#'>\n                                <IconTicket />\n                                <Sidebar.Label>Tickets</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconMessage />\n                                <Sidebar.Label>Chat Support</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconShieldQuestion />\n                                <Sidebar.Label>FAQ</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconNotebook />\n                                <Sidebar.Label>Documentation</Sidebar.Label>\n                            </Sidebar.Item>\n                        </Sidebar.SubItem>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n            </Sidebar.Content>\n            <Sidebar.Footer>\n                <Menu>\n                    <Menu.Trigger\n                        slot={null}\n                        className='group flex size-full items-center justify-between rounded-lg pressed:bg-muted p-2 hover:bg-muted'\n                    >\n                        <User\n                            src='https://github.com/dq-alhq.png'\n                            name='DQ Al Haqqi'\n                            description='@dq-alhq'\n                            shape='square'\n                        />\n                        <IconChevronRight className='group-aria-expanded:-rotate-90 size-4' />\n                    </Menu.Trigger>\n                    <Menu.Content placement='top left' className='sm:min-w-(--trigger-width)'>\n                        <Menu.Header>\n                            <span className='block'>DQ Al Haqqi</span>\n                            <span className='font-normal text-muted-fg'>@dq-alhq</span>\n                        </Menu.Header>\n                        <Menu.Item href='#settings'>\n                            <IconSettings />\n                            Settings\n                        </Menu.Item>\n                        <Menu.Item href='#logout'>\n                            <IconLogOut />\n                            Log out\n                        </Menu.Item>\n                    </Menu.Content>\n                </Menu>\n            </Sidebar.Footer>\n            <Sidebar.Rail />\n            <Sidebar.Trigger />\n        </Sidebar>\n    )\n}\n",
  "application/sidebar/dock/app-sidebar-nav.tsx": "'use client'\n\nimport { ThemeToggle } from '@/components/theme-toggle'\nimport { Link } from '@/components/ui'\nimport { Avatar } from '@/components/ui/avatar'\nimport { Breadcrumbs } from '@/components/ui/breadcrumbs'\nimport { Menu } from '@/components/ui/menu'\nimport { SidebarNav } from '@/components/ui/sidebar'\nimport { IconBrandCleon, IconLogOut, IconSettings } from 'hq-icons'\n\nexport default function AppSidebarNav() {\n    return (\n        <SidebarNav>\n            <Link href='#' className='ml-auto pl-16 md:hidden'>\n                <IconBrandCleon className='size-6' />\n            </Link>\n            <Breadcrumbs className='hidden md:flex'>\n                <Breadcrumbs.Item href='#'>Dashboard</Breadcrumbs.Item>\n                <Breadcrumbs.Item>Content</Breadcrumbs.Item>\n            </Breadcrumbs>\n            <div className='ml-auto'>\n                <ThemeToggle variant='ghost' />\n            </div>\n            <Menu>\n                <Menu.Trigger className='md:hidden' aria-label='Open Menu'>\n                    <Avatar alt='Diqi Al-Haqqi' src='https://github.com/dq-alhq.png' />\n                </Menu.Trigger>\n                <Menu.Content placement='right bottom' className='sm:min-w-(--trigger-width)'>\n                    <Menu.Header>\n                        <span className='block'>DQ Al Haqqi</span>\n                        <span className='font-normal text-muted-fg'>@dq-alhq</span>\n                    </Menu.Header>\n                    <Menu.Item href='#settings'>\n                        <IconSettings />\n                        Settings\n                    </Menu.Item>\n                    <Menu.Item href='#logout'>\n                        <IconLogOut />\n                        Log out\n                    </Menu.Item>\n                </Menu.Content>\n            </Menu>\n        </SidebarNav>\n    )\n}\n",
  "application/sidebar/dock/page.tsx": "import { Skeleton } from '@/components/ui'\n\nexport default function Page() {\n    return (\n        <div className='flex flex-1 flex-col gap-4 p-4'>\n            <div className='grid auto-rows-min gap-4 md:grid-cols-3'>\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n            </div>\n            <Skeleton className='min-h-[100vh] flex-1 rounded-xl bg-muted/50 md:min-h-min' />\n        </div>\n    )\n}\n",
  "application/sidebar/dock/layout.tsx": "import { SidebarInset } from '@/components/ui'\nimport AppSidebar from '@/components/app-sidebar'\nimport AppSidebarNav from '@/components/app-sidebar-nav'\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n    return (\n        <div className='flex'>\n            <AppSidebar />\n            <SidebarInset>\n                <AppSidebarNav />\n                {children}\n            </SidebarInset>\n        </div>\n    )\n}\n",
  "application/sidebar/dock/app-sidebar.tsx": "'use client'\n\nimport {\n    IconBrandCleon,\n    IconChevronRight,\n    IconCreditCard,\n    IconEllipsis,\n    IconGauge,\n    IconLogOut,\n    IconMessage,\n    IconNotebook,\n    IconSettings,\n    IconShieldQuestion,\n    IconTicket\n} from 'hq-icons'\n\nimport { Menu, Sidebar, User } from '@/components/ui'\n\nexport default function AppSidebar() {\n    return (\n        <Sidebar collapsible='dock'>\n            <Sidebar.Header>\n                <IconBrandCleon />\n                <Sidebar.Label>HQ UI</Sidebar.Label>\n            </Sidebar.Header>\n            <Sidebar.Content>\n                <Sidebar.Section title='Overview'>\n                    <Sidebar.Item tooltip='Overview' isCurrent href='#'>\n                        <IconGauge />\n                        <Sidebar.Label>Overview</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item href='#' badge='4 Pending' tooltip='Payments'>\n                        <IconCreditCard />\n                        <Sidebar.Label>Payments</Sidebar.Label>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n\n                <Sidebar.Section defaultExpandedKeys={[1]}>\n                    <Sidebar.Item id={1}>\n                        <Sidebar.SubItemTrigger>\n                            <IconEllipsis />\n                            <Sidebar.Label>Support</Sidebar.Label>\n                        </Sidebar.SubItemTrigger>\n                        <Sidebar.SubItem>\n                            <Sidebar.Item href='#'>\n                                <IconTicket />\n                                <Sidebar.Label>Tickets</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconMessage />\n                                <Sidebar.Label>Chat Support</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconShieldQuestion />\n                                <Sidebar.Label>FAQ</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconNotebook />\n                                <Sidebar.Label>Documentation</Sidebar.Label>\n                            </Sidebar.Item>\n                        </Sidebar.SubItem>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n            </Sidebar.Content>\n            <Sidebar.Footer>\n                <Menu>\n                    <Menu.Trigger\n                        slot={null}\n                        className='group flex size-full items-center justify-between rounded-lg pressed:bg-muted p-2 hover:bg-muted'\n                    >\n                        <User\n                            src='https://github.com/dq-alhq.png'\n                            name='DQ Al Haqqi'\n                            description='@dq-alhq'\n                            shape='square'\n                        />\n                        <IconChevronRight className='group-aria-expanded:-rotate-90 size-4' />\n                    </Menu.Trigger>\n                    <Menu.Content placement='top left' className='sm:min-w-(--trigger-width)'>\n                        <Menu.Header>\n                            <span className='block'>DQ Al Haqqi</span>\n                            <span className='font-normal text-muted-fg'>@dq-alhq</span>\n                        </Menu.Header>\n                        <Menu.Item href='#settings'>\n                            <IconSettings />\n                            Settings\n                        </Menu.Item>\n                        <Menu.Item href='#logout'>\n                            <IconLogOut />\n                            Log out\n                        </Menu.Item>\n                    </Menu.Content>\n                </Menu>\n            </Sidebar.Footer>\n            <Sidebar.Rail />\n            <Sidebar.Trigger />\n        </Sidebar>\n    )\n}\n",
  "application/sidebar/dock-float/app-sidebar-nav.tsx": "'use client'\n\nimport { ThemeToggle } from '@/components/theme-toggle'\nimport { Link } from '@/components/ui'\nimport { Avatar } from '@/components/ui/avatar'\nimport { Breadcrumbs } from '@/components/ui/breadcrumbs'\nimport { Menu } from '@/components/ui/menu'\nimport { SidebarNav } from '@/components/ui/sidebar'\nimport { IconBrandCleon, IconLogOut, IconSettings } from 'hq-icons'\n\nexport default function AppSidebarNav() {\n    return (\n        <SidebarNav>\n            <Link href='#' className='ml-auto pl-16 md:hidden'>\n                <IconBrandCleon className='size-6' />\n            </Link>\n            <Breadcrumbs className='hidden md:flex'>\n                <Breadcrumbs.Item href='#'>Dashboard</Breadcrumbs.Item>\n                <Breadcrumbs.Item>Content</Breadcrumbs.Item>\n            </Breadcrumbs>\n            <div className='ml-auto'>\n                <ThemeToggle variant='ghost' />\n            </div>\n            <Menu>\n                <Menu.Trigger className='md:hidden' aria-label='Open Menu'>\n                    <Avatar alt='Diqi Al-Haqqi' src='https://github.com/dq-alhq.png' />\n                </Menu.Trigger>\n                <Menu.Content placement='right bottom' className='sm:min-w-(--trigger-width)'>\n                    <Menu.Header>\n                        <span className='block'>DQ Al Haqqi</span>\n                        <span className='font-normal text-muted-fg'>@dq-alhq</span>\n                    </Menu.Header>\n                    <Menu.Item href='#settings'>\n                        <IconSettings />\n                        Settings\n                    </Menu.Item>\n                    <Menu.Item href='#logout'>\n                        <IconLogOut />\n                        Log out\n                    </Menu.Item>\n                </Menu.Content>\n            </Menu>\n        </SidebarNav>\n    )\n}\n",
  "application/sidebar/dock-float/page.tsx": "import { Skeleton } from '@/components/ui'\n\nexport default function Page() {\n    return (\n        <div className='flex flex-1 flex-col gap-4 p-4'>\n            <div className='grid auto-rows-min gap-4 md:grid-cols-3'>\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n            </div>\n            <Skeleton className='min-h-[100vh] flex-1 rounded-xl bg-muted/50 md:min-h-min' />\n        </div>\n    )\n}\n",
  "application/sidebar/dock-float/layout.tsx": "import { SidebarInset } from '@/components/ui'\nimport AppSidebar from '@/components/app-sidebar'\nimport AppSidebarNav from '@/components/app-sidebar-nav'\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n    return (\n        <div className='flex'>\n            <AppSidebar />\n            <SidebarInset>\n                <AppSidebarNav />\n                {children}\n            </SidebarInset>\n        </div>\n    )\n}\n",
  "application/sidebar/dock-float/app-sidebar.tsx": "'use client'\n\nimport {\n    IconBrandCleon,\n    IconChevronRight,\n    IconCreditCard,\n    IconEllipsis,\n    IconGauge,\n    IconLogOut,\n    IconMessage,\n    IconNotebook,\n    IconSettings,\n    IconShieldQuestion,\n    IconTicket\n} from 'hq-icons'\n\nimport { Menu, Sidebar, User } from '@/components/ui'\n\nexport default function AppSidebar() {\n    return (\n        <Sidebar variant='float' collapsible='dock'>\n            <Sidebar.Header>\n                <IconBrandCleon />\n                <Sidebar.Label>HQ UI</Sidebar.Label>\n            </Sidebar.Header>\n            <Sidebar.Content>\n                <Sidebar.Section title='Overview'>\n                    <Sidebar.Item tooltip='Overview' isCurrent href='#'>\n                        <IconGauge />\n                        <Sidebar.Label>Overview</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item href='#' badge='4 Pending' tooltip='Payments'>\n                        <IconCreditCard />\n                        <Sidebar.Label>Payments</Sidebar.Label>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n\n                <Sidebar.Section defaultExpandedKeys={[1]}>\n                    <Sidebar.Item id={1}>\n                        <Sidebar.SubItemTrigger>\n                            <IconEllipsis />\n                            <Sidebar.Label>Support</Sidebar.Label>\n                        </Sidebar.SubItemTrigger>\n                        <Sidebar.SubItem>\n                            <Sidebar.Item href='#'>\n                                <IconTicket />\n                                <Sidebar.Label>Tickets</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconMessage />\n                                <Sidebar.Label>Chat Support</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconShieldQuestion />\n                                <Sidebar.Label>FAQ</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconNotebook />\n                                <Sidebar.Label>Documentation</Sidebar.Label>\n                            </Sidebar.Item>\n                        </Sidebar.SubItem>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n            </Sidebar.Content>\n            <Sidebar.Footer>\n                <Menu>\n                    <Menu.Trigger\n                        slot={null}\n                        className='group flex size-full items-center justify-between rounded-lg pressed:bg-muted p-2 hover:bg-muted'\n                    >\n                        <User\n                            src='https://github.com/dq-alhq.png'\n                            name='DQ Al Haqqi'\n                            description='@dq-alhq'\n                            shape='square'\n                        />\n                        <IconChevronRight className='group-aria-expanded:-rotate-90 size-4' />\n                    </Menu.Trigger>\n                    <Menu.Content placement='top left' className='sm:min-w-(--trigger-width)'>\n                        <Menu.Header>\n                            <span className='block'>DQ Al Haqqi</span>\n                            <span className='font-normal text-muted-fg'>@dq-alhq</span>\n                        </Menu.Header>\n                        <Menu.Item href='#settings'>\n                            <IconSettings />\n                            Settings\n                        </Menu.Item>\n                        <Menu.Item href='#logout'>\n                            <IconLogOut />\n                            Log out\n                        </Menu.Item>\n                    </Menu.Content>\n                </Menu>\n            </Sidebar.Footer>\n            <Sidebar.Rail />\n            <Sidebar.Trigger />\n        </Sidebar>\n    )\n}\n",
  "application/sidebar/float/app-sidebar-nav.tsx": "'use client'\n\nimport { ThemeToggle } from '@/components/theme-toggle'\nimport { Link } from '@/components/ui'\nimport { Avatar } from '@/components/ui/avatar'\nimport { Breadcrumbs } from '@/components/ui/breadcrumbs'\nimport { Menu } from '@/components/ui/menu'\nimport { SidebarNav } from '@/components/ui/sidebar'\nimport { IconBrandCleon, IconLogOut, IconSettings } from 'hq-icons'\n\nexport default function AppSidebarNav() {\n    return (\n        <SidebarNav>\n            <Link href='#' className='ml-auto pl-16 md:hidden'>\n                <IconBrandCleon className='size-6' />\n            </Link>\n            <Breadcrumbs className='hidden md:flex'>\n                <Breadcrumbs.Item href='#'>Dashboard</Breadcrumbs.Item>\n                <Breadcrumbs.Item>Content</Breadcrumbs.Item>\n            </Breadcrumbs>\n            <div className='ml-auto'>\n                <ThemeToggle variant='ghost' />\n            </div>\n            <Menu>\n                <Menu.Trigger className='md:hidden' aria-label='Open Menu'>\n                    <Avatar alt='Diqi Al-Haqqi' src='https://github.com/dq-alhq.png' />\n                </Menu.Trigger>\n                <Menu.Content placement='right bottom' className='sm:min-w-(--trigger-width)'>\n                    <Menu.Header>\n                        <span className='block'>DQ Al Haqqi</span>\n                        <span className='font-normal text-muted-fg'>@dq-alhq</span>\n                    </Menu.Header>\n                    <Menu.Item href='#settings'>\n                        <IconSettings />\n                        Settings\n                    </Menu.Item>\n                    <Menu.Item href='#logout'>\n                        <IconLogOut />\n                        Log out\n                    </Menu.Item>\n                </Menu.Content>\n            </Menu>\n        </SidebarNav>\n    )\n}\n",
  "application/sidebar/float/page.tsx": "import { Skeleton } from '@/components/ui'\n\nexport default function Page() {\n    return (\n        <div className='flex flex-1 flex-col gap-4 p-4'>\n            <div className='grid auto-rows-min gap-4 md:grid-cols-3'>\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n            </div>\n            <Skeleton className='min-h-[100vh] flex-1 rounded-xl bg-muted/50 md:min-h-min' />\n        </div>\n    )\n}\n",
  "application/sidebar/float/layout.tsx": "import { SidebarInset } from '@/components/ui'\nimport AppSidebar from '@/components/app-sidebar'\nimport AppSidebarNav from '@/components/app-sidebar-nav'\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n    return (\n        <div className='flex'>\n            <AppSidebar />\n            <SidebarInset>\n                <AppSidebarNav />\n                {children}\n            </SidebarInset>\n        </div>\n    )\n}\n",
  "application/sidebar/float/app-sidebar.tsx": "'use client'\n\nimport {\n    IconBrandCleon,\n    IconChevronRight,\n    IconCreditCard,\n    IconEllipsis,\n    IconGauge,\n    IconLogOut,\n    IconMessage,\n    IconNotebook,\n    IconSettings,\n    IconShieldQuestion,\n    IconTicket\n} from 'hq-icons'\n\nimport { Menu, Sidebar, User } from '@/components/ui'\n\nexport default function AppSidebar() {\n    return (\n        <Sidebar variant='float'>\n            <Sidebar.Header>\n                <IconBrandCleon />\n                <Sidebar.Label>HQ UI</Sidebar.Label>\n            </Sidebar.Header>\n            <Sidebar.Content>\n                <Sidebar.Section title='Overview'>\n                    <Sidebar.Item tooltip='Overview' isCurrent href='#'>\n                        <IconGauge />\n                        <Sidebar.Label>Overview</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item href='#' badge='4 Pending' tooltip='Payments'>\n                        <IconCreditCard />\n                        <Sidebar.Label>Payments</Sidebar.Label>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n\n                <Sidebar.Section defaultExpandedKeys={[1]}>\n                    <Sidebar.Item id={1}>\n                        <Sidebar.SubItemTrigger>\n                            <IconEllipsis />\n                            <Sidebar.Label>Support</Sidebar.Label>\n                        </Sidebar.SubItemTrigger>\n                        <Sidebar.SubItem>\n                            <Sidebar.Item href='#'>\n                                <IconTicket />\n                                <Sidebar.Label>Tickets</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconMessage />\n                                <Sidebar.Label>Chat Support</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconShieldQuestion />\n                                <Sidebar.Label>FAQ</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconNotebook />\n                                <Sidebar.Label>Documentation</Sidebar.Label>\n                            </Sidebar.Item>\n                        </Sidebar.SubItem>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n            </Sidebar.Content>\n            <Sidebar.Footer>\n                <Menu>\n                    <Menu.Trigger\n                        slot={null}\n                        className='group flex size-full items-center justify-between rounded-lg pressed:bg-muted p-2 hover:bg-muted'\n                    >\n                        <User\n                            src='https://github.com/dq-alhq.png'\n                            name='DQ Al Haqqi'\n                            description='@dq-alhq'\n                            shape='square'\n                        />\n                        <IconChevronRight className='group-aria-expanded:-rotate-90 size-4' />\n                    </Menu.Trigger>\n                    <Menu.Content placement='top left' className='sm:min-w-(--trigger-width)'>\n                        <Menu.Header>\n                            <span className='block'>DQ Al Haqqi</span>\n                            <span className='font-normal text-muted-fg'>@dq-alhq</span>\n                        </Menu.Header>\n                        <Menu.Item href='#settings'>\n                            <IconSettings />\n                            Settings\n                        </Menu.Item>\n                        <Menu.Item href='#logout'>\n                            <IconLogOut />\n                            Log out\n                        </Menu.Item>\n                    </Menu.Content>\n                </Menu>\n            </Sidebar.Footer>\n            <Sidebar.Rail />\n            <Sidebar.Trigger />\n        </Sidebar>\n    )\n}\n",
  "application/sidebar/dock-inset/app-sidebar-nav.tsx": "'use client'\n\nimport { ThemeToggle } from '@/components/theme-toggle'\nimport { Link } from '@/components/ui'\nimport { Avatar } from '@/components/ui/avatar'\nimport { Breadcrumbs } from '@/components/ui/breadcrumbs'\nimport { Menu } from '@/components/ui/menu'\nimport { SidebarNav } from '@/components/ui/sidebar'\nimport { IconBrandCleon, IconLogOut, IconSettings } from 'hq-icons'\n\nexport default function AppSidebarNav() {\n    return (\n        <SidebarNav>\n            <Link href='#' className='ml-auto pl-16 md:hidden'>\n                <IconBrandCleon className='size-6' />\n            </Link>\n            <Breadcrumbs className='hidden md:flex'>\n                <Breadcrumbs.Item href='#'>Dashboard</Breadcrumbs.Item>\n                <Breadcrumbs.Item>Content</Breadcrumbs.Item>\n            </Breadcrumbs>\n            <div className='ml-auto'>\n                <ThemeToggle variant='ghost' />\n            </div>\n            <Menu>\n                <Menu.Trigger className='md:hidden' aria-label='Open Menu'>\n                    <Avatar alt='Diqi Al-Haqqi' src='https://github.com/dq-alhq.png' />\n                </Menu.Trigger>\n                <Menu.Content placement='right bottom' className='sm:min-w-(--trigger-width)'>\n                    <Menu.Header>\n                        <span className='block'>DQ Al Haqqi</span>\n                        <span className='font-normal text-muted-fg'>@dq-alhq</span>\n                    </Menu.Header>\n                    <Menu.Item href='#settings'>\n                        <IconSettings />\n                        Settings\n                    </Menu.Item>\n                    <Menu.Item href='#logout'>\n                        <IconLogOut />\n                        Log out\n                    </Menu.Item>\n                </Menu.Content>\n            </Menu>\n        </SidebarNav>\n    )\n}\n",
  "application/sidebar/dock-inset/page.tsx": "import { Skeleton } from '@/components/ui'\n\nexport default function Page() {\n    return (\n        <div className='flex flex-1 flex-col gap-4 p-4'>\n            <div className='grid auto-rows-min gap-4 md:grid-cols-3'>\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n            </div>\n            <Skeleton className='min-h-[100vh] flex-1 rounded-xl bg-muted/50 md:min-h-min' />\n        </div>\n    )\n}\n",
  "application/sidebar/dock-inset/layout.tsx": "import { SidebarInset } from '@/components/ui'\nimport AppSidebar from '@/components/app-sidebar'\nimport AppSidebarNav from '@/components/app-sidebar-nav'\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n    return (\n        <div className='flex'>\n            <AppSidebar />\n            <SidebarInset>\n                <AppSidebarNav />\n                {children}\n            </SidebarInset>\n        </div>\n    )\n}\n",
  "application/sidebar/dock-inset/app-sidebar.tsx": "'use client'\n\nimport {\n    IconBrandCleon,\n    IconChevronRight,\n    IconCreditCard,\n    IconEllipsis,\n    IconGauge,\n    IconLogOut,\n    IconMessage,\n    IconNotebook,\n    IconSettings,\n    IconShieldQuestion,\n    IconTicket\n} from 'hq-icons'\n\nimport { Menu, Sidebar, User } from '@/components/ui'\n\nexport default function AppSidebar() {\n    return (\n        <Sidebar variant='inset' collapsible='dock'>\n            <Sidebar.Header>\n                <IconBrandCleon />\n                <Sidebar.Label>HQ UI</Sidebar.Label>\n            </Sidebar.Header>\n            <Sidebar.Content>\n                <Sidebar.Section title='Overview'>\n                    <Sidebar.Item tooltip='Overview' isCurrent href='#'>\n                        <IconGauge />\n                        <Sidebar.Label>Overview</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item href='#' badge='4 Pending' tooltip='Payments'>\n                        <IconCreditCard />\n                        <Sidebar.Label>Payments</Sidebar.Label>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n\n                <Sidebar.Section defaultExpandedKeys={[1]}>\n                    <Sidebar.Item id={1}>\n                        <Sidebar.SubItemTrigger>\n                            <IconEllipsis />\n                            <Sidebar.Label>Support</Sidebar.Label>\n                        </Sidebar.SubItemTrigger>\n                        <Sidebar.SubItem>\n                            <Sidebar.Item href='#'>\n                                <IconTicket />\n                                <Sidebar.Label>Tickets</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconMessage />\n                                <Sidebar.Label>Chat Support</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconShieldQuestion />\n                                <Sidebar.Label>FAQ</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconNotebook />\n                                <Sidebar.Label>Documentation</Sidebar.Label>\n                            </Sidebar.Item>\n                        </Sidebar.SubItem>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n            </Sidebar.Content>\n            <Sidebar.Footer>\n                <Menu>\n                    <Menu.Trigger\n                        slot={null}\n                        className='group flex size-full items-center justify-between rounded-lg pressed:bg-muted p-2 hover:bg-muted'\n                    >\n                        <User\n                            src='https://github.com/dq-alhq.png'\n                            name='DQ Al Haqqi'\n                            description='@dq-alhq'\n                            shape='square'\n                        />\n                        <IconChevronRight className='group-aria-expanded:-rotate-90 size-4' />\n                    </Menu.Trigger>\n                    <Menu.Content placement='top left' className='sm:min-w-(--trigger-width)'>\n                        <Menu.Header>\n                            <span className='block'>DQ Al Haqqi</span>\n                            <span className='font-normal text-muted-fg'>@dq-alhq</span>\n                        </Menu.Header>\n                        <Menu.Item href='#settings'>\n                            <IconSettings />\n                            Settings\n                        </Menu.Item>\n                        <Menu.Item href='#logout'>\n                            <IconLogOut />\n                            Log out\n                        </Menu.Item>\n                    </Menu.Content>\n                </Menu>\n            </Sidebar.Footer>\n            <Sidebar.Rail />\n            <Sidebar.Trigger />\n        </Sidebar>\n    )\n}\n",
  "application/sidebar/basic/app-sidebar-nav.tsx": "'use client'\n\nimport { ThemeToggle } from '@/components/theme-toggle'\nimport { Link } from '@/components/ui'\nimport { Avatar } from '@/components/ui/avatar'\nimport { Breadcrumbs } from '@/components/ui/breadcrumbs'\nimport { Menu } from '@/components/ui/menu'\nimport { SidebarNav } from '@/components/ui/sidebar'\nimport { IconBrandCleon, IconLogOut, IconSettings } from 'hq-icons'\n\nexport default function AppSidebarNav() {\n    return (\n        <SidebarNav>\n            <Link href='#' className='ml-auto pl-16 md:hidden'>\n                <IconBrandCleon className='size-6' />\n            </Link>\n            <Breadcrumbs className='hidden md:flex'>\n                <Breadcrumbs.Item href='#'>Dashboard</Breadcrumbs.Item>\n                <Breadcrumbs.Item>Content</Breadcrumbs.Item>\n            </Breadcrumbs>\n            <div className='ml-auto'>\n                <ThemeToggle variant='ghost' />\n            </div>\n            <Menu>\n                <Menu.Trigger className='md:hidden' aria-label='Open Menu'>\n                    <Avatar alt='Diqi Al-Haqqi' src='https://github.com/dq-alhq.png' />\n                </Menu.Trigger>\n                <Menu.Content placement='right bottom' className='sm:min-w-(--trigger-width)'>\n                    <Menu.Header>\n                        <span className='block'>DQ Al Haqqi</span>\n                        <span className='font-normal text-muted-fg'>@dq-alhq</span>\n                    </Menu.Header>\n                    <Menu.Item href='#settings'>\n                        <IconSettings />\n                        Settings\n                    </Menu.Item>\n                    <Menu.Item href='#logout'>\n                        <IconLogOut />\n                        Log out\n                    </Menu.Item>\n                </Menu.Content>\n            </Menu>\n        </SidebarNav>\n    )\n}\n",
  "application/sidebar/basic/page.tsx": "import { Skeleton } from '@/components/ui'\n\nexport default function Page() {\n    return (\n        <div className='flex flex-1 flex-col gap-4 p-4'>\n            <div className='grid auto-rows-min gap-4 md:grid-cols-3'>\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n            </div>\n            <Skeleton className='min-h-[100vh] flex-1 rounded-xl bg-muted/50 md:min-h-min' />\n        </div>\n    )\n}\n",
  "application/sidebar/basic/layout.tsx": "import { SidebarInset } from '@/components/ui'\nimport AppSidebar from '@/components/app-sidebar'\nimport AppSidebarNav from '@/components/app-sidebar-nav'\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n    return (\n        <div className='flex'>\n            <AppSidebar />\n            <SidebarInset>\n                <AppSidebarNav />\n                {children}\n            </SidebarInset>\n        </div>\n    )\n}\n",
  "application/sidebar/basic/app-sidebar.tsx": "'use client'\n\nimport {\n    IconBrandCleon,\n    IconChevronRight,\n    IconCreditCard,\n    IconEllipsis,\n    IconGauge,\n    IconLogOut,\n    IconMessage,\n    IconNotebook,\n    IconSettings,\n    IconShieldQuestion,\n    IconTicket\n} from 'hq-icons'\n\nimport { Menu, Sidebar, User } from '@/components/ui'\n\nexport default function AppSidebar() {\n    return (\n        <Sidebar>\n            <Sidebar.Header>\n                <IconBrandCleon />\n                <Sidebar.Label>HQ UI</Sidebar.Label>\n            </Sidebar.Header>\n            <Sidebar.Content>\n                <Sidebar.Section title='Overview'>\n                    <Sidebar.Item tooltip='Overview' isCurrent href='#'>\n                        <IconGauge />\n                        <Sidebar.Label>Overview</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item href='#' badge='4 Pending' tooltip='Payments'>\n                        <IconCreditCard />\n                        <Sidebar.Label>Payments</Sidebar.Label>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n\n                <Sidebar.Section defaultExpandedKeys={[1]}>\n                    <Sidebar.Item id={1}>\n                        <Sidebar.SubItemTrigger>\n                            <IconEllipsis />\n                            <Sidebar.Label>Support</Sidebar.Label>\n                        </Sidebar.SubItemTrigger>\n                        <Sidebar.SubItem>\n                            <Sidebar.Item href='#'>\n                                <IconTicket />\n                                <Sidebar.Label>Tickets</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconMessage />\n                                <Sidebar.Label>Chat Support</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconShieldQuestion />\n                                <Sidebar.Label>FAQ</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconNotebook />\n                                <Sidebar.Label>Documentation</Sidebar.Label>\n                            </Sidebar.Item>\n                        </Sidebar.SubItem>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n            </Sidebar.Content>\n            <Sidebar.Footer>\n                <Menu>\n                    <Menu.Trigger\n                        slot={null}\n                        className='group flex size-full items-center justify-between rounded-lg pressed:bg-muted p-2 hover:bg-muted'\n                    >\n                        <User\n                            src='https://github.com/dq-alhq.png'\n                            name='DQ Al Haqqi'\n                            description='@dq-alhq'\n                            shape='square'\n                        />\n                        <IconChevronRight className='group-aria-expanded:-rotate-90 size-4' />\n                    </Menu.Trigger>\n                    <Menu.Content placement='top left' className='sm:min-w-(--trigger-width)'>\n                        <Menu.Header>\n                            <span className='block'>DQ Al Haqqi</span>\n                            <span className='font-normal text-muted-fg'>@dq-alhq</span>\n                        </Menu.Header>\n                        <Menu.Item href='#settings'>\n                            <IconSettings />\n                            Settings\n                        </Menu.Item>\n                        <Menu.Item href='#logout'>\n                            <IconLogOut />\n                            Log out\n                        </Menu.Item>\n                    </Menu.Content>\n                </Menu>\n            </Sidebar.Footer>\n            <Sidebar.Rail />\n            <Sidebar.Trigger />\n        </Sidebar>\n    )\n}\n",
  "application/social/user-profile/media.tsx": "import Image from 'next/image'\nimport { Collection } from 'react-aria-components'\n\nimport { Card } from '@/components/ui'\nimport { cn } from '@/lib/utils'\n\nexport default function Media() {\n    const items = Array.from({ length: 17 }, (_, id) => ({\n        id: id + 1,\n        title: `Image ${id}`\n    }))\n    return (\n        <div className='grid grid-cols-2 gap-2 2xl:grid-cols-4'>\n            <Collection items={items}>\n                {(item) => (\n                    <div key={item.id} className={cn(item.id % 5 === 0 && 'col-span-2')}>\n                        <Card>\n                            <Image\n                                width={item.id % 5 === 0 ? 800 : 400}\n                                height={300}\n                                src={`https://picsum.photos/${item.id % 5 === 0 ? 800 : 400}/300?random=${item.id}`}\n                                alt={item.title}\n                            />\n                        </Card>\n                    </div>\n                )}\n            </Collection>\n        </div>\n    )\n}\n",
  "application/social/user-profile/page.tsx": "'use client'\n\nimport { useState } from 'react'\n\nimport Image from 'next/image'\nimport type { Key } from 'react-aria-components'\n\nimport { Avatar, Card, Container, Description, Heading, Tabs } from '@/components/ui'\nimport About from '@/components/about'\nimport Media from '@/components/media'\nimport Posts from '@/components/posts'\n\nexport default function UserProfile() {\n    const [panel, setPanel] = useState<Key>(1)\n    return (\n        <Container className='py-6 xl:py-12'>\n            <div className='relative w-full'>\n                <Card className='w-full overflow-hidden'>\n                    <Card.Content className='p-0 lg:h-96'>\n                        <Image\n                            width={1920}\n                            height={1080}\n                            src='https://picsum.photos/id/1/1920/1080'\n                            alt='profil'\n                            className='object-contain'\n                        />\n                    </Card.Content>\n                </Card>\n                <div className='relative mt-12 flex flex-col items-center gap-4 lg:mt-4 lg:flex-row'>\n                    <Avatar\n                        alt='logo'\n                        src='https://github.com/dq-alhq.png'\n                        className='-translate-x-1/2 lg:-bottom-4 absolute bottom-32 left-1/2 size-24 rounded-full border bg-bg p-1 lg:left-20 lg:size-44 lg:translate-x-0'\n                    />\n                    <div className='flex w-full flex-col gap-1 lg:ml-72'>\n                        <Heading className='text-center font-bold text-lg lg:text-left lg:text-4xl'>\n                            Diqi Al-Haqqi\n                        </Heading>\n                        <Description className='text-center text-sm uppercase lg:text-left lg:text-lg'>\n                            East Java, Indonesia\n                        </Description>\n                    </div>\n                    <Tabs className='mx-20 lg:ml-auto' selectedKey={panel} onSelectionChange={setPanel}>\n                        <Tabs.List>\n                            <Tabs.Label className='lg:text-xl' id={1}>\n                                Posts\n                            </Tabs.Label>\n                            <Tabs.Label className='lg:text-xl' id={2}>\n                                About\n                            </Tabs.Label>\n                            <Tabs.Label className='lg:text-xl' id={3}>\n                                Media\n                            </Tabs.Label>\n                        </Tabs.List>\n                    </Tabs>\n                </div>\n            </div>\n            <div className='mt-2 flex flex-col gap-6 lg:mt-12 lg:flex-row'>\n                {panel === 1 && <Posts />}\n                {panel === 2 && <About />}\n                {panel === 3 && <Media />}\n            </div>\n        </Container>\n    )\n}\n",
  "application/social/user-profile/about.tsx": "import { Card, DL } from '@/components/ui'\n\nexport default function About() {\n    return (\n        <Card className='w-full'>\n            <Card.Header>\n                <Card.Title>About Me</Card.Title>\n                <Card.Description>My profile information</Card.Description>\n            </Card.Header>\n            <Card.Content>\n                <DL>\n                    <DL.T>Full Name</DL.T>\n                    <DL.D>Diqi Al-Haqqi</DL.D>\n                    <DL.T>Address</DL.T>\n                    <DL.D>East Java, Indonesia</DL.D>\n                    <DL.T>Age</DL.T>\n                    <DL.D>25 years</DL.D>\n                    <DL.T>Company</DL.T>\n                    <DL.D>Qomaruddin University Gresik</DL.D>\n                </DL>\n            </Card.Content>\n        </Card>\n    )\n}\n",
  "application/social/user-profile/layout.tsx": "export default function Layout({ children }: { children: React.ReactNode }) {\n    return <main className='h-dvh w-full bg-muted'>{children}</main>\n}\n",
  "application/social/user-profile/posts.tsx": "import Image from 'next/image'\nimport { Collection } from 'react-aria-components'\n\nimport { Card } from '@/components/ui'\n\nexport default function Posts() {\n    return (\n        <div className='grid grid-cols-1 gap-2 2xl:grid-cols-3'>\n            <Collection items={posts}>\n                {(item) => (\n                    <div key={item.id}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title>{item.title}</Card.Title>\n                                <Card.Description>{item.date}</Card.Description>\n                            </Card.Header>\n                            <Card.Content className='space-y-2 text-justify'>\n                                <Image alt={item.title} src={item.image} width={400} height={300} />\n                                <p>{item.content}</p>\n                            </Card.Content>\n                        </Card>\n                    </div>\n                )}\n            </Collection>\n        </div>\n    )\n}\n\nconst posts = [\n    {\n        id: 1,\n        title: 'First Post',\n        date: '2021-01-01 - 12:00',\n        image: 'https://picsum.photos/400/300?random=1',\n        content:\n            'Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolorum tempore nulla libero laborum officia aliquam voluptas quod porro quis accusamus.'\n    },\n    {\n        id: 2,\n        title: 'Second Post',\n        date: '2021-01-02 - 08:00',\n        image: 'https://picsum.photos/400/300?random=2',\n        content:\n            'Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptas totam ad nostrum earum provident natus tempora! Accusamus iure sunt quam!'\n    },\n    {\n        id: 3,\n        title: 'Third Post',\n        date: '2021-01-03 - 14:00',\n        image: 'https://picsum.photos/400/300?random=3',\n        content:\n            'Lorem ipsum dolor sit amet. Veritatis dicta aliquid, voluptatibus sapiente repellendus fugit saepe voluptate eum praesentium facilis?'\n    }\n]\n",
  "application/social/chat/chat-sidebar.tsx": "'use client'\n\nimport {\n    IconBrandCleon,\n    IconChevronRight,\n    IconFilm,\n    IconGroup,\n    IconHeadphones,\n    IconLogOut,\n    IconMessage,\n    IconRss,\n    IconSettings\n} from 'hq-icons'\n\nimport { Menu, Sidebar, User } from '@/components/ui'\n\nexport default function ChatSidebar() {\n    return (\n        <Sidebar collapsible='dock' defaultOpen={false}>\n            <Sidebar.Header>\n                <IconBrandCleon />\n                <Sidebar.Label>Chat App</Sidebar.Label>\n            </Sidebar.Header>\n            <Sidebar.Content>\n                <Sidebar.Section>\n                    <Sidebar.Item isCurrent href='#'>\n                        <IconMessage />\n                        <Sidebar.Label>Chats</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item href='#'>\n                        <IconRss />\n                        <Sidebar.Label>Broadcast</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item href='#'>\n                        <IconFilm />\n                        <Sidebar.Label>Stories</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item href='#'>\n                        <IconGroup />\n                        <Sidebar.Label>Communities</Sidebar.Label>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n            </Sidebar.Content>\n            <Sidebar.Footer>\n                <Menu>\n                    <Menu.Trigger className='group flex size-full items-center justify-between rounded-lg pressed:bg-muted p-2 hover:bg-muted'>\n                        <User\n                            src='https://github.com/dq-alhq.png'\n                            name='DQ Al Haqqi'\n                            description='@dq-alhq'\n                            shape='square'\n                        />\n                        <IconChevronRight className='group-aria-expanded:-rotate-90 size-4' />\n                    </Menu.Trigger>\n                    <Menu.Content placement='bottom right' className='sm:min-w-(--trigger-width)'>\n                        <Menu.Header>\n                            <span className='block'>DQ Al Haqqi</span>\n                            <span className='font-normal text-muted-fg'>@dq-alhq</span>\n                        </Menu.Header>\n                        <Menu.Item href='#setting'>\n                            <IconSettings />\n                            Setting\n                        </Menu.Item>\n                        <Menu.Item href='#contact'>\n                            <IconHeadphones />\n                            Customer Support\n                        </Menu.Item>\n                        <Menu.Separator />\n                        <Menu.Item href='#logout'>\n                            <IconLogOut />\n                            Log out\n                        </Menu.Item>\n                    </Menu.Content>\n                </Menu>\n            </Sidebar.Footer>\n            <Sidebar.Trigger />\n        </Sidebar>\n    )\n}\n",
  "application/social/chat/page.tsx": "'use client'\n\nimport { type FormEvent, useState } from 'react'\n\nimport {\n    IconCircleX,\n    IconContact,\n    IconEllipsisVertical,\n    IconLogOut,\n    IconMessageDashed,\n    IconMessageMore,\n    IconMessagePlus,\n    IconTrash,\n    IconUser\n} from 'hq-icons'\nimport { useDateFormatter } from 'react-aria'\n\nimport BubbleChat, { type BubbleChatProps } from '@/components/bubble-chat'\nimport ContactList from '@/components/contact-list'\nimport MessageForm from '@/components/message-form'\n\nimport { Avatar, Button, Menu, Popover } from '@/components/ui'\n\nexport default function ChatApp() {\n    const [chats, setChats] = useState<BubbleChatProps[]>([\n        {\n            message: \"Assalamu'alaikum, Hello Bro!\",\n            time: '10:00',\n            role: 'recieve'\n        },\n        {\n            message: \"Wa'alaikumsalam, Yes Bro... What's up?\",\n            time: '10:01',\n            role: 'send',\n            status: 'read'\n        },\n        {\n            message: `I Have a good news, There is new Component at this site. I hope you will like it.\n                Check it out. https://cleon-ui.vercel.app\n                `,\n            time: '10:03',\n            role: 'recieve'\n        }\n    ])\n\n    const [message, setMessage] = useState<string>('')\n    const formatter = useDateFormatter({ hour: '2-digit', minute: '2-digit', hour12: false })\n\n    function sendMessage(e: FormEvent) {\n        e.preventDefault()\n        setChats([\n            ...chats,\n            {\n                message,\n                time: formatter.format(new Date()),\n                role: 'send'\n            }\n        ])\n        setMessage('')\n    }\n\n    function deleteChat(index: number) {\n        setChats([...chats.slice(0, index), ...chats.slice(index + 1)])\n    }\n\n    return (\n        <main className='grid h-dvh flex-1 gap-3 overflow-auto md:grid-cols-2 md:p-2 lg:grid-cols-4'>\n            <div className='relative hidden flex-col items-start gap-4 rounded-lg border md:flex'>\n                <div className='sticky top-0 z-20 flex w-full items-center justify-between rounded-lg bg-bg p-4'>\n                    <h1 className='font-bold text-2xl'>Chats</h1>\n                    <div className='flex items-center justify-between gap-2'>\n                        <Button variant='ghost' icon>\n                            <IconMessageMore className='!size-6' />\n                        </Button>\n                        <Menu>\n                            <Button icon variant='ghost'>\n                                <IconEllipsisVertical />\n                            </Button>\n                            <Menu.Content placement='bottom end'>\n                                <Menu.Item>\n                                    <IconMessagePlus />\n                                    New Group\n                                </Menu.Item>\n                                <Menu.Item isDanger>\n                                    <IconLogOut />\n                                    Logout\n                                </Menu.Item>\n                            </Menu.Content>\n                        </Menu>\n                    </div>\n                </div>\n                <div className='w-full px-4'>\n                    <ContactList />\n                </div>\n            </div>\n            <div className='relative flex h-full min-h-[50vh] flex-col rounded-lg bg-bg lg:col-span-3'>\n                <div className='flex flex-row items-center gap-3 rounded-lg border-b p-2 md:border md:px-4'>\n                    <Popover>\n                        <Button variant='ghost' icon className='md:hidden'>\n                            <IconContact />\n                        </Button>\n                        <Popover.Content aria-label='Contact List'>\n                            <Popover.Body>\n                                <ContactList />\n                            </Popover.Body>\n                        </Popover.Content>\n                    </Popover>\n                    <Avatar initials='HB' src='https://i.pravatar.cc/77' />\n                    <div className='grid'>\n                        <span className='text-sm'>Hebert</span>\n                        <small className='text-muted-fg text-xs'>Online</small>\n                    </div>\n                    <Menu>\n                        <Button className='ml-auto' variant='ghost'>\n                            <IconEllipsisVertical />\n                        </Button>\n                        <Menu.Content placement='bottom end'>\n                            <Menu.Item>\n                                <IconUser />\n                                Contact Info\n                            </Menu.Item>\n                            <Menu.Item>\n                                <IconTrash />\n                                Clear Chat\n                            </Menu.Item>\n                            <Menu.Item isDanger>\n                                <IconCircleX />\n                                Block\n                            </Menu.Item>\n                        </Menu.Content>\n                    </Menu>\n                </div>\n                <div className='flex-1 flex-col space-y-2 overflow-x-hidden overflow-y-scroll p-4 text-muted-fg'>\n                    {chats.length > 0 ? (\n                        chats?.map((chat: BubbleChatProps, i: number) => (\n                            <BubbleChat key={i} {...chat} onDelete={() => deleteChat(i)} />\n                        ))\n                    ) : (\n                        <div className='flex h-full flex-col items-center justify-center'>\n                            <IconMessageDashed className='!size-6' />\n                            <p className='text-center font-bold text-xl'>Start a conversation</p>\n                        </div>\n                    )}\n                </div>\n                <MessageForm value={message} valueAction={setMessage} sendAction={sendMessage} />\n            </div>\n        </main>\n    )\n}\n",
  "application/social/chat/contact-list.tsx": "import { Avatar } from '@/components/ui'\nimport { cn } from '@/lib/utils'\n\ninterface ContactProps {\n    id: number\n    name: string\n    avatar: string\n    status: 'online' | 'offline'\n    lastSeen: string\n    active: boolean\n}\nexport default function ContactList() {\n    return (\n        <div className='mb-4 grid w-full gap-2'>\n            {contacts.map((contact) => (\n                <Contact key={contact.id} {...contact} />\n            ))}\n        </div>\n    )\n}\nconst Contact = ({ name, avatar, status, lastSeen, active }: ContactProps) => {\n    return (\n        <div\n            className={cn(\n                'flex cursor-pointer flex-row items-center gap-3 rounded-lg border p-2 md:px-4',\n                active ? 'bg-ring' : ''\n            )}\n        >\n            {status === 'online' ? <Avatar src={avatar} /> : <Avatar src={avatar} />}\n            <div className='grid'>\n                <span className='text-sm'>{name}</span>\n                {status === 'online' ? (\n                    <small className='text-success text-xs'>Online</small>\n                ) : (\n                    <small className='text-muted-fg text-xs'>Last seen {lastSeen}</small>\n                )}\n            </div>\n        </div>\n    )\n}\n\nconst contacts: ContactProps[] = [\n    {\n        id: 1,\n        avatar: 'https://i.pravatar.cc/77',\n        name: 'Hebert',\n        status: 'online',\n        lastSeen: '20:32',\n        active: true\n    },\n    {\n        id: 2,\n        avatar: 'https://i.pravatar.cc/78',\n        name: 'Schroeder',\n        status: 'offline',\n        lastSeen: '02:10',\n        active: false\n    },\n    {\n        id: 3,\n        avatar: 'https://i.pravatar.cc/79',\n        name: 'Donna',\n        status: 'online',\n        lastSeen: '06:14',\n        active: false\n    },\n    {\n        id: 4,\n        avatar: 'https://i.pravatar.cc/80',\n        name: 'Olivia',\n        status: 'offline',\n        lastSeen: '06:47',\n        active: false\n    },\n    {\n        id: 5,\n        avatar: 'https://i.pravatar.cc/81',\n        name: 'Aisha',\n        status: 'offline',\n        lastSeen: '02:32',\n        active: false\n    },\n    {\n        id: 6,\n        avatar: 'https://i.pravatar.cc/82',\n        name: 'Bruce',\n        status: 'online',\n        lastSeen: '01:34',\n        active: false\n    },\n    {\n        id: 7,\n        avatar: 'https://i.pravatar.cc/83',\n        name: 'Harmon',\n        status: 'offline',\n        lastSeen: '00:15',\n        active: false\n    }\n]\n",
  "application/social/chat/layout.tsx": "import { SidebarInset } from '@/components/ui'\nimport ChatSidebar from '@/components/chat-sidebar'\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n    return (\n        <div className='flex'>\n            <ChatSidebar />\n            <SidebarInset>{children}</SidebarInset>\n        </div>\n    )\n}\n",
  "application/social/chat/bubble-chat.tsx": "'use client'\n\nimport {\n    IconCheck,\n    IconCheckDouble,\n    IconChevronRight,\n    IconClock,\n    IconForward,\n    IconInfo,\n    IconReply,\n    IconTrash\n} from 'hq-icons'\nimport type { ReactNode } from 'react'\n\nimport { Button, Menu } from '@/components/ui'\nimport { cn } from '@/lib/utils'\n\nexport interface BubbleChatProps {\n    message: string\n    time: string\n    role: 'send' | 'recieve'\n    status?: 'pending' | 'sent' | 'delivered' | 'read'\n    onDelete?: () => void\n}\n\nexport default function BubbleChat({ message, time, role, status, onDelete }: BubbleChatProps) {\n    const statusIcon: Record<string, ReactNode> = {\n        pending: <IconClock className='size-5 text-fg' />,\n        sent: <IconCheck className='size-5 text-fg' />,\n        delivered: <IconCheckDouble className='size-5 text-fg' />,\n        read: <IconCheckDouble className='size-5 text-success' />\n    }\n    return (\n        <div className={cn('group flex items-start', role === 'send' ? 'flex-row-reverse' : 'flex-row')}>\n            <div>\n                <div\n                    className={cn(\n                        'rounded-lg border px-2 py-1.5 text-right text-sm [&_strong]:font-medium',\n                        role === 'send' ? 'rounded-br-none' : 'rounded-bl-none'\n                    )}\n                >\n                    <div\n                        className='text-left text-fg text-sm'\n                        dangerouslySetInnerHTML={{ __html: convertToHtml(message) }}\n                    />\n                </div>\n                <small\n                    className={cn(\n                        'mt-0.5 flex items-center gap-1 text-muted-fg',\n                        role === 'send' ? 'justify-end' : 'justify-start'\n                    )}\n                >\n                    {time}\n                    {role === 'send' && status && statusIcon[status]}\n                </small>\n            </div>\n            <Menu>\n                <Button\n                    variant='outline'\n                    icon\n                    className='mx-2 size-7 p-1 opacity-0 pressed:opacity-100 transition group-hover:opacity-100'\n                >\n                    <IconChevronRight className={cn('size-3', role === 'send' ? 'rotate-180' : '')} />\n                </Button>\n                <Menu.Content placement={role === 'send' ? 'left' : 'right'} aria-label='Actions'>\n                    <Menu.Item>\n                        <IconReply />\n                        Reply\n                    </Menu.Item>\n                    <Menu.Item>\n                        <IconForward />\n                        Forward\n                    </Menu.Item>\n                    <Menu.Item>\n                        <IconInfo />\n                        Message Info\n                    </Menu.Item>\n                    <Menu.Item onAction={onDelete} isDanger>\n                        <IconTrash /> Delete\n                    </Menu.Item>\n                </Menu.Content>\n            </Menu>\n        </div>\n    )\n}\n\nconst convertToHtml = (text: string) => {\n    let html = text\n    html = html.replace(\n        /(https?:\\/\\/\\S+)/g,\n        '<a href=\"$1\" target=\"_blank\" class=\"text-primary underline\" rel=\"noopener noreferrer\">$1</a>'\n    )\n    html = html.replace(/`([^`]+)`/g, '<code class=\"font-mono\">$1</code>')\n    html = html.replace(/\\*(.*?)\\*/g, '<strong class=\"text-bold\">$1</strong>')\n    html = html.replace(/_(.*?)_/g, '<em>$1</em>')\n    html = html.replace(/~(.*?)~/g, '<del>$1</del>')\n    html = html.replace(/^(.*?)^/g, '<sup>$1</sup>')\n    html = html.replace(/\\n/g, '<br />')\n    return html\n}\n",
  "application/social/chat/message-form.tsx": "'use client'\n\nimport { IconCamera, IconMic, IconPaperclip, IconSend } from 'hq-icons'\nimport { type FormEvent, type KeyboardEvent, useEffect, useRef } from 'react'\n\nimport { Button, Form } from '@/components/ui'\n\ninterface MessageFormProps {\n    value: string\n    valueAction: (value: string) => void\n    sendAction: (e: FormEvent<HTMLFormElement>) => void\n}\nexport default function MessageForm({ value, valueAction, sendAction }: MessageFormProps) {\n    const editorRef = useRef<HTMLDivElement>(null)\n    useEffect(() => {\n        const editor = editorRef.current\n\n        const handleInput = () => {\n            if (editor) {\n                const text = editor.innerText\n                valueAction(text)\n                editor.innerHTML = formatText(text)\n                placeCaretAtEnd(editor)\n            }\n        }\n\n        const placeCaretAtEnd = (el: HTMLElement) => {\n            el.focus()\n            const range = document.createRange()\n            range.selectNodeContents(el)\n            range.collapse(false)\n            const sel = window.getSelection()\n            sel?.removeAllRanges()\n            sel?.addRange(range)\n        }\n\n        editor?.addEventListener('input', handleInput)\n\n        return () => {\n            editor?.removeEventListener('input', handleInput)\n        }\n    }, [valueAction])\n\n    function onSubmit(e: FormEvent<HTMLFormElement>) {\n        e.preventDefault()\n        sendAction(e)\n        if (editorRef.current) {\n            editorRef.current.innerHTML = ''\n        }\n    }\n    return (\n        <Form onSubmit={onSubmit} className='relative overflow-hidden rounded-lg border-t bg-bg md:border'>\n            <div\n                contentEditable\n                ref={editorRef}\n                onKeyDown={(e: KeyboardEvent) => {\n                    if (e.key === 'Enter' && !e.shiftKey && value.trim() !== '') {\n                        onSubmit(e as unknown as FormEvent<HTMLFormElement>)\n                    }\n                }}\n                aria-label='Message'\n                id='message'\n                className='no-scrollbar min-h-32 w-full resize-none border-0 p-3 outline-none'\n            />\n            <div className='flex items-center p-2'>\n                <Button variant='ghost' icon type='button'>\n                    <IconCamera className='size-4' />\n                    <span className='sr-only'>Upload Image</span>\n                </Button>\n                <Button variant='ghost' icon type='button'>\n                    <IconMic className='size-4' />\n                    <span className='sr-only'>Use Microphone</span>\n                </Button>\n                <Button variant='ghost' icon type='button'>\n                    <IconPaperclip className='size-4' />\n                    <span className='sr-only'>Attach File</span>\n                </Button>\n                <Button isDisabled={value.trim() === ''} type='submit' size='sm' className='ml-auto gap-1.5'>\n                    Send Message\n                    <IconSend />\n                </Button>\n            </div>\n        </Form>\n    )\n}\n\nconst formatText = (text: string) => {\n    return text\n        .replace(/_(.*?)_/g, '<em>_$1_</em>')\n        .replace(/_/g, '<span class=\"text-muted-fg\">_</span>')\n        .replace(/\\*(.*?)\\*/g, '<strong>*$1*</strong>')\n        .replace(/\\*/g, '<span class=\"text-muted-fg\">*</span>')\n        .replace(/~(.*?)~/g, '<del>~$1~</del>')\n        .replace(/~/g, '<span class=\"text-muted-fg\">~</span>')\n        .replace(/\\^(.*?)\\^/g, '<sup>^$1^</sup>')\n        .replace(/\\^/g, '<span class=\"text-muted-fg\">^</span>')\n        .replace(\n            /(https?:\\/\\/[^\\s]+)/g,\n            '<a href=\"$1\" class=\"text-primary underline\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>'\n        )\n        .replace(/\\n/g, '<br />')\n}\n",
  "ecommerce/tables/product/page.tsx": "'use client'\n\nimport { useEffect, useState } from 'react'\n\nimport { IconEllipsisVertical, IconEye, IconHighlighter, IconPlus, IconTrash } from 'hq-icons'\nimport type { Key } from 'react-aria-components'\nimport { useDebouncedCallback } from 'use-debounce'\n\nimport { Card, Container, Menu, SearchField, Select, Table, Toolbar } from '@/components/ui'\nimport Paginator from '@/components/paginator'\n\ntype product = {\n    id: number\n    title: string\n    category: string\n    price: string\n}\n\nexport default function ProductManagement() {\n    const [items, setItems] = useState<product[]>([])\n    const [show, setShow] = useState<Key>(5)\n    const [page, setPage] = useState<number>(1)\n    const [total, setTotal] = useState<number>(0)\n\n    const getProducts = async ({ query = '' }: { query?: string } = {}) => {\n        const response = await fetch(\n            `https://dummyjson.com/products/search?q=${query}&limit=${show}&skip=${(page - 1) * Number(show)}&select=title,category,price`\n        )\n        const data = await response.json()\n        setItems(data.products)\n        setTotal(data.total)\n    }\n\n    const handleSearch = useDebouncedCallback((e) => {\n        if (e) {\n            getProducts({ query: e })\n        } else {\n            getProducts()\n        }\n    }, 300)\n\n    // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n    useEffect(() => {\n        getProducts()\n    }, [show, page])\n\n    return (\n        <Container className='py-6 xl:py-12'>\n            <Card>\n                <Card.Header>\n                    <Card.Title>Product Management</Card.Title>\n                    <Card.Description>Manage your products</Card.Description>\n                    <Toolbar className='flex justify-between pt-2'>\n                        <Select className='w-32' aria-label='Show' selectedKey={show} onSelectionChange={setShow}>\n                            <Select.Item id={5} textValue='5'>\n                                5\n                            </Select.Item>\n                            <Select.Item id={10} textValue='10'>\n                                10\n                            </Select.Item>\n                            <Select.Item id={20} textValue='20'>\n                                20\n                            </Select.Item>\n                        </Select>\n                        <Toolbar.Group aria-label='Actions'>\n                            <SearchField onChange={handleSearch} placeholder='Search...' aria-label='Search' />\n                            <Toolbar.Item aria-label='Create' size='md' icon variant='outline'>\n                                <IconPlus />\n                            </Toolbar.Item>\n                        </Toolbar.Group>\n                    </Toolbar>\n                </Card.Header>\n                <Card.Content>\n                    <Table aria-label='Product'>\n                        <Table.Header>\n                            <Table.Column>#</Table.Column>\n                            <Table.Column id='title' isRowHeader>\n                                Title\n                            </Table.Column>\n                            <Table.Column>Category</Table.Column>\n                            <Table.Column>Price</Table.Column>\n                            <Table.Column />\n                        </Table.Header>\n                        <Table.Body\n                            items={items}\n                            renderEmptyState={() => (\n                                <div className='flex h-10 w-full items-center justify-center'>No products found</div>\n                            )}\n                        >\n                            {(item) => (\n                                <Table.Row id={item.id}>\n                                    <Table.Cell>{item.id}</Table.Cell>\n                                    <Table.Cell>{item.title}</Table.Cell>\n                                    <Table.Cell>{item.category}</Table.Cell>\n                                    <Table.Cell>{item.price}</Table.Cell>\n                                    <Table.Cell className='flex justify-end'>\n                                        <Menu>\n                                            <Menu.Trigger>\n                                                <IconEllipsisVertical />\n                                            </Menu.Trigger>\n                                            <Menu.Content placement='left top'>\n                                                <Menu.Item>\n                                                    <IconEye /> View\n                                                </Menu.Item>\n                                                <Menu.Item>\n                                                    <IconHighlighter /> Edit\n                                                </Menu.Item>\n                                                <Menu.Separator />\n                                                <Menu.Item isDanger>\n                                                    <IconTrash /> Delete\n                                                </Menu.Item>\n                                            </Menu.Content>\n                                        </Menu>\n                                    </Table.Cell>\n                                </Table.Row>\n                            )}\n                        </Table.Body>\n                    </Table>\n                </Card.Content>\n                <Card.Footer>\n                    <Paginator total={total} page={page} show={Number(show)} action={setPage} />\n                </Card.Footer>\n            </Card>\n        </Container>\n    )\n}\n",
  "ecommerce/tables/product/layout.tsx": "export default function Layout({ children }: { children: React.ReactNode }) {\n    return <main className='h-dvh w-full overflow-auto'>{children}</main>\n}\n",
  "ecommerce/tables/product/paginator.tsx": "'use client'\n\nimport { Pagination } from '@/components/ui'\nimport { useIsMobile } from '@/lib/hooks'\nimport { cn } from '@/lib/utils'\n\ninterface PaginateProps {\n    className?: string\n    show: number\n    total: number\n    page: number\n    action: (page: number) => void\n}\n\nexport default function Paginator({ className, show, page, total, action }: PaginateProps) {\n    const isMobile = useIsMobile()\n\n    const meta = {\n        total,\n        from: (page - 1) * Number(show) + 1,\n        to: total - show * page > 0 ? total - (total - show * page) : show * page - Math.abs(total - show * page),\n        page,\n        last_page: Math.ceil(total / show)\n    }\n\n    const actions = {\n        first: () => action(1),\n        prev: () => action(page - 1),\n        next: () => action(page + 1),\n        last: () => action(meta.last_page)\n    }\n    return (\n        <div\n            className={cn('flex w-full flex-col-reverse items-center gap-3 xl:flex-row xl:justify-between', className)}\n        >\n            <div>\n                Showing {meta.from} to {meta.to} of {meta.total} results\n            </div>\n            <div>\n                <Pagination>\n                    {isMobile ? (\n                        <>\n                            <Pagination.Item slot='first' isDisabled={meta.page === 1} onAction={actions.first} />\n                            <Pagination.Item slot='previous' isDisabled={meta.page === 1} onAction={actions.prev} />\n                            <Pagination.Label current={meta.page} total={meta.last_page} />\n                            <Pagination.Item\n                                slot='next'\n                                isDisabled={meta.page === meta.last_page}\n                                onAction={actions.next}\n                            />\n                            <Pagination.Item\n                                slot='last'\n                                isDisabled={meta.page === meta.last_page}\n                                onAction={actions.last}\n                            />\n                        </>\n                    ) : (\n                        <>\n                            <Pagination.Item slot='first' isDisabled={meta.page === 1} onAction={actions.first} />\n                            <Pagination.Item slot='previous' isDisabled={meta.page === 1} onAction={actions.prev} />\n                            {meta.page > 2 && (\n                                <Pagination.Item slot='first' onAction={actions.first}>\n                                    1\n                                </Pagination.Item>\n                            )}\n                            {meta.page > 3 && <Pagination.Item slot='ellipsis' />}\n                            {meta.page !== 1 && (\n                                <Pagination.Item slot='previous' onAction={() => action(meta.page - 1)}>\n                                    {meta.page - 1}\n                                </Pagination.Item>\n                            )}\n                            <Pagination.Item isCurrent>{meta.page}</Pagination.Item>\n                            {meta.page !== meta.last_page && (\n                                <Pagination.Item onAction={() => action(meta.page + 1)}>\n                                    {meta.page + 1}\n                                </Pagination.Item>\n                            )}\n                            {meta.page < meta.last_page - 2 && <Pagination.Item slot='ellipsis' />}\n                            {meta.page <= meta.last_page - 2 && (\n                                <Pagination.Item onAction={actions.last}>{meta.last_page}</Pagination.Item>\n                            )}\n                            <Pagination.Item\n                                slot='next'\n                                isDisabled={meta.page === meta.last_page}\n                                onAction={actions.next}\n                            />\n                            <Pagination.Item\n                                slot='last'\n                                isDisabled={meta.page === meta.last_page}\n                                onAction={actions.last}\n                            />\n                        </>\n                    )}\n                </Pagination>\n            </div>\n        </div>\n    )\n}\n",
  "marketing/management/file-manager/file-sidebar.tsx": "import { IconBrandCleon, IconDownload, IconFilm, IconFolders, IconHome, IconMusicNotes, IconTrash } from 'hq-icons'\n\nimport { Link, Sidebar } from '@/components/ui'\n\ninterface Props {\n    rootDir: string\n    action: (rootDir: string) => void\n}\n\nexport default function FileSidebar({ rootDir, action }: Props) {\n    return (\n        <Sidebar collapsible='dock' variant='inset'>\n            <Sidebar.Header>\n                <Link\n                    className='flex items-center gap-x-2 group-data-[collapsible=dock]:size-10 group-data-[collapsible=dock]:justify-center'\n                    href='#'\n                >\n                    <IconBrandCleon className='size-5' />\n                    <Sidebar.Label className='font-medium'>FILE MANAGER</Sidebar.Label>\n                </Link>\n            </Sidebar.Header>\n            <Sidebar.Content>\n                <Sidebar.Section>\n                    <Sidebar.Item onPress={() => action('')} isCurrent={rootDir === ''} href='#'>\n                        <IconHome />\n                        <Sidebar.Label>Home</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item\n                        onPress={() => action('Downloads/')}\n                        isCurrent={rootDir.startsWith('Downloads/')}\n                        href='#'\n                    >\n                        <IconDownload />\n                        <Sidebar.Label>Downloads</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item\n                        onPress={() => action('Documents/')}\n                        isCurrent={rootDir.startsWith('Documents/')}\n                        href='#'\n                    >\n                        <IconFolders />\n                        <Sidebar.Label>Documents</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item onPress={() => action('Music/')} isCurrent={rootDir.startsWith('Music/')} href='#'>\n                        <IconMusicNotes />\n                        <Sidebar.Label>Music</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item onPress={() => action('Videos/')} isCurrent={rootDir.startsWith('Videos/')} href='#'>\n                        <IconFilm />\n                        <Sidebar.Label>Videos</Sidebar.Label>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n                <Sidebar.Section>\n                    <Sidebar.Item onPress={() => action('Trash/')} isCurrent={rootDir === 'Trash/'} href='#'>\n                        <IconTrash />\n                        <Sidebar.Label>Trash</Sidebar.Label>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n            </Sidebar.Content>\n            <Sidebar.Rail />\n        </Sidebar>\n    )\n}\n",
  "marketing/management/file-manager/page.tsx": "'use client'\n\nimport { useEffect, useState } from 'react'\n\nimport { IconLayoutGrid, IconLayoutList, IconSearch, IconSquare, IconSquareCheckBig } from 'hq-icons'\n\nimport { Breadcrumbs, Button, GridList, SearchField, SidebarInset, Toggle } from '@/components/ui'\nimport { getFileIcon, mapFilePaths, rootFolders } from '@/components/file-list'\nimport FileSidebar from '@/components/file-sidebar'\n\nexport default function FileManager() {\n    const [view, setView] = useState<'grid' | 'stack'>('grid')\n    const [selectionMode, setSelectionMode] = useState<'single' | 'multiple'>('single')\n    const [dir, setDir] = useState('')\n    const paths = mapFilePaths(rootFolders)\n\n    const [files, setFiles] = useState(paths)\n\n    useEffect(() => {\n        setFiles(paths.filter((path) => path.startsWith(dir)))\n    }, [dir, paths])\n\n    return (\n        <>\n            <FileSidebar rootDir={dir} action={setDir} />\n            <SidebarInset>\n                <header className='sticky top-0 flex h-[3.57rem] items-center justify-between gap-x-2 px-4'>\n                    <span className='flex items-center gap-x-4'>\n                        <Breadcrumbs\n                            onAction={(v) => setDir(`${v}/`)}\n                            className='hidden md:flex'\n                            items={dir\n                                .split('/')\n                                .filter((item) => item !== '')\n                                .map((item) => ({ id: item }))}\n                        >\n                            {(item) => <Breadcrumbs.Item id={item.id}>{item.id}</Breadcrumbs.Item>}\n                        </Breadcrumbs>\n                    </span>\n                    <div className='flex items-center gap-x-2'>\n                        <Button variant='ghost' className='md:hidden' aria-label='Search...' icon>\n                            <IconSearch />\n                        </Button>\n                        <SearchField aria-label='Search' className='hidden md:inline-flex' />\n                        <Button\n                            icon\n                            variant='ghost'\n                            aria-label='View'\n                            onPress={() => setView(view === 'stack' ? 'grid' : 'stack')}\n                        >\n                            {view === 'stack' ? <IconLayoutList /> : <IconLayoutGrid className='size-5' />}\n                        </Button>\n                        <Toggle\n                            icon\n                            aria-label='Selection Mode'\n                            isSelected={selectionMode === 'multiple'}\n                            onChange={() => setSelectionMode(selectionMode === 'multiple' ? 'single' : 'multiple')}\n                        >\n                            {({ isSelected }) => (isSelected ? <IconSquareCheckBig /> : <IconSquare />)}\n                        </Toggle>\n                    </div>\n                </header>\n                <div className='p-4 lg:p-6'>\n                    <GridList\n                        aria-label='Files'\n                        selectionBehavior='toggle'\n                        selectionMode={selectionMode}\n                        columns={view === 'stack' ? 1 : 'auto'}\n                        gap={view === 'stack' ? 0 : 2}\n                        items={[\n                            ...new Map(\n                                files.map((item) => [\n                                    item.replace(dir, '').split('/')[0],\n                                    { id: item.replace(dir, '').split('/')[0] }\n                                ])\n                            ).values()\n                        ]}\n                    >\n                        {(item) => (\n                            <GridList.Item\n                                textValue={item.id}\n                                id={item.id}\n                                onAction={() => !item.id.includes('.') && setDir(`${dir + item.id.split('/')[0]}/`)}\n                            >\n                                {getFileIcon(item.id.split('.').pop() || 'folder')}\n                                {item.id}\n                            </GridList.Item>\n                        )}\n                    </GridList>\n                </div>\n            </SidebarInset>\n        </>\n    )\n}\n",
  "marketing/management/file-manager/layout.tsx": "export default function FileManagerLayout({ children }: { children: React.ReactNode }) {\n    return <div className='flex'>{children}</div>\n}\n",
  "marketing/management/file-manager/file-list.tsx": "import { IconArchive, IconDisc, IconFileImage, IconFileMusic, IconFileText, IconFileVideo, IconFolder } from 'hq-icons'\nimport type { FC, SVGProps } from 'react'\n\nexport type FileNode = {\n    file: string\n    children?: FileNode[]\n}\n\nconst filesInDownloads: FileNode[] = [\n    {\n        file: 'Compressed',\n        children: [{ file: 'laravel.zip' }, { file: 'react.zip' }, { file: 'nextjs.rar' }, { file: 'ubuntu.iso' }]\n    },\n    {\n        file: 'Docs',\n        children: [{ file: 'resume.pdf' }, { file: 'cv.pdf' }]\n    },\n    {\n        file: 'Programs',\n        children: [{ file: 'chrome.exe' }, { file: 'vscode.deb' }]\n    }\n]\n\nconst filesInDocuments: FileNode[] = [\n    {\n        file: 'Thesis',\n        children: [{ file: 'Bab 1.docx' }, { file: 'Bab 2.docx' }, { file: 'Bab 3.docx' }, { file: 'Cover.docx' }]\n    },\n    { file: 'Secret.txt' },\n    { file: 'Project.jpg' }\n]\n\nconst filesInMusic: FileNode[] = [\n    { file: 'The Beatles.mp3' },\n    { file: 'Led Zeppelin.mp3' },\n    { file: 'Pink Floyd.mp3' },\n    { file: 'Queen.wav' },\n    { file: 'The Rolling Stones.mp3' },\n    { file: 'The Who.wav' }\n]\n\nconst filesInVideos: FileNode[] = [\n    {\n        file: 'Mission Impossible',\n        children: [\n            { file: 'Mission Impossible 1.mp4' },\n            { file: 'Mission Impossible 2.mp4' },\n            { file: 'Mission Impossible 3.mp4' }\n        ]\n    },\n    { file: 'Star Wars.mp4' },\n    { file: 'Avengers - Endgame.mkv' }\n]\n\nexport const rootFolders: FileNode[] = [\n    {\n        file: 'Downloads',\n        children: filesInDownloads\n    },\n    {\n        file: 'Documents',\n        children: filesInDocuments\n    },\n    {\n        file: 'Music',\n        children: filesInMusic\n    },\n    {\n        file: 'Videos',\n        children: filesInVideos\n    }\n]\n\nexport function mapFilePaths(nodes: FileNode[], parentPath = ''): string[] {\n    let paths: string[] = []\n    for (const node of nodes) {\n        const currentPath = parentPath ? `${parentPath}/${node.file}` : node.file\n        if (node.children) {\n            paths = paths.concat(mapFilePaths(node.children, currentPath))\n        } else {\n            paths.push(currentPath)\n        }\n    }\n    return paths\n}\n\nexport const getFileIcon = (ext: string) => {\n    let Icon: FC<SVGProps<SVGSVGElement>>\n    switch (ext) {\n        case 'jpg':\n        case 'png':\n            Icon = IconFileImage\n            break\n        case 'txt':\n        case 'docx':\n        case 'pdf':\n            Icon = IconFileText\n            break\n        case 'mp3':\n        case 'wav':\n            Icon = IconFileMusic\n            break\n        case 'mp4':\n        case 'mkv':\n            Icon = IconFileVideo\n            break\n        case 'zip':\n        case 'rar':\n            Icon = IconArchive\n            break\n        case 'iso':\n            Icon = IconDisc\n            break\n        default:\n            Icon = IconFolder\n            break\n    }\n    return <Icon />\n}\n",
  "utils.ts": "import { type ClassValue, clsx } from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nexport const cn = (...inputs: ClassValue[]) => twMerge(clsx(inputs))\nexport const fuzzyMatch = (textValue: string, inputValue: string): boolean => {\n    if (inputValue.length === 0) return true\n    if (textValue.length === 0) return false\n    let textIndex = 0\n    let inputIndex = 0\n    while (textIndex < textValue.length && inputIndex < inputValue.length) {\n        if (textValue.toLowerCase()[textIndex] === inputValue.toLowerCase()[inputIndex]) {\n            inputIndex++\n        }\n        textIndex++\n    }\n    return inputIndex === inputValue.length\n}\n",
  "hooks.ts": "import { useEffect, useState } from 'react'\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n    const [isMobile, setIsMobile] = useState<boolean | undefined>(undefined)\n\n    useEffect(() => {\n        const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n        const onChange = () => {\n            setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n        }\n        mql.addEventListener('change', onChange)\n        setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n        return () => mql.removeEventListener('change', onChange)\n    }, [])\n\n    return !!isMobile\n}\n",
  "globals.css": "@import \"tailwindcss\";\n@import \"tw-animate-css\";\n\n@plugin 'tailwindcss-react-aria-components';\n\n@variant dark (&:is(.dark *));\n\n@theme inline {\n    --font-sans: var(--font-sans), ui-sans-serif, system-ui, sans-serif;\n    --font-mono: var(--font-mono), ui-monospace, monospace;\n\n    --color-bg: var(--bg);\n    --color-fg: var(--fg);\n    --color-muted: var(--muted);\n    --color-muted-fg: var(--muted-fg);\n\n    --color-primary: var(--primary);\n    --color-primary-fg: var(--primary-fg);\n\n    --color-secondary: var(--secondary);\n    --color-secondary-fg: var(--secondary-fg);\n\n    --color-danger: var(--danger);\n    --color-danger-fg: var(--danger-fg);\n\n    --color-border: var(--muted);\n    --color-ring: hsla(from var(--primary) h s l / 0.15);\n    --color-invalid: hsla(from var(--danger) h s l / 0.15);\n\n    --color-chart-1: var(--chart-1);\n    --color-chart-2: var(--chart-2);\n    --color-chart-3: var(--chart-3);\n    --color-chart-4: var(--chart-4);\n    --color-chart-5: var(--chart-5);\n\n    --chart-1: hsl(from var(--primary) h s calc(l * 1));\n    --chart-2: hsl(from var(--primary) h s calc(l * 1.15));\n    --chart-3: hsl(from var(--primary) h s calc(l * 1.3));\n    --chart-4: hsl(from var(--primary) h s calc(l * 1.45));\n    --chart-5: hsl(from var(--primary) h s calc(l * 1.55));\n\n    --radius-xs: calc(var(--radius-lg) - 5px);\n    --radius-sm: calc(var(--radius-lg) - 2px);\n    --radius-md: calc(var(--radius-lg) - 1px);\n    --radius-lg: var(--radius);\n    --radius-xl: calc(var(--radius-lg) + 5px);\n}\n\n@layer base {\n    :root {\n        --bg: oklch(0.985 0 0);\n        --fg: oklch(0.141 0.004 285.863);\n        --primary: oklch(0.623 0.188 259.813);\n        --primary-fg: oklch(0.97 0.014 254.605);\n        --secondary: oklch(0.809 0.096 251.808);\n        --secondary-fg: oklch(0.282 0.087 267.936);\n        --danger: oklch(0.645 0.215 16.444);\n        --danger-fg: oklch(0.969 0.015 12.545);\n        --muted: oklch(0.871 0.005 286.485);\n        --muted-fg: oklch(0.552 0.014 285.988);\n\n        --radius: 0.5rem;\n    }\n\n    .dark {\n        --bg: oklch(0.141 0.004 285.863);\n        --fg: oklch(0.985 0 0);\n        --secondary: oklch(0.282 0.087 267.936);\n        --secondary-fg: oklch(0.809 0.096 251.808);\n        --danger: oklch(0.586 0.222 17.589);\n        --danger-fg: oklch(0.969 0.015 12.545);\n        --muted: oklch(0.274 0.005 286.095);\n        --muted-fg: oklch(0.552 0.014 285.988);\n    }\n}\n\n@layer base {\n    *,\n    ::after,\n    ::before,\n    ::backdrop,\n    ::file-selector-button {\n        border-color: var(--muted, currentColor);\n        scroll-behavior: smooth;\n    }\n\n    body {\n        background-color: var(--bg);\n        color: var(--fg);\n    }\n\n    *::-webkit-scrollbar {\n        border-radius: var(--radius-lg);\n        width: 7px;\n        height: 7px;\n    }\n\n    *::-webkit-scrollbar-track {\n        border-radius: var(--radius-lg);\n        background: transparent;\n    }\n\n    *::-webkit-scrollbar-thumb {\n        background: var(--muted);\n        border-radius: var(--radius-lg);\n    }\n}\n\n@layer components {\n    .no-scrollbar {\n        -ms-overflow-style: none; /* Internet Explorer and Edge */\n        scrollbar-width: none; /* Firefox */\n\n        ::-webkit-scrollbar {\n            display: none; /* Safari and Chrome */\n        }\n    }\n\n    pre::-webkit-scrollbar {\n        display: none;\n    }\n}\n"
}