[data-rehype-pretty-code-figure] {
    margin: 0;
}

[data-rehype-pretty-code-figure] pre {
    border-radius: var(--radius-lg);
    @apply rounded-lg border px-0 py-2;
}

[data-rehype-pretty-code-figure] code {
    @apply border-0 p-0 !text-sm !leading-loose md:text-base !rounded-lg;
}

span[data-rehype-pretty-code-figure] > code span {
    @apply !px-0.5 !font-normal;
}

pre code {
    counter-reset: line;
}

pre code > [data-line]::before {
    counter-increment: line;
    content: counter(line);
    @apply text-zinc-500 mr-8 inline-block w-4 text-right;
}

pre code[data-line-numbers-max-digits='2'] > [data-line]::before {
    width: 2rem;
}

pre code[data-line-numbers-max-digits='3'] > [data-line]::before {
    width: 3rem;
}

[data-rehype-pretty-code-figure] code[data-line-numbers] {
    counter-reset: line;
}

[data-rehype-pretty-code-figure] code[data-line-numbers] > [data-line]::before {
    counter-increment: line;
    content: counter(line);
    @apply mr-4 inline-block w-4 text-right;
}

[data-rehype-pretty-code-figure] [data-line] {
    @apply border-l-2 border-l-transparent px-3;
}

[data-rehype-pretty-code-figure] [data-highlighted-line] {
    background: rgba(200, 200, 255, 0.2) !important;
    border-left-color: color-mix(in oklab, var(--primary) 80%, transparent) !important;
}

[data-rehype-pretty-code-figure] [data-highlighted-chars] {
    background: rgba(200, 200, 255, 0.2) !important;
    box-shadow: 0 0 0 4px rgb(82 82 91 / 0.5) !important;
}

[data-rehype-pretty-code-figure] [data-chars-id] {
    border-bottom-color: color-mix(in oklab, var(--primary) 80%, transparent) !important;
    @apply border-b-2 p-1 shadow-none;
}

.subheading-anchor {
    @apply text-primary font-semibold no-underline hover:no-underline;
}

.prose-headings\:scroll-mt-24
    :is(
        :where(h1, h2, h3, h4, h5, h6, th):not(:where([class~='not-prose'], [class~='not-prose'] *))
    )
    > a {
    text-decoration: none !important;
    color: var(--fg);
}

.prose :where(code):not(:where([class~='not-prose'], [class~='not-prose'] *))::before,
.prose :where(code):not(:where([class~='not-prose'], [class~='not-prose'] *))::after {
    @apply hidden;
}
