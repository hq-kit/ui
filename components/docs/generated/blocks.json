{
  "ecommerce/tables/product/page.tsx": "'use client'\n\nimport type { Key } from 'react-aria-components'\nimport { IconDotsVertical, IconEye, IconHighlight, IconPlus, IconTrash } from '@tabler/icons-react'\nimport { useEffect, useState } from 'react'\nimport { useDebouncedCallback } from 'use-debounce'\nimport { Card, Container, Menu, SearchField, Select, Table, Toolbar } from '@/components/ui'\nimport Paginator from '@/components/paginator'\n\ntype product = {\n    id: number\n    title: string\n    category: string\n    price: string\n}\n\nexport default function ProductManagement() {\n    const [items, setItems] = useState<product[]>([])\n    const [show, setShow] = useState<Key | null>(5)\n    const [page, setPage] = useState<number>(1)\n    const [total, setTotal] = useState<number>(0)\n\n    const getProducts = async ({ query = '' }: { query?: string } = {}) => {\n        const response = await fetch(\n            `https://dummyjson.com/products/search?q=${query}&limit=${show}&skip=${(page - 1) * Number(show)}&select=title,category,price`\n        )\n        const data = await response.json()\n        setItems(data.products)\n        setTotal(data.total)\n    }\n\n    const handleSearch = useDebouncedCallback((e) => {\n        if (e) {\n            getProducts({ query: e })\n        } else {\n            getProducts()\n        }\n    }, 300)\n\n    useEffect(() => {\n        getProducts()\n    }, [show, page])\n\n    return (\n        <Container className='py-6 xl:py-12'>\n            <Card>\n                <Card.Header>\n                    <Card.Title>Product Management</Card.Title>\n                    <Card.Description>Manage your products</Card.Description>\n                    <Toolbar className='flex justify-between pt-2'>\n                        <Select aria-label='Show' className='w-32' onSelectionChange={setShow} selectedKey={show}>\n                            <Select.Item id={5} textValue='5'>\n                                5\n                            </Select.Item>\n                            <Select.Item id={10} textValue='10'>\n                                10\n                            </Select.Item>\n                            <Select.Item id={20} textValue='20'>\n                                20\n                            </Select.Item>\n                        </Select>\n                        <Toolbar.Group aria-label='Actions'>\n                            <SearchField aria-label='Search' onChange={handleSearch} placeholder='Search...' />\n                            <Toolbar.Item aria-label='Create' icon size='md' variant='outline'>\n                                <IconPlus />\n                            </Toolbar.Item>\n                        </Toolbar.Group>\n                    </Toolbar>\n                </Card.Header>\n                <Card.Content>\n                    <Table aria-label='Product'>\n                        <Table.Header>\n                            <Table.Column>#</Table.Column>\n                            <Table.Column id='title' isRowHeader>\n                                Title\n                            </Table.Column>\n                            <Table.Column>Category</Table.Column>\n                            <Table.Column>Price</Table.Column>\n                            <Table.Column />\n                        </Table.Header>\n                        <Table.Body\n                            items={items}\n                            renderEmptyState={() => (\n                                <div className='flex h-10 w-full items-center justify-center'>No products found</div>\n                            )}\n                        >\n                            {(item) => (\n                                <Table.Row id={item.id}>\n                                    <Table.Cell>{item.id}</Table.Cell>\n                                    <Table.Cell>{item.title}</Table.Cell>\n                                    <Table.Cell>{item.category}</Table.Cell>\n                                    <Table.Cell>{item.price}</Table.Cell>\n                                    <Table.Cell className='flex justify-end'>\n                                        <Menu>\n                                            <Menu.Trigger>\n                                                <IconDotsVertical />\n                                            </Menu.Trigger>\n                                            <Menu.Content placement='left top'>\n                                                <Menu.Item>\n                                                    <IconEye /> View\n                                                </Menu.Item>\n                                                <Menu.Item>\n                                                    <IconHighlight /> Edit\n                                                </Menu.Item>\n                                                <Menu.Separator />\n                                                <Menu.Item isDestructive>\n                                                    <IconTrash /> Delete\n                                                </Menu.Item>\n                                            </Menu.Content>\n                                        </Menu>\n                                    </Table.Cell>\n                                </Table.Row>\n                            )}\n                        </Table.Body>\n                    </Table>\n                </Card.Content>\n                <Card.Footer>\n                    <Paginator action={setPage} page={page} show={Number(show)} total={total} />\n                </Card.Footer>\n            </Card>\n        </Container>\n    )\n}\n",
  "ecommerce/tables/product/paginator.tsx": "'use client'\n\nimport { Pagination } from '@/components/ui'\nimport { useIsMobile } from '@/lib/hooks'\nimport { cn } from '@/lib/utils'\n\ninterface PaginateProps {\n    className?: string\n    show: number\n    total: number\n    page: number\n    action: (page: number) => void\n}\n\nexport default function Paginator({ className, show, page, total, action }: PaginateProps) {\n    const isMobile = useIsMobile()\n\n    const meta = {\n        total,\n        from: (page - 1) * Number(show) + 1,\n        to: total - show * page > 0 ? total - (total - show * page) : show * page - Math.abs(total - show * page),\n        page,\n        last_page: Math.ceil(total / show)\n    }\n\n    const actions = {\n        first: () => action(1),\n        prev: () => action(page - 1),\n        next: () => action(page + 1),\n        last: () => action(meta.last_page)\n    }\n    return (\n        <div\n            className={cn('flex w-full flex-col-reverse items-center gap-3 xl:flex-row xl:justify-between', className)}\n        >\n            <div>\n                Showing {meta.from} to {meta.to} of {meta.total} results\n            </div>\n            <div>\n                <Pagination>\n                    {isMobile ? (\n                        <>\n                            <Pagination.Item isDisabled={meta.page === 1} onAction={actions.first} slot='first' />\n                            <Pagination.Item isDisabled={meta.page === 1} onAction={actions.prev} slot='previous' />\n                            <Pagination.Label current={meta.page} total={meta.last_page} />\n                            <Pagination.Item\n                                isDisabled={meta.page === meta.last_page}\n                                onAction={actions.next}\n                                slot='next'\n                            />\n                            <Pagination.Item\n                                isDisabled={meta.page === meta.last_page}\n                                onAction={actions.last}\n                                slot='last'\n                            />\n                        </>\n                    ) : (\n                        <>\n                            <Pagination.Item isDisabled={meta.page === 1} onAction={actions.first} slot='first' />\n                            <Pagination.Item isDisabled={meta.page === 1} onAction={actions.prev} slot='previous' />\n                            {meta.page > 2 && (\n                                <Pagination.Item onAction={actions.first} slot='first'>\n                                    1\n                                </Pagination.Item>\n                            )}\n                            {meta.page > 3 && <Pagination.Item slot='ellipsis' />}\n                            {meta.page !== 1 && (\n                                <Pagination.Item onAction={() => action(meta.page - 1)} slot='previous'>\n                                    {meta.page - 1}\n                                </Pagination.Item>\n                            )}\n                            <Pagination.Item isCurrent>{meta.page}</Pagination.Item>\n                            {meta.page !== meta.last_page && (\n                                <Pagination.Item onAction={() => action(meta.page + 1)}>\n                                    {meta.page + 1}\n                                </Pagination.Item>\n                            )}\n                            {meta.page < meta.last_page - 2 && <Pagination.Item slot='ellipsis' />}\n                            {meta.page <= meta.last_page - 2 && (\n                                <Pagination.Item onAction={actions.last}>{meta.last_page}</Pagination.Item>\n                            )}\n                            <Pagination.Item\n                                isDisabled={meta.page === meta.last_page}\n                                onAction={actions.next}\n                                slot='next'\n                            />\n                            <Pagination.Item\n                                isDisabled={meta.page === meta.last_page}\n                                onAction={actions.last}\n                                slot='last'\n                            />\n                        </>\n                    )}\n                </Pagination>\n            </div>\n        </div>\n    )\n}\n",
  "ecommerce/tables/product/layout.tsx": "export default function Layout({ children }: { children: React.ReactNode }) {\n    return <main className='h-dvh w-full overflow-auto'>{children}</main>\n}\n",
  "application/authentication/split-card/page.tsx": "'use client'\n\nimport { IconBrandGithub, IconBrandGoogle, IconPhoto } from '@tabler/icons-react'\nimport { IconApp } from '@/components/icons'\nimport { Button, Card, Checkbox, Form, Header, Link, Separator, Skeleton, TextField, toast } from '@/components/ui'\n\nexport default function Page() {\n    return (\n        <Card className='grid w-full max-w-5xl lg:grid-cols-2'>\n            <div className='flex h-full items-center justify-center px-4 lg:px-8'>\n                <div className='mx-auto w-full max-w-lg'>\n                    <div className='my-6 flex flex-col justify-center'>\n                        <Link href='#'>\n                            <IconApp className='mb-2 size-10' />\n                        </Link>\n                        <Header description='Fill in the form below to create your account' title='Register' />\n                    </div>\n                    <Form\n                        onSubmit={(e) => {\n                            e.preventDefault()\n                            toast.success('Dummy Login Successfully')\n                        }}\n                    >\n                        <div className='grid gap-4'>\n                            <TextField isRequired label='Name' placeholder='Enter your Name' />\n                            <TextField isRequired label='Email' placeholder='Enter your email' type='email' />\n                            <TextField isRequired label='Password' placeholder='Enter your password' type='password' />\n                            <TextField\n                                isRequired\n                                label='Confirm Password'\n                                placeholder='Enter your password'\n                                type='password'\n                            />\n                            <Checkbox>I agree to the terms and conditions</Checkbox>\n                            <Button className='w-full' type='submit'>\n                                Login\n                            </Button>\n                            <Link className='text-center text-muted-foreground text-sm hover:text-foreground' href='#'>\n                                Don't have an account? Register\n                            </Link>\n                            <Separator>Or continue with</Separator>\n                            <div className='flex gap-4 pb-6'>\n                                <Button className='w-full' variant='outline'>\n                                    <IconBrandGithub className='size-4' />\n                                    Github\n                                </Button>\n                                <Button className='w-full' variant='outline'>\n                                    <IconBrandGoogle className='size-4' />\n                                    Google\n                                </Button>\n                            </div>\n                        </div>\n                    </Form>\n                </div>\n            </div>\n            <div className='relative hidden lg:block'>\n                <Skeleton className='size-full' />\n                <IconPhoto className='-translate-x-1/2 -translate-y-1/2 absolute top-1/2 left-1/2 size-24 text-muted-foreground' />\n            </div>\n        </Card>\n    )\n}\n",
  "application/authentication/split-card/layout.tsx": "export default function Layout({ children }: { children: React.ReactNode }) {\n    return (\n        <main className='flex h-dvh w-full flex-col items-center justify-center gap-6 bg-muted px-4 lg:px-8'>\n            {children}\n        </main>\n    )\n}\n",
  "application/authentication/card/page.tsx": "'use client'\n\nimport { IconBrandGithub, IconBrandGoogle } from '@tabler/icons-react'\nimport Link from 'next/link'\nimport { IconApp } from '@/components/icons'\nimport { Button, Card, Checkbox, Form, Separator, TextField, toast } from '@/components/ui'\n\nexport default function Page() {\n    return (\n        <>\n            <Link href='#'>\n                <IconApp className='size-10' />\n            </Link>\n            <Card className='w-full max-w-md shadow-lg'>\n                <Card.Header>\n                    <Card.Title>Register</Card.Title>\n                    <Card.Description>Fill in the form below to create your account</Card.Description>\n                </Card.Header>\n                <Form\n                    onSubmit={(e) => {\n                        e.preventDefault()\n                        toast.success('Dummy Login Successfully')\n                    }}\n                >\n                    <Card.Content className='grid gap-4'>\n                        <TextField isRequired label='Name' placeholder='Enter your Name' />\n                        <TextField isRequired label='Email' placeholder='Enter your email' type='email' />\n                        <TextField isRequired label='Password' placeholder='Enter your password' type='password' />\n                        <TextField\n                            isRequired\n                            label='Confirm Password'\n                            placeholder='Enter your password'\n                            type='password'\n                        />\n                        <Checkbox>I agree to the terms and conditions</Checkbox>\n                        <Button className='w-full' type='submit'>\n                            Login\n                        </Button>\n                        <Link className='text-center text-muted-foreground text-sm hover:text-foreground' href='#'>\n                            Don't have an account? Register\n                        </Link>\n                        <Separator>Or continue with</Separator>\n                        <div className='flex gap-4 pb-6'>\n                            <Button className='w-full' variant='outline'>\n                                <IconBrandGithub className='size-4' />\n                                Github\n                            </Button>\n                            <Button className='w-full' variant='outline'>\n                                <IconBrandGoogle className='size-4' />\n                                Google\n                            </Button>\n                        </div>\n                    </Card.Content>\n                </Form>\n            </Card>\n        </>\n    )\n}\n",
  "application/authentication/card/layout.tsx": "export default function Layout({ children }: { children: React.ReactNode }) {\n    return <main className='flex h-dvh w-full flex-col items-center justify-center gap-6 bg-muted'>{children}</main>\n}\n",
  "application/authentication/overlay/page.tsx": "'use client'\n\nimport { IconBrandGithub, IconBrandGoogle, IconPhoto } from '@tabler/icons-react'\nimport { useState } from 'react'\nimport { IconApp } from '@/components/icons'\nimport {\n    Button,\n    Card,\n    Checkbox,\n    Form,\n    Header,\n    Link,\n    ModalContent,\n    Separator,\n    Skeleton,\n    TextField,\n    toast\n} from '@/components/ui'\n\nexport default function Page() {\n    const [isOpen, setIsOpen] = useState<boolean>(true)\n    return (\n        <>\n            <Button onPress={() => setIsOpen(true)}>Open</Button>\n            <ModalContent\n                className='flex flex-col items-center justify-center gap-6'\n                isOpen={isOpen}\n                onOpenChange={setIsOpen}\n                size='5xl'\n            >\n                <Card className='grid w-full max-w-5xl lg:grid-cols-2'>\n                    <div className='flex h-full items-center justify-center px-4 lg:px-8'>\n                        <div className='mx-auto w-full max-w-lg'>\n                            <div className='my-6 flex flex-col justify-center'>\n                                <Link href='#'>\n                                    <IconApp className='mb-2 size-10' />\n                                </Link>\n                                <Header description='Fill in the form below to create your account' title='Register' />\n                            </div>\n                            <Form\n                                onSubmit={(e) => {\n                                    e.preventDefault()\n                                    toast.success('Dummy Login Successfully')\n                                }}\n                            >\n                                <div className='grid gap-4'>\n                                    <TextField isRequired label='Name' placeholder='Enter your Name' />\n                                    <TextField isRequired label='Email' placeholder='Enter your email' type='email' />\n                                    <TextField\n                                        isRequired\n                                        label='Password'\n                                        placeholder='Enter your password'\n                                        type='password'\n                                    />\n                                    <TextField\n                                        isRequired\n                                        label='Confirm Password'\n                                        placeholder='Enter your password'\n                                        type='password'\n                                    />\n                                    <Checkbox>I agree to the terms and conditions</Checkbox>\n                                    <Button className='w-full' type='submit'>\n                                        Login\n                                    </Button>\n                                    <Link\n                                        className='text-center text-muted-foreground text-sm hover:text-foreground'\n                                        href='#'\n                                    >\n                                        Don't have an account? Register\n                                    </Link>\n                                    <Separator>Or continue with</Separator>\n                                    <div className='flex gap-4 pb-6'>\n                                        <Button className='w-full' variant='outline'>\n                                            <IconBrandGithub className='size-4' />\n                                            Github\n                                        </Button>\n                                        <Button className='w-full' variant='outline'>\n                                            <IconBrandGoogle className='size-4' />\n                                            Google\n                                        </Button>\n                                    </div>\n                                </div>\n                            </Form>\n                        </div>\n                    </div>\n                    <div className='relative hidden lg:block'>\n                        <Skeleton className='size-full' />\n                        <IconPhoto className='-translate-x-1/2 -translate-y-1/2 absolute top-1/2 left-1/2 size-24 text-muted-foreground' />\n                    </div>\n                </Card>\n            </ModalContent>\n        </>\n    )\n}\n",
  "application/authentication/overlay/layout.tsx": "export default function Layout({ children }: { children: React.ReactNode }) {\n    return <main className='flex h-dvh w-full items-center justify-center bg-muted'>{children}</main>\n}\n",
  "application/authentication/split/page.tsx": "'use client'\n\nimport { IconBrandGithub, IconBrandGoogle, IconPhoto } from '@tabler/icons-react'\nimport { IconApp } from '@/components/icons'\nimport { Button, Checkbox, Form, Header, Link, Separator, Skeleton, TextField, toast } from '@/components/ui'\n\nexport default function Page() {\n    return (\n        <>\n            <div className='flex h-full items-center justify-center px-4 lg:px-8'>\n                <div className='mx-auto w-full max-w-lg'>\n                    <div className='mb-6 flex flex-col items-center justify-center'>\n                        <Link href='#'>\n                            <IconApp className='mb-2 size-10' />\n                        </Link>\n                        <Header description='Fill in the form below to create your account' title='Register' />\n                    </div>\n                    <Form\n                        onSubmit={(e) => {\n                            e.preventDefault()\n                            toast.success('Dummy Login Successfully')\n                        }}\n                    >\n                        <div className='grid gap-4'>\n                            <TextField isRequired label='Name' placeholder='Enter your Name' />\n                            <TextField isRequired label='Email' placeholder='Enter your email' type='email' />\n                            <TextField isRequired label='Password' placeholder='Enter your password' type='password' />\n                            <TextField\n                                isRequired\n                                label='Confirm Password'\n                                placeholder='Enter your password'\n                                type='password'\n                            />\n                            <Checkbox>I agree to the terms and conditions</Checkbox>\n                            <Button className='w-full' type='submit'>\n                                Login\n                            </Button>\n                            <Link className='text-center text-muted-foreground text-sm hover:text-foreground' href='#'>\n                                Don't have an account? Register\n                            </Link>\n                            <Separator>Or continue with</Separator>\n                            <div className='flex gap-4 pb-6'>\n                                <Button className='w-full' variant='outline'>\n                                    <IconBrandGithub className='size-4' />\n                                    Github\n                                </Button>\n                                <Button className='w-full' variant='outline'>\n                                    <IconBrandGoogle className='size-4' />\n                                    Google\n                                </Button>\n                            </div>\n                        </div>\n                    </Form>\n                </div>\n            </div>\n            <div className='relative hidden lg:block'>\n                <Skeleton className='size-full' />\n                <IconPhoto className='-translate-x-1/2 -translate-y-1/2 absolute top-1/2 left-1/2 size-24 text-muted-foreground' />\n            </div>\n        </>\n    )\n}\n",
  "application/authentication/split/layout.tsx": "export default function Layout({ children }: { children: React.ReactNode }) {\n    return <main className='grid h-dvh w-full lg:grid-cols-2'>{children}</main>\n}\n",
  "application/social/chat/page.tsx": "'use client'\n\nimport {\n    IconCircleX,\n    IconDotsVertical,\n    IconLogout,\n    IconMessageDots,\n    IconMessagePlus,\n    IconTrash,\n    IconUser,\n    IconUserSquareRounded\n} from '@tabler/icons-react'\nimport { type FormEvent, useState } from 'react'\nimport { useDateFormatter } from 'react-aria'\nimport { Avatar, Button, Menu, Popover } from '@/components/ui'\nimport BubbleChat, { type BubbleChatProps } from '@/components/bubble-chat'\nimport ContactList from '@/components/contact-list'\nimport MessageForm from '@/components/message-form'\n\nexport default function ChatApp() {\n    const [chats, setChats] = useState<BubbleChatProps[]>([\n        {\n            message: \"Assalamu'alaikum, Hello Bro!\",\n            time: '10:00',\n            role: 'recieve'\n        },\n        {\n            message: \"Wa'alaikumsalam, Yes Bro... What's up?\",\n            time: '10:01',\n            role: 'send',\n            status: 'read'\n        },\n        {\n            message: `I Have a good news, There is new Component at this site. I hope you will like it.\n                Check it out. https://cleon-ui.vercel.app\n                `,\n            time: '10:03',\n            role: 'recieve'\n        }\n    ])\n\n    const [message, setMessage] = useState<string>('')\n    const formatter = useDateFormatter({ hour: '2-digit', minute: '2-digit', hour12: false })\n\n    function sendMessage(e: FormEvent) {\n        e.preventDefault()\n        setChats([\n            ...chats,\n            {\n                message,\n                time: formatter.format(new Date()),\n                role: 'send'\n            }\n        ])\n        setMessage('')\n    }\n\n    function deleteChat(index: number) {\n        setChats([...chats.slice(0, index), ...chats.slice(index + 1)])\n    }\n\n    return (\n        <main className='grid h-dvh flex-1 gap-3 overflow-auto md:grid-cols-2 md:p-2 lg:grid-cols-4'>\n            <div className='relative hidden flex-col items-start gap-4 rounded-lg border md:flex'>\n                <div className='sticky top-0 z-20 flex w-full items-center justify-between rounded-lg bg-background p-4'>\n                    <h1 className='font-bold text-2xl'>Chats</h1>\n                    <div className='flex items-center justify-between gap-2'>\n                        <Button icon variant='ghost'>\n                            <IconMessageDots className='!size-6' />\n                        </Button>\n                        <Menu>\n                            <Button icon variant='ghost'>\n                                <IconDotsVertical />\n                            </Button>\n                            <Menu.Content placement='bottom end'>\n                                <Menu.Item>\n                                    <IconMessagePlus />\n                                    New Group\n                                </Menu.Item>\n                                <Menu.Item isDestructive>\n                                    <IconLogout />\n                                    Logout\n                                </Menu.Item>\n                            </Menu.Content>\n                        </Menu>\n                    </div>\n                </div>\n                <div className='w-full px-4'>\n                    <ContactList />\n                </div>\n            </div>\n            <div className='relative flex h-full min-h-[50vh] flex-col rounded-lg bg-background lg:col-span-3'>\n                <div className='flex flex-row items-center gap-3 rounded-lg border-b p-2 md:border md:px-4'>\n                    <Popover>\n                        <Button className='md:hidden' icon variant='ghost'>\n                            <IconUserSquareRounded />\n                        </Button>\n                        <Popover.Content aria-label='Contact List'>\n                            <Popover.Body>\n                                <ContactList />\n                            </Popover.Body>\n                        </Popover.Content>\n                    </Popover>\n                    <Avatar alt='Hebert' src='https://i.pravatar.cc/77' />\n                    <div className='grid'>\n                        <span className='text-sm'>Hebert</span>\n                        <small className='text-muted-foreground text-xs'>Online</small>\n                    </div>\n                    <Menu>\n                        <Button className='ml-auto' variant='ghost'>\n                            <IconDotsVertical />\n                        </Button>\n                        <Menu.Content placement='bottom end'>\n                            <Menu.Item>\n                                <IconUser />\n                                Contact Info\n                            </Menu.Item>\n                            <Menu.Item>\n                                <IconTrash />\n                                Clear Chat\n                            </Menu.Item>\n                            <Menu.Item isDestructive>\n                                <IconCircleX />\n                                Block\n                            </Menu.Item>\n                        </Menu.Content>\n                    </Menu>\n                </div>\n                <div className='flex-1 flex-col space-y-2 overflow-x-hidden overflow-y-scroll p-4 text-muted-foreground'>\n                    {chats.length > 0 ? (\n                        chats?.map((chat: BubbleChatProps, i: number) => (\n                            <BubbleChat key={i} {...chat} onDelete={() => deleteChat(i)} />\n                        ))\n                    ) : (\n                        <div className='flex h-full flex-col items-center justify-center'>\n                            <IconMessageDots className='!size-6' />\n                            <p className='text-center font-bold text-xl'>Start a conversation</p>\n                        </div>\n                    )}\n                </div>\n                <MessageForm sendAction={sendMessage} value={message} valueAction={setMessage} />\n            </div>\n        </main>\n    )\n}\n",
  "application/social/chat/chat-sidebar.tsx": "'use client'\n\nimport {\n    IconChevronRight,\n    IconHeadphones,\n    IconLogout,\n    IconMessage,\n    IconMovie,\n    IconRss,\n    IconSettings,\n    IconUsersGroup\n} from '@tabler/icons-react'\nimport { IconApp } from '@/components/icons'\nimport { Menu, Sidebar, User } from '@/components/ui'\n\nexport default function ChatSidebar() {\n    return (\n        <Sidebar collapsible='dock' defaultOpen={false}>\n            <Sidebar.Header>\n                <IconApp />\n                <Sidebar.Label>Chat App</Sidebar.Label>\n            </Sidebar.Header>\n            <Sidebar.Content>\n                <Sidebar.Section>\n                    <Sidebar.Item href='#' isCurrent>\n                        <IconMessage />\n                        <Sidebar.Label>Chats</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item href='#'>\n                        <IconRss />\n                        <Sidebar.Label>Broadcast</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item href='#'>\n                        <IconMovie />\n                        <Sidebar.Label>Stories</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item href='#'>\n                        <IconUsersGroup />\n                        <Sidebar.Label>Communities</Sidebar.Label>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n            </Sidebar.Content>\n            <Sidebar.Footer>\n                <Menu>\n                    <Menu.Trigger className='group flex size-full items-center justify-between rounded-lg pressed:bg-muted p-2 hover:bg-muted'>\n                        <User\n                            description='@dq-alhq'\n                            name='DQ Al Haqqi'\n                            shape='square'\n                            src='https://github.com/dq-alhq.png'\n                        />\n                        <IconChevronRight className='group-aria-expanded:-rotate-90 size-4' />\n                    </Menu.Trigger>\n                    <Menu.Content className='sm:min-w-(--trigger-width)' placement='bottom right'>\n                        <Menu.Header>\n                            <span className='block'>DQ Al Haqqi</span>\n                            <span className='font-normal text-muted-foreground'>@dq-alhq</span>\n                        </Menu.Header>\n                        <Menu.Item href='#setting'>\n                            <IconSettings />\n                            Setting\n                        </Menu.Item>\n                        <Menu.Item href='#contact'>\n                            <IconHeadphones />\n                            Customer Support\n                        </Menu.Item>\n                        <Menu.Separator />\n                        <Menu.Item href='#logout'>\n                            <IconLogout />\n                            Log out\n                        </Menu.Item>\n                    </Menu.Content>\n                </Menu>\n            </Sidebar.Footer>\n            <Sidebar.Trigger />\n        </Sidebar>\n    )\n}\n",
  "application/social/chat/contact-list.tsx": "import { Avatar } from '@/components/ui'\nimport { cn } from '@/lib/utils'\n\ninterface ContactProps {\n    id: number\n    name: string\n    avatar: string\n    status: 'online' | 'offline'\n    lastSeen: string\n    active: boolean\n}\n\nexport default function ContactList() {\n    return (\n        <div className='mb-4 grid w-full gap-2'>\n            {contacts.map((contact) => (\n                <Contact key={contact.id} {...contact} />\n            ))}\n        </div>\n    )\n}\nconst Contact = ({ name, avatar, status, lastSeen, active }: ContactProps) => {\n    return (\n        <div\n            className={cn(\n                'flex cursor-pointer flex-row items-center gap-3 rounded-lg border p-2 md:px-4',\n                active ? 'bg-ring' : ''\n            )}\n        >\n            {status === 'online' ? <Avatar src={avatar} /> : <Avatar src={avatar} />}\n            <div className='grid'>\n                <span className='text-sm'>{name}</span>\n                {status === 'online' ? (\n                    <small className='text-success text-xs'>Online</small>\n                ) : (\n                    <small className='text-muted-foreground text-xs'>Last seen {lastSeen}</small>\n                )}\n            </div>\n        </div>\n    )\n}\n\nconst contacts: ContactProps[] = [\n    {\n        id: 1,\n        avatar: 'https://i.pravatar.cc/77',\n        name: 'Hebert',\n        status: 'online',\n        lastSeen: '20:32',\n        active: true\n    },\n    {\n        id: 2,\n        avatar: 'https://i.pravatar.cc/78',\n        name: 'Schroeder',\n        status: 'offline',\n        lastSeen: '02:10',\n        active: false\n    },\n    {\n        id: 3,\n        avatar: 'https://i.pravatar.cc/79',\n        name: 'Donna',\n        status: 'online',\n        lastSeen: '06:14',\n        active: false\n    },\n    {\n        id: 4,\n        avatar: 'https://i.pravatar.cc/80',\n        name: 'Olivia',\n        status: 'offline',\n        lastSeen: '06:47',\n        active: false\n    },\n    {\n        id: 5,\n        avatar: 'https://i.pravatar.cc/81',\n        name: 'Aisha',\n        status: 'offline',\n        lastSeen: '02:32',\n        active: false\n    },\n    {\n        id: 6,\n        avatar: 'https://i.pravatar.cc/82',\n        name: 'Bruce',\n        status: 'online',\n        lastSeen: '01:34',\n        active: false\n    },\n    {\n        id: 7,\n        avatar: 'https://i.pravatar.cc/83',\n        name: 'Harmon',\n        status: 'offline',\n        lastSeen: '00:15',\n        active: false\n    }\n]\n",
  "application/social/chat/message-form.tsx": "'use client'\n\nimport { IconCamera, IconMicrophone, IconPaperclip, IconSend } from '@tabler/icons-react'\nimport { type FormEvent, type KeyboardEvent, useEffect, useRef } from 'react'\nimport { Button, Form, Textarea } from '@/components/ui'\n\ninterface MessageFormProps {\n    value: string\n    valueAction: (value: string) => void\n    sendAction: (e: FormEvent<HTMLFormElement>) => void\n}\n\nexport default function MessageForm({ value, valueAction, sendAction }: MessageFormProps) {\n    const editorRef = useRef<HTMLDivElement>(null)\n    useEffect(() => {\n        const editor = editorRef.current\n\n        const handleInput = () => {\n            if (editor) {\n                const text = editor.innerText\n                valueAction(text)\n                editor.innerHTML = formatText(text)\n                placeCaretAtEnd(editor)\n            }\n        }\n\n        const placeCaretAtEnd = (el: HTMLElement) => {\n            el.focus()\n            const range = document.createRange()\n            range.selectNodeContents(el)\n            range.collapse(false)\n            const sel = window.getSelection()\n            sel?.removeAllRanges()\n            sel?.addRange(range)\n        }\n\n        editor?.addEventListener('input', handleInput)\n\n        return () => {\n            editor?.removeEventListener('input', handleInput)\n        }\n    }, [valueAction])\n\n    function onSubmit(e: FormEvent<HTMLFormElement>) {\n        e.preventDefault()\n        sendAction(e)\n        if (editorRef.current) {\n            editorRef.current.innerHTML = ''\n        }\n    }\n\n    return (\n        <Form className='relative overflow-hidden rounded-lg border-t bg-background md:border' onSubmit={onSubmit}>\n            <Textarea\n                aria-label='Message'\n                className='no-scrollbar min-h-32 w-full resize-none border-0 p-3 outline-none'\n                id='message'\n                onKeyDown={(e: KeyboardEvent) => {\n                    if (e.key === 'Enter' && !e.shiftKey && value.trim() !== '') {\n                        onSubmit(e as unknown as FormEvent<HTMLFormElement>)\n                    }\n                }}\n                ref={editorRef}\n            />\n            <div className='flex items-center p-2'>\n                <Button icon type='button' variant='ghost'>\n                    <IconCamera className='size-4' />\n                    <span className='sr-only'>Upload Image</span>\n                </Button>\n                <Button icon type='button' variant='ghost'>\n                    <IconMicrophone className='size-4' />\n                    <span className='sr-only'>Use Microphone</span>\n                </Button>\n                <Button icon type='button' variant='ghost'>\n                    <IconPaperclip className='size-4' />\n                    <span className='sr-only'>Attach File</span>\n                </Button>\n                <Button className='ml-auto gap-1.5' isDisabled={value.trim() === ''} size='sm' type='submit'>\n                    Send Message\n                    <IconSend />\n                </Button>\n            </div>\n        </Form>\n    )\n}\n\nconst formatText = (text: string) => {\n    return text\n        .replace(/_(.*?)_/g, '<em>_$1_</em>')\n        .replace(/_/g, '<span class=\"text-muted-foreground\">_</span>')\n        .replace(/\\*(.*?)\\*/g, '<strong>*$1*</strong>')\n        .replace(/\\*/g, '<span class=\"text-muted-foreground\">*</span>')\n        .replace(/~(.*?)~/g, '<del>~$1~</del>')\n        .replace(/~/g, '<span class=\"text-muted-foreground\">~</span>')\n        .replace(/\\^(.*?)\\^/g, '<sup>^$1^</sup>')\n        .replace(/\\^/g, '<span class=\"text-muted-foreground\">^</span>')\n        .replace(\n            /(https?:\\/\\/[^\\s]+)/g,\n            '<a href=\"$1\" class=\"text-primary underline\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>'\n        )\n        .replace(/\\n/g, '<br />')\n}\n",
  "application/social/chat/bubble-chat.tsx": "'use client'\n\nimport type { ReactNode } from 'react'\nimport {\n    IconArrowForward,\n    IconCheck,\n    IconChecks,\n    IconChevronRight,\n    IconClock,\n    IconInfoCircle,\n    IconMessageReply,\n    IconTrash\n} from '@tabler/icons-react'\nimport { Button, Menu } from '@/components/ui'\nimport { cn } from '@/lib/utils'\n\nexport interface BubbleChatProps {\n    message: string\n    time: string\n    role: 'send' | 'recieve'\n    status?: 'pending' | 'sent' | 'delivered' | 'read'\n    onDelete?: () => void\n}\n\nexport default function BubbleChat({ message, time, role, status, onDelete }: BubbleChatProps) {\n    const statusIcon: Record<string, ReactNode> = {\n        pending: <IconClock className='size-5 text-fg' />,\n        sent: <IconCheck className='size-5 text-fg' />,\n        delivered: <IconChecks className='size-5 text-fg' />,\n        read: <IconChecks className='size-5 text-success' />\n    }\n    return (\n        <div className={cn('group flex items-start', role === 'send' ? 'flex-row-reverse' : 'flex-row')}>\n            <div>\n                <div\n                    className={cn(\n                        'rounded-lg border px-2 py-1.5 text-right text-sm [&_strong]:font-medium',\n                        role === 'send' ? 'rounded-br-none' : 'rounded-bl-none'\n                    )}\n                >\n                    <div\n                        className='text-left text-fg text-sm'\n                        dangerouslySetInnerHTML={{ __html: convertToHtml(message) }}\n                    />\n                </div>\n                <small\n                    className={cn(\n                        'mt-0.5 flex items-center gap-1 text-muted-fg',\n                        role === 'send' ? 'justify-end' : 'justify-start'\n                    )}\n                >\n                    {time}\n                    {role === 'send' && status && statusIcon[status]}\n                </small>\n            </div>\n            <Menu>\n                <Button\n                    className='mx-2 size-7 p-1 opacity-0 pressed:opacity-100 transition group-hover:opacity-100'\n                    icon\n                    variant='outline'\n                >\n                    <IconChevronRight className={cn('size-3', role === 'send' ? 'rotate-180' : '')} />\n                </Button>\n                <Menu.Content aria-label='Actions' placement={role === 'send' ? 'left' : 'right'}>\n                    <Menu.Item>\n                        <IconMessageReply />\n                        Reply\n                    </Menu.Item>\n                    <Menu.Item>\n                        <IconArrowForward />\n                        Forward\n                    </Menu.Item>\n                    <Menu.Item>\n                        <IconInfoCircle />\n                        Message Info\n                    </Menu.Item>\n                    <Menu.Item isDestructive onAction={onDelete}>\n                        <IconTrash /> Delete\n                    </Menu.Item>\n                </Menu.Content>\n            </Menu>\n        </div>\n    )\n}\n\nconst convertToHtml = (text: string) => {\n    let html = text\n    html = html.replace(\n        /(https?:\\/\\/\\S+)/g,\n        '<a href=\"$1\" target=\"_blank\" class=\"text-primary underline\" rel=\"noopener noreferrer\">$1</a>'\n    )\n    html = html.replace(/`([^`]+)`/g, '<code class=\"font-mono\">$1</code>')\n    html = html.replace(/\\*(.*?)\\*/g, '<strong class=\"text-bold\">$1</strong>')\n    html = html.replace(/_(.*?)_/g, '<em>$1</em>')\n    html = html.replace(/~(.*?)~/g, '<del>$1</del>')\n    html = html.replace(/^(.*?)^/g, '<sup>$1</sup>')\n    html = html.replace(/\\n/g, '<br />')\n    return html\n}\n",
  "application/social/chat/layout.tsx": "import { SidebarInset } from '@/components/ui'\nimport ChatSidebar from '@/components/chat-sidebar'\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n    return (\n        <div className='flex'>\n            <ChatSidebar />\n            <SidebarInset>{children}</SidebarInset>\n        </div>\n    )\n}\n",
  "application/social/user-profile/page.tsx": "'use client'\n\nimport type { Key } from 'react-aria-components'\nimport Image from 'next/image'\nimport { useState } from 'react'\nimport { Avatar, Card, Container, Tabs } from '@/components/ui'\nimport About from '@/components/about'\nimport Media from '@/components/media'\nimport Posts from '@/components/posts'\n\nexport default function UserProfile() {\n    const [panel, setPanel] = useState<Key>(1)\n    return (\n        <Container className='py-6 xl:py-12'>\n            <div className='relative w-full'>\n                <Card className='w-full overflow-hidden'>\n                    <Card.Content className='p-0 lg:h-96'>\n                        <Image\n                            alt='profil'\n                            className='object-contain'\n                            height={1080}\n                            src='https://picsum.photos/id/1/1920/1080'\n                            width={1920}\n                        />\n                    </Card.Content>\n                </Card>\n                <div className='relative mt-12 flex flex-col items-center gap-4 lg:mt-4 lg:flex-row'>\n                    <Avatar\n                        alt='logo'\n                        className='-translate-x-1/2 lg:-bottom-4 absolute bottom-32 left-1/2 size-24 rounded-full border bg-background p-1 lg:left-20 lg:size-44 lg:translate-x-0'\n                        src='https://github.com/dq-alhq.png'\n                    />\n                    <div className='flex w-full flex-col gap-1 lg:ml-72'>\n                        <h3 className='text-center font-bold text-lg lg:text-left lg:text-4xl'>Diqi Al-Haqqi</h3>\n                        <p className='text-center text-sm uppercase lg:text-left lg:text-lg'>East Java, Indonesia</p>\n                    </div>\n                    <Tabs className='lg:w-[400px]' onSelectionChange={setPanel} selectedKey={panel}>\n                        <Tabs.List className='w-full place-content-center'>\n                            <Tabs.Label className='lg:text-xl' id={1}>\n                                Posts\n                            </Tabs.Label>\n                            <Tabs.Label className='lg:text-xl' id={2}>\n                                About\n                            </Tabs.Label>\n                            <Tabs.Label className='lg:text-xl' id={3}>\n                                Media\n                            </Tabs.Label>\n                        </Tabs.List>\n                    </Tabs>\n                </div>\n            </div>\n            <div className='mt-2 flex flex-col gap-6 lg:mt-12 lg:flex-row'>\n                {panel === 1 && <Posts />}\n                {panel === 2 && <About />}\n                {panel === 3 && <Media />}\n            </div>\n        </Container>\n    )\n}\n",
  "application/social/user-profile/about.tsx": "import { Card, DL } from '@/components/ui'\n\nexport default function About() {\n    return (\n        <Card className='w-full'>\n            <Card.Header>\n                <Card.Title>About Me</Card.Title>\n                <Card.Description>My profile information</Card.Description>\n            </Card.Header>\n            <Card.Content>\n                <DL>\n                    <DL.T>Full Name</DL.T>\n                    <DL.D>Diqi Al-Haqqi</DL.D>\n                    <DL.T>Address</DL.T>\n                    <DL.D>East Java, Indonesia</DL.D>\n                    <DL.T>Age</DL.T>\n                    <DL.D>25 years</DL.D>\n                    <DL.T>Company</DL.T>\n                    <DL.D>Qomaruddin University Gresik</DL.D>\n                </DL>\n            </Card.Content>\n        </Card>\n    )\n}\n",
  "application/social/user-profile/media.tsx": "import Image from 'next/image'\nimport { Collection } from 'react-aria-components'\nimport { Card } from '@/components/ui'\nimport { cn } from '@/lib/utils'\n\nexport default function Media() {\n    const items = Array.from({ length: 17 }, (_, id) => ({\n        id: id + 1,\n        title: `Image ${id}`\n    }))\n    return (\n        <div className='grid grid-cols-2 gap-2 2xl:grid-cols-4'>\n            <Collection items={items}>\n                {(item) => (\n                    <div className={cn(item.id % 5 === 0 && 'col-span-2')} key={item.id}>\n                        <Card>\n                            <Image\n                                alt={item.title}\n                                height={300}\n                                src={`https://picsum.photos/${item.id % 5 === 0 ? 800 : 400}/300?random=${item.id}`}\n                                width={item.id % 5 === 0 ? 800 : 400}\n                            />\n                        </Card>\n                    </div>\n                )}\n            </Collection>\n        </div>\n    )\n}\n",
  "application/social/user-profile/posts.tsx": "import Image from 'next/image'\nimport { Collection } from 'react-aria-components'\nimport { Card } from '@/components/ui'\n\nexport default function Posts() {\n    return (\n        <div className='grid grid-cols-1 gap-2 2xl:grid-cols-3'>\n            <Collection items={posts}>\n                {(item) => (\n                    <div key={item.id}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title>{item.title}</Card.Title>\n                                <Card.Description>{item.date}</Card.Description>\n                            </Card.Header>\n                            <Card.Content className='space-y-2 text-justify'>\n                                <Image alt={item.title} height={300} src={item.image} width={400} />\n                                <p>{item.content}</p>\n                            </Card.Content>\n                        </Card>\n                    </div>\n                )}\n            </Collection>\n        </div>\n    )\n}\n\nconst posts = [\n    {\n        id: 1,\n        title: 'First Post',\n        date: '2021-01-01 - 12:00',\n        image: 'https://picsum.photos/400/300?random=1',\n        content:\n            'Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolorum tempore nulla libero laborum officia aliquam voluptas quod porro quis accusamus.'\n    },\n    {\n        id: 2,\n        title: 'Second Post',\n        date: '2021-01-02 - 08:00',\n        image: 'https://picsum.photos/400/300?random=2',\n        content:\n            'Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptas totam ad nostrum earum provident natus tempora! Accusamus iure sunt quam!'\n    },\n    {\n        id: 3,\n        title: 'Third Post',\n        date: '2021-01-03 - 14:00',\n        image: 'https://picsum.photos/400/300?random=3',\n        content:\n            'Lorem ipsum dolor sit amet. Veritatis dicta aliquid, voluptatibus sapiente repellendus fugit saepe voluptate eum praesentium facilis?'\n    }\n]\n",
  "application/social/user-profile/layout.tsx": "export default function Layout({ children }: { children: React.ReactNode }) {\n    return <main className='h-dvh w-full bg-muted'>{children}</main>\n}\n",
  "application/sidebar/basic/app-sidebar-nav.tsx": "'use client'\n\nimport { IconLogout, IconSettings } from '@tabler/icons-react'\nimport { IconApp } from '@/components/icons'\nimport { ThemeToggle } from '@/components/theme-toggle'\nimport { Link } from '@/components/ui'\nimport { Avatar } from '@/components/ui/avatar'\nimport { Breadcrumbs } from '@/components/ui/breadcrumbs'\nimport { Menu } from '@/components/ui/menu'\nimport { SidebarNav } from '@/components/ui/sidebar'\n\nexport default function AppSidebarNav() {\n    return (\n        <SidebarNav>\n            <Link className='ml-auto pl-16 md:hidden' href='#'>\n                <IconApp className='size-6' />\n            </Link>\n            <Breadcrumbs className='hidden md:flex'>\n                <Breadcrumbs.Item href='#'>Dashboard</Breadcrumbs.Item>\n                <Breadcrumbs.Item>Content</Breadcrumbs.Item>\n            </Breadcrumbs>\n            <div className='ml-auto'>\n                <ThemeToggle variant='ghost' />\n            </div>\n            <Menu>\n                <Menu.Trigger aria-label='Open Menu' className='md:hidden'>\n                    <Avatar alt='Diqi Al-Haqqi' src='https://github.com/dq-alhq.png' />\n                </Menu.Trigger>\n                <Menu.Content className='sm:min-w-(--trigger-width)' placement='right bottom'>\n                    <Menu.Header>\n                        <span className='block'>DQ Al Haqqi</span>\n                        <span className='font-normal text-muted-foreground'>@dq-alhq</span>\n                    </Menu.Header>\n                    <Menu.Item href='#settings'>\n                        <IconSettings />\n                        Settings\n                    </Menu.Item>\n                    <Menu.Item href='#logout'>\n                        <IconLogout />\n                        Log out\n                    </Menu.Item>\n                </Menu.Content>\n            </Menu>\n        </SidebarNav>\n    )\n}\n",
  "application/sidebar/basic/page.tsx": "import { Skeleton } from '@/components/ui'\n\nexport default function Page() {\n    return (\n        <div className='flex flex-1 flex-col gap-4 p-4'>\n            <div className='grid auto-rows-min gap-4 md:grid-cols-3'>\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n            </div>\n            <Skeleton className='min-h-[100vh] flex-1 rounded-xl bg-muted/50 md:min-h-min' />\n        </div>\n    )\n}\n",
  "application/sidebar/basic/app-sidebar.tsx": "'use client'\n\nimport {\n    IconChevronRight,\n    IconCreditCard,\n    IconDots,\n    IconGauge,\n    IconLogout,\n    IconMessage,\n    IconNotebook,\n    IconSettings,\n    IconShieldQuestion,\n    IconTicket\n} from '@tabler/icons-react'\nimport { IconApp } from '@/components/icons'\nimport { Menu, Sidebar, User } from '@/components/ui'\n\nexport default function AppSidebar() {\n    return (\n        <Sidebar>\n            <Sidebar.Header>\n                <IconApp />\n                <Sidebar.Label>HQ UI</Sidebar.Label>\n            </Sidebar.Header>\n            <Sidebar.Content>\n                <Sidebar.Section title='Overview'>\n                    <Sidebar.Item href='#' isCurrent tooltip='Overview'>\n                        <IconGauge />\n                        <Sidebar.Label>Overview</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item badge='4 Pending' href='#' tooltip='Payments'>\n                        <IconCreditCard />\n                        <Sidebar.Label>Payments</Sidebar.Label>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n\n                <Sidebar.Section defaultExpandedKeys={[1]}>\n                    <Sidebar.Item id={1}>\n                        <Sidebar.SubItemTrigger>\n                            <IconDots />\n                            <Sidebar.Label>Support</Sidebar.Label>\n                        </Sidebar.SubItemTrigger>\n                        <Sidebar.SubItem>\n                            <Sidebar.Item href='#'>\n                                <IconTicket />\n                                <Sidebar.Label>Tickets</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconMessage />\n                                <Sidebar.Label>Chat Support</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconShieldQuestion />\n                                <Sidebar.Label>FAQ</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconNotebook />\n                                <Sidebar.Label>Documentation</Sidebar.Label>\n                            </Sidebar.Item>\n                        </Sidebar.SubItem>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n            </Sidebar.Content>\n            <Sidebar.Footer>\n                <Menu>\n                    <Menu.Trigger\n                        className='group flex size-full items-center justify-between rounded-lg pressed:bg-muted p-2 hover:bg-muted'\n                        slot={null}\n                    >\n                        <User\n                            description='@dq-alhq'\n                            name='DQ Al Haqqi'\n                            shape='square'\n                            src='https://github.com/dq-alhq.png'\n                        />\n                        <IconChevronRight className='group-aria-expanded:-rotate-90 size-4' />\n                    </Menu.Trigger>\n                    <Menu.Content className='sm:min-w-(--trigger-width)' placement='top left'>\n                        <Menu.Header>\n                            <span className='block'>DQ Al Haqqi</span>\n                            <span className='font-normal text-muted-foreground'>@dq-alhq</span>\n                        </Menu.Header>\n                        <Menu.Item href='#settings'>\n                            <IconSettings />\n                            Settings\n                        </Menu.Item>\n                        <Menu.Item href='#logout'>\n                            <IconLogout />\n                            Log out\n                        </Menu.Item>\n                    </Menu.Content>\n                </Menu>\n            </Sidebar.Footer>\n            <Sidebar.Rail />\n            <Sidebar.Trigger />\n        </Sidebar>\n    )\n}\n",
  "application/sidebar/basic/layout.tsx": "import { SidebarInset } from '@/components/ui'\nimport AppSidebar from '@/components/app-sidebar'\nimport AppSidebarNav from '@/components/app-sidebar-nav'\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n    return (\n        <div className='flex'>\n            <AppSidebar />\n            <SidebarInset>\n                <AppSidebarNav />\n                {children}\n            </SidebarInset>\n        </div>\n    )\n}\n",
  "application/sidebar/dock/app-sidebar-nav.tsx": "'use client'\n\nimport { IconLogout, IconSettings } from '@tabler/icons-react'\nimport { IconApp } from '@/components/icons'\nimport { ThemeToggle } from '@/components/theme-toggle'\nimport { Link } from '@/components/ui'\nimport { Avatar } from '@/components/ui/avatar'\nimport { Breadcrumbs } from '@/components/ui/breadcrumbs'\nimport { Menu } from '@/components/ui/menu'\nimport { SidebarNav } from '@/components/ui/sidebar'\n\nexport default function AppSidebarNav() {\n    return (\n        <SidebarNav>\n            <Link className='ml-auto pl-16 md:hidden' href='#'>\n                <IconApp className='size-6' />\n            </Link>\n            <Breadcrumbs className='hidden md:flex'>\n                <Breadcrumbs.Item href='#'>Dashboard</Breadcrumbs.Item>\n                <Breadcrumbs.Item>Content</Breadcrumbs.Item>\n            </Breadcrumbs>\n            <div className='ml-auto'>\n                <ThemeToggle variant='ghost' />\n            </div>\n            <Menu>\n                <Menu.Trigger aria-label='Open Menu' className='md:hidden'>\n                    <Avatar alt='Diqi Al-Haqqi' src='https://github.com/dq-alhq.png' />\n                </Menu.Trigger>\n                <Menu.Content className='sm:min-w-(--trigger-width)' placement='right bottom'>\n                    <Menu.Header>\n                        <span className='block'>DQ Al Haqqi</span>\n                        <span className='font-normal text-muted-foreground'>@dq-alhq</span>\n                    </Menu.Header>\n                    <Menu.Item href='#settings'>\n                        <IconSettings />\n                        Settings\n                    </Menu.Item>\n                    <Menu.Item href='#logout'>\n                        <IconLogout />\n                        Log out\n                    </Menu.Item>\n                </Menu.Content>\n            </Menu>\n        </SidebarNav>\n    )\n}\n",
  "application/sidebar/dock/page.tsx": "import { Skeleton } from '@/components/ui'\n\nexport default function Page() {\n    return (\n        <div className='flex flex-1 flex-col gap-4 p-4'>\n            <div className='grid auto-rows-min gap-4 md:grid-cols-3'>\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n            </div>\n            <Skeleton className='min-h-[100vh] flex-1 rounded-xl bg-muted/50 md:min-h-min' />\n        </div>\n    )\n}\n",
  "application/sidebar/dock/app-sidebar.tsx": "'use client'\n\nimport {\n    IconChevronRight,\n    IconCreditCard,\n    IconDots,\n    IconGauge,\n    IconLogout,\n    IconMessage,\n    IconNotebook,\n    IconSettings,\n    IconShieldQuestion,\n    IconTicket\n} from '@tabler/icons-react'\nimport { IconApp } from '@/components/icons'\nimport { Menu, Sidebar, User } from '@/components/ui'\n\nexport default function AppSidebar() {\n    return (\n        <Sidebar collapsible='dock'>\n            <Sidebar.Header>\n                <IconApp />\n                <Sidebar.Label>HQ UI</Sidebar.Label>\n            </Sidebar.Header>\n            <Sidebar.Content>\n                <Sidebar.Section title='Overview'>\n                    <Sidebar.Item href='#' isCurrent tooltip='Overview'>\n                        <IconGauge />\n                        <Sidebar.Label>Overview</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item badge='4 Pending' href='#' tooltip='Payments'>\n                        <IconCreditCard />\n                        <Sidebar.Label>Payments</Sidebar.Label>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n\n                <Sidebar.Section defaultExpandedKeys={[1]}>\n                    <Sidebar.Item id={1}>\n                        <Sidebar.SubItemTrigger>\n                            <IconDots />\n                            <Sidebar.Label>Support</Sidebar.Label>\n                        </Sidebar.SubItemTrigger>\n                        <Sidebar.SubItem>\n                            <Sidebar.Item href='#'>\n                                <IconTicket />\n                                <Sidebar.Label>Tickets</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconMessage />\n                                <Sidebar.Label>Chat Support</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconShieldQuestion />\n                                <Sidebar.Label>FAQ</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconNotebook />\n                                <Sidebar.Label>Documentation</Sidebar.Label>\n                            </Sidebar.Item>\n                        </Sidebar.SubItem>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n            </Sidebar.Content>\n            <Sidebar.Footer>\n                <Menu>\n                    <Menu.Trigger\n                        className='group flex size-full items-center justify-between rounded-lg pressed:bg-muted p-2 hover:bg-muted'\n                        slot={null}\n                    >\n                        <User\n                            description='@dq-alhq'\n                            name='DQ Al Haqqi'\n                            shape='square'\n                            src='https://github.com/dq-alhq.png'\n                        />\n                        <IconChevronRight className='group-aria-expanded:-rotate-90 size-4' />\n                    </Menu.Trigger>\n                    <Menu.Content className='sm:min-w-(--trigger-width)' placement='top left'>\n                        <Menu.Header>\n                            <span className='block'>DQ Al Haqqi</span>\n                            <span className='font-normal text-muted-foreground'>@dq-alhq</span>\n                        </Menu.Header>\n                        <Menu.Item href='#settings'>\n                            <IconSettings />\n                            Settings\n                        </Menu.Item>\n                        <Menu.Item href='#logout'>\n                            <IconLogout />\n                            Log out\n                        </Menu.Item>\n                    </Menu.Content>\n                </Menu>\n            </Sidebar.Footer>\n            <Sidebar.Rail />\n            <Sidebar.Trigger />\n        </Sidebar>\n    )\n}\n",
  "application/sidebar/dock/layout.tsx": "import { SidebarInset } from '@/components/ui'\nimport AppSidebar from '@/components/app-sidebar'\nimport AppSidebarNav from '@/components/app-sidebar-nav'\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n    return (\n        <div className='flex'>\n            <AppSidebar />\n            <SidebarInset>\n                <AppSidebarNav />\n                {children}\n            </SidebarInset>\n        </div>\n    )\n}\n",
  "application/sidebar/fixed/app-sidebar-nav.tsx": "'use client'\n\nimport { IconLogout, IconSettings } from '@tabler/icons-react'\nimport { IconApp } from '@/components/icons'\nimport { ThemeToggle } from '@/components/theme-toggle'\nimport { Link } from '@/components/ui'\nimport { Avatar } from '@/components/ui/avatar'\nimport { Breadcrumbs } from '@/components/ui/breadcrumbs'\nimport { Menu } from '@/components/ui/menu'\nimport { SidebarNav } from '@/components/ui/sidebar'\n\nexport default function AppSidebarNav() {\n    return (\n        <SidebarNav>\n            <Link className='ml-auto pl-16 md:hidden' href='#'>\n                <IconApp className='size-6' />\n            </Link>\n            <Breadcrumbs className='hidden md:flex'>\n                <Breadcrumbs.Item href='#'>Dashboard</Breadcrumbs.Item>\n                <Breadcrumbs.Item>Content</Breadcrumbs.Item>\n            </Breadcrumbs>\n            <div className='ml-auto'>\n                <ThemeToggle variant='ghost' />\n            </div>\n            <Menu>\n                <Menu.Trigger aria-label='Open Menu' className='md:hidden'>\n                    <Avatar alt='Diqi Al-Haqqi' src='https://github.com/dq-alhq.png' />\n                </Menu.Trigger>\n                <Menu.Content className='sm:min-w-(--trigger-width)' placement='right bottom'>\n                    <Menu.Header>\n                        <span className='block'>DQ Al Haqqi</span>\n                        <span className='font-normal text-muted-foreground'>@dq-alhq</span>\n                    </Menu.Header>\n                    <Menu.Item href='#settings'>\n                        <IconSettings />\n                        Settings\n                    </Menu.Item>\n                    <Menu.Item href='#logout'>\n                        <IconLogout />\n                        Log out\n                    </Menu.Item>\n                </Menu.Content>\n            </Menu>\n        </SidebarNav>\n    )\n}\n",
  "application/sidebar/fixed/page.tsx": "import { Skeleton } from '@/components/ui'\n\nexport default function Page() {\n    return (\n        <div className='flex flex-1 flex-col gap-4 p-4'>\n            <div className='grid auto-rows-min gap-4 md:grid-cols-3'>\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n            </div>\n            <Skeleton className='min-h-[100vh] flex-1 rounded-xl bg-muted/50 md:min-h-min' />\n        </div>\n    )\n}\n",
  "application/sidebar/fixed/app-sidebar.tsx": "'use client'\n\nimport {\n    IconChevronRight,\n    IconCreditCard,\n    IconDots,\n    IconGauge,\n    IconLogout,\n    IconMessage,\n    IconNotebook,\n    IconSettings,\n    IconShieldQuestion,\n    IconTicket\n} from '@tabler/icons-react'\nimport { IconApp } from '@/components/icons'\nimport { Menu, Sidebar, User } from '@/components/ui'\n\nexport default function AppSidebar() {\n    return (\n        <Sidebar collapsible='none'>\n            <Sidebar.Header>\n                <IconApp />\n                <Sidebar.Label>HQ UI</Sidebar.Label>\n            </Sidebar.Header>\n            <Sidebar.Content>\n                <Sidebar.Section title='Overview'>\n                    <Sidebar.Item href='#' isCurrent tooltip='Overview'>\n                        <IconGauge />\n                        <Sidebar.Label>Overview</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item badge='4 Pending' href='#' tooltip='Payments'>\n                        <IconCreditCard />\n                        <Sidebar.Label>Payments</Sidebar.Label>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n\n                <Sidebar.Section defaultExpandedKeys={[1]}>\n                    <Sidebar.Item id={1}>\n                        <Sidebar.SubItemTrigger>\n                            <IconDots />\n                            <Sidebar.Label>Support</Sidebar.Label>\n                        </Sidebar.SubItemTrigger>\n                        <Sidebar.SubItem>\n                            <Sidebar.Item href='#'>\n                                <IconTicket />\n                                <Sidebar.Label>Tickets</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconMessage />\n                                <Sidebar.Label>Chat Support</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconShieldQuestion />\n                                <Sidebar.Label>FAQ</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconNotebook />\n                                <Sidebar.Label>Documentation</Sidebar.Label>\n                            </Sidebar.Item>\n                        </Sidebar.SubItem>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n            </Sidebar.Content>\n            <Sidebar.Footer>\n                <Menu>\n                    <Menu.Trigger\n                        className='group flex size-full items-center justify-between rounded-lg pressed:bg-muted p-2 hover:bg-muted'\n                        slot={null}\n                    >\n                        <User\n                            description='@dq-alhq'\n                            name='DQ Al Haqqi'\n                            shape='square'\n                            src='https://github.com/dq-alhq.png'\n                        />\n                        <IconChevronRight className='group-aria-expanded:-rotate-90 size-4' />\n                    </Menu.Trigger>\n                    <Menu.Content className='sm:min-w-(--trigger-width)' placement='top left'>\n                        <Menu.Header>\n                            <span className='block'>DQ Al Haqqi</span>\n                            <span className='font-normal text-muted-foreground'>@dq-alhq</span>\n                        </Menu.Header>\n                        <Menu.Item href='#settings'>\n                            <IconSettings />\n                            Settings\n                        </Menu.Item>\n                        <Menu.Item href='#logout'>\n                            <IconLogout />\n                            Log out\n                        </Menu.Item>\n                    </Menu.Content>\n                </Menu>\n            </Sidebar.Footer>\n            <Sidebar.Rail />\n            <Sidebar.Trigger />\n        </Sidebar>\n    )\n}\n",
  "application/sidebar/fixed/layout.tsx": "import { SidebarInset } from '@/components/ui'\nimport AppSidebar from '@/components/app-sidebar'\nimport AppSidebarNav from '@/components/app-sidebar-nav'\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n    return (\n        <div className='flex'>\n            <AppSidebar />\n            <SidebarInset>\n                <AppSidebarNav />\n                {children}\n            </SidebarInset>\n        </div>\n    )\n}\n",
  "application/sidebar/float/app-sidebar-nav.tsx": "'use client'\n\nimport { IconLogout, IconSettings } from '@tabler/icons-react'\nimport { IconApp } from '@/components/icons'\nimport { ThemeToggle } from '@/components/theme-toggle'\nimport { Link } from '@/components/ui'\nimport { Avatar } from '@/components/ui/avatar'\nimport { Breadcrumbs } from '@/components/ui/breadcrumbs'\nimport { Menu } from '@/components/ui/menu'\nimport { SidebarNav } from '@/components/ui/sidebar'\n\nexport default function AppSidebarNav() {\n    return (\n        <SidebarNav>\n            <Link className='ml-auto pl-16 md:hidden' href='#'>\n                <IconApp className='size-6' />\n            </Link>\n            <Breadcrumbs className='hidden md:flex'>\n                <Breadcrumbs.Item href='#'>Dashboard</Breadcrumbs.Item>\n                <Breadcrumbs.Item>Content</Breadcrumbs.Item>\n            </Breadcrumbs>\n            <div className='ml-auto'>\n                <ThemeToggle variant='ghost' />\n            </div>\n            <Menu>\n                <Menu.Trigger aria-label='Open Menu' className='md:hidden'>\n                    <Avatar alt='Diqi Al-Haqqi' src='https://github.com/dq-alhq.png' />\n                </Menu.Trigger>\n                <Menu.Content className='sm:min-w-(--trigger-width)' placement='right bottom'>\n                    <Menu.Header>\n                        <span className='block'>DQ Al Haqqi</span>\n                        <span className='font-normal text-muted-foreground'>@dq-alhq</span>\n                    </Menu.Header>\n                    <Menu.Item href='#settings'>\n                        <IconSettings />\n                        Settings\n                    </Menu.Item>\n                    <Menu.Item href='#logout'>\n                        <IconLogout />\n                        Log out\n                    </Menu.Item>\n                </Menu.Content>\n            </Menu>\n        </SidebarNav>\n    )\n}\n",
  "application/sidebar/float/page.tsx": "import { Skeleton } from '@/components/ui'\n\nexport default function Page() {\n    return (\n        <div className='flex flex-1 flex-col gap-4 p-4'>\n            <div className='grid auto-rows-min gap-4 md:grid-cols-3'>\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n            </div>\n            <Skeleton className='min-h-[100vh] flex-1 rounded-xl bg-muted/50 md:min-h-min' />\n        </div>\n    )\n}\n",
  "application/sidebar/float/app-sidebar.tsx": "'use client'\n\nimport {\n    IconChevronRight,\n    IconCreditCard,\n    IconDots,\n    IconGauge,\n    IconLogout,\n    IconMessage,\n    IconNotebook,\n    IconSettings,\n    IconShieldQuestion,\n    IconTicket\n} from '@tabler/icons-react'\nimport { IconApp } from '@/components/icons'\nimport { Menu, Sidebar, User } from '@/components/ui'\n\nexport default function AppSidebar() {\n    return (\n        <Sidebar variant='float'>\n            <Sidebar.Header>\n                <IconApp />\n                <Sidebar.Label>HQ UI</Sidebar.Label>\n            </Sidebar.Header>\n            <Sidebar.Content>\n                <Sidebar.Section title='Overview'>\n                    <Sidebar.Item href='#' isCurrent tooltip='Overview'>\n                        <IconGauge />\n                        <Sidebar.Label>Overview</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item badge='4 Pending' href='#' tooltip='Payments'>\n                        <IconCreditCard />\n                        <Sidebar.Label>Payments</Sidebar.Label>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n\n                <Sidebar.Section defaultExpandedKeys={[1]}>\n                    <Sidebar.Item id={1}>\n                        <Sidebar.SubItemTrigger>\n                            <IconDots />\n                            <Sidebar.Label>Support</Sidebar.Label>\n                        </Sidebar.SubItemTrigger>\n                        <Sidebar.SubItem>\n                            <Sidebar.Item href='#'>\n                                <IconTicket />\n                                <Sidebar.Label>Tickets</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconMessage />\n                                <Sidebar.Label>Chat Support</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconShieldQuestion />\n                                <Sidebar.Label>FAQ</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconNotebook />\n                                <Sidebar.Label>Documentation</Sidebar.Label>\n                            </Sidebar.Item>\n                        </Sidebar.SubItem>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n            </Sidebar.Content>\n            <Sidebar.Footer>\n                <Menu>\n                    <Menu.Trigger\n                        className='group flex size-full items-center justify-between rounded-lg pressed:bg-muted p-2 hover:bg-muted'\n                        slot={null}\n                    >\n                        <User\n                            description='@dq-alhq'\n                            name='DQ Al Haqqi'\n                            shape='square'\n                            src='https://github.com/dq-alhq.png'\n                        />\n                        <IconChevronRight className='group-aria-expanded:-rotate-90 size-4' />\n                    </Menu.Trigger>\n                    <Menu.Content className='sm:min-w-(--trigger-width)' placement='top left'>\n                        <Menu.Header>\n                            <span className='block'>DQ Al Haqqi</span>\n                            <span className='font-normal text-muted-foreground'>@dq-alhq</span>\n                        </Menu.Header>\n                        <Menu.Item href='#settings'>\n                            <IconSettings />\n                            Settings\n                        </Menu.Item>\n                        <Menu.Item href='#logout'>\n                            <IconLogout />\n                            Log out\n                        </Menu.Item>\n                    </Menu.Content>\n                </Menu>\n            </Sidebar.Footer>\n            <Sidebar.Rail />\n            <Sidebar.Trigger />\n        </Sidebar>\n    )\n}\n",
  "application/sidebar/float/layout.tsx": "import { SidebarInset } from '@/components/ui'\nimport AppSidebar from '@/components/app-sidebar'\nimport AppSidebarNav from '@/components/app-sidebar-nav'\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n    return (\n        <div className='flex'>\n            <AppSidebar />\n            <SidebarInset>\n                <AppSidebarNav />\n                {children}\n            </SidebarInset>\n        </div>\n    )\n}\n",
  "application/sidebar/dock-inset/app-sidebar-nav.tsx": "'use client'\n\nimport { IconLogout, IconSettings } from '@tabler/icons-react'\nimport { IconApp } from '@/components/icons'\nimport { ThemeToggle } from '@/components/theme-toggle'\nimport { Link } from '@/components/ui'\nimport { Avatar } from '@/components/ui/avatar'\nimport { Breadcrumbs } from '@/components/ui/breadcrumbs'\nimport { Menu } from '@/components/ui/menu'\nimport { SidebarNav } from '@/components/ui/sidebar'\n\nexport default function AppSidebarNav() {\n    return (\n        <SidebarNav>\n            <Link className='ml-auto pl-16 md:hidden' href='#'>\n                <IconApp className='size-6' />\n            </Link>\n            <Breadcrumbs className='hidden md:flex'>\n                <Breadcrumbs.Item href='#'>Dashboard</Breadcrumbs.Item>\n                <Breadcrumbs.Item>Content</Breadcrumbs.Item>\n            </Breadcrumbs>\n            <div className='ml-auto'>\n                <ThemeToggle variant='ghost' />\n            </div>\n            <Menu>\n                <Menu.Trigger aria-label='Open Menu' className='md:hidden'>\n                    <Avatar alt='Diqi Al-Haqqi' src='https://github.com/dq-alhq.png' />\n                </Menu.Trigger>\n                <Menu.Content className='sm:min-w-(--trigger-width)' placement='right bottom'>\n                    <Menu.Header>\n                        <span className='block'>DQ Al Haqqi</span>\n                        <span className='font-normal text-muted-foreground'>@dq-alhq</span>\n                    </Menu.Header>\n                    <Menu.Item href='#settings'>\n                        <IconSettings />\n                        Settings\n                    </Menu.Item>\n                    <Menu.Item href='#logout'>\n                        <IconLogout />\n                        Log out\n                    </Menu.Item>\n                </Menu.Content>\n            </Menu>\n        </SidebarNav>\n    )\n}\n",
  "application/sidebar/dock-inset/page.tsx": "import { Skeleton } from '@/components/ui'\n\nexport default function Page() {\n    return (\n        <div className='flex flex-1 flex-col gap-4 p-4'>\n            <div className='grid auto-rows-min gap-4 md:grid-cols-3'>\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n            </div>\n            <Skeleton className='min-h-[100vh] flex-1 rounded-xl bg-muted/50 md:min-h-min' />\n        </div>\n    )\n}\n",
  "application/sidebar/dock-inset/app-sidebar.tsx": "'use client'\n\nimport {\n    IconChevronRight,\n    IconCreditCard,\n    IconDots,\n    IconGauge,\n    IconLogout,\n    IconMessage,\n    IconNotebook,\n    IconSettings,\n    IconShieldQuestion,\n    IconTicket\n} from '@tabler/icons-react'\nimport { IconApp } from '@/components/icons'\nimport { Menu, Sidebar, User } from '@/components/ui'\n\nexport default function AppSidebar() {\n    return (\n        <Sidebar collapsible='dock' variant='inset'>\n            <Sidebar.Header>\n                <IconApp />\n                <Sidebar.Label>HQ UI</Sidebar.Label>\n            </Sidebar.Header>\n            <Sidebar.Content>\n                <Sidebar.Section title='Overview'>\n                    <Sidebar.Item href='#' isCurrent tooltip='Overview'>\n                        <IconGauge />\n                        <Sidebar.Label>Overview</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item badge='4 Pending' href='#' tooltip='Payments'>\n                        <IconCreditCard />\n                        <Sidebar.Label>Payments</Sidebar.Label>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n\n                <Sidebar.Section defaultExpandedKeys={[1]}>\n                    <Sidebar.Item id={1}>\n                        <Sidebar.SubItemTrigger>\n                            <IconDots />\n                            <Sidebar.Label>Support</Sidebar.Label>\n                        </Sidebar.SubItemTrigger>\n                        <Sidebar.SubItem>\n                            <Sidebar.Item href='#'>\n                                <IconTicket />\n                                <Sidebar.Label>Tickets</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconMessage />\n                                <Sidebar.Label>Chat Support</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconShieldQuestion />\n                                <Sidebar.Label>FAQ</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconNotebook />\n                                <Sidebar.Label>Documentation</Sidebar.Label>\n                            </Sidebar.Item>\n                        </Sidebar.SubItem>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n            </Sidebar.Content>\n            <Sidebar.Footer>\n                <Menu>\n                    <Menu.Trigger\n                        className='group flex size-full items-center justify-between rounded-lg pressed:bg-muted p-2 hover:bg-muted'\n                        slot={null}\n                    >\n                        <User\n                            description='@dq-alhq'\n                            name='DQ Al Haqqi'\n                            shape='square'\n                            src='https://github.com/dq-alhq.png'\n                        />\n                        <IconChevronRight className='group-aria-expanded:-rotate-90 size-4' />\n                    </Menu.Trigger>\n                    <Menu.Content className='sm:min-w-(--trigger-width)' placement='top left'>\n                        <Menu.Header>\n                            <span className='block'>DQ Al Haqqi</span>\n                            <span className='font-normal text-muted-foreground'>@dq-alhq</span>\n                        </Menu.Header>\n                        <Menu.Item href='#settings'>\n                            <IconSettings />\n                            Settings\n                        </Menu.Item>\n                        <Menu.Item href='#logout'>\n                            <IconLogout />\n                            Log out\n                        </Menu.Item>\n                    </Menu.Content>\n                </Menu>\n            </Sidebar.Footer>\n            <Sidebar.Rail />\n            <Sidebar.Trigger />\n        </Sidebar>\n    )\n}\n",
  "application/sidebar/dock-inset/layout.tsx": "import { SidebarInset } from '@/components/ui'\nimport AppSidebar from '@/components/app-sidebar'\nimport AppSidebarNav from '@/components/app-sidebar-nav'\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n    return (\n        <div className='flex'>\n            <AppSidebar />\n            <SidebarInset>\n                <AppSidebarNav />\n                {children}\n            </SidebarInset>\n        </div>\n    )\n}\n",
  "application/sidebar/inset/app-sidebar-nav.tsx": "'use client'\n\nimport { IconLogout, IconSettings } from '@tabler/icons-react'\nimport { IconApp } from '@/components/icons'\nimport { ThemeToggle } from '@/components/theme-toggle'\nimport { Link } from '@/components/ui'\nimport { Avatar } from '@/components/ui/avatar'\nimport { Breadcrumbs } from '@/components/ui/breadcrumbs'\nimport { Menu } from '@/components/ui/menu'\nimport { SidebarNav } from '@/components/ui/sidebar'\n\nexport default function AppSidebarNav() {\n    return (\n        <SidebarNav>\n            <Link className='ml-auto pl-16 md:hidden' href='#'>\n                <IconApp className='size-6' />\n            </Link>\n            <Breadcrumbs className='hidden md:flex'>\n                <Breadcrumbs.Item href='#'>Dashboard</Breadcrumbs.Item>\n                <Breadcrumbs.Item>Content</Breadcrumbs.Item>\n            </Breadcrumbs>\n            <div className='ml-auto'>\n                <ThemeToggle variant='ghost' />\n            </div>\n            <Menu>\n                <Menu.Trigger aria-label='Open Menu' className='md:hidden'>\n                    <Avatar alt='Diqi Al-Haqqi' src='https://github.com/dq-alhq.png' />\n                </Menu.Trigger>\n                <Menu.Content className='sm:min-w-(--trigger-width)' placement='right bottom'>\n                    <Menu.Header>\n                        <span className='block'>DQ Al Haqqi</span>\n                        <span className='font-normal text-muted-foreground'>@dq-alhq</span>\n                    </Menu.Header>\n                    <Menu.Item href='#settings'>\n                        <IconSettings />\n                        Settings\n                    </Menu.Item>\n                    <Menu.Item href='#logout'>\n                        <IconLogout />\n                        Log out\n                    </Menu.Item>\n                </Menu.Content>\n            </Menu>\n        </SidebarNav>\n    )\n}\n",
  "application/sidebar/inset/page.tsx": "import { Skeleton } from '@/components/ui'\n\nexport default function Page() {\n    return (\n        <div className='flex flex-1 flex-col gap-4 p-4'>\n            <div className='grid auto-rows-min gap-4 md:grid-cols-3'>\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n            </div>\n            <Skeleton className='min-h-[100vh] flex-1 rounded-xl bg-muted/50 md:min-h-min' />\n        </div>\n    )\n}\n",
  "application/sidebar/inset/app-sidebar.tsx": "'use client'\n\nimport {\n    IconChevronRight,\n    IconCreditCard,\n    IconDots,\n    IconGauge,\n    IconLogout,\n    IconMessage,\n    IconNotebook,\n    IconSettings,\n    IconShieldQuestion,\n    IconTicket\n} from '@tabler/icons-react'\nimport { IconApp } from '@/components/icons'\nimport { Menu, Sidebar, User } from '@/components/ui'\n\nexport default function AppSidebar() {\n    return (\n        <Sidebar variant='inset'>\n            <Sidebar.Header>\n                <IconApp />\n                <Sidebar.Label>HQ UI</Sidebar.Label>\n            </Sidebar.Header>\n            <Sidebar.Content>\n                <Sidebar.Section title='Overview'>\n                    <Sidebar.Item href='#' isCurrent tooltip='Overview'>\n                        <IconGauge />\n                        <Sidebar.Label>Overview</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item badge='4 Pending' href='#' tooltip='Payments'>\n                        <IconCreditCard />\n                        <Sidebar.Label>Payments</Sidebar.Label>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n\n                <Sidebar.Section defaultExpandedKeys={[1]}>\n                    <Sidebar.Item id={1}>\n                        <Sidebar.SubItemTrigger>\n                            <IconDots />\n                            <Sidebar.Label>Support</Sidebar.Label>\n                        </Sidebar.SubItemTrigger>\n                        <Sidebar.SubItem>\n                            <Sidebar.Item href='#'>\n                                <IconTicket />\n                                <Sidebar.Label>Tickets</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconMessage />\n                                <Sidebar.Label>Chat Support</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconShieldQuestion />\n                                <Sidebar.Label>FAQ</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconNotebook />\n                                <Sidebar.Label>Documentation</Sidebar.Label>\n                            </Sidebar.Item>\n                        </Sidebar.SubItem>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n            </Sidebar.Content>\n            <Sidebar.Footer>\n                <Menu>\n                    <Menu.Trigger\n                        className='group flex size-full items-center justify-between rounded-lg pressed:bg-muted p-2 hover:bg-muted'\n                        slot={null}\n                    >\n                        <User\n                            description='@dq-alhq'\n                            name='DQ Al Haqqi'\n                            shape='square'\n                            src='https://github.com/dq-alhq.png'\n                        />\n                        <IconChevronRight className='group-aria-expanded:-rotate-90 size-4' />\n                    </Menu.Trigger>\n                    <Menu.Content className='sm:min-w-(--trigger-width)' placement='top left'>\n                        <Menu.Header>\n                            <span className='block'>DQ Al Haqqi</span>\n                            <span className='font-normal text-muted-foreground'>@dq-alhq</span>\n                        </Menu.Header>\n                        <Menu.Item href='#settings'>\n                            <IconSettings />\n                            Settings\n                        </Menu.Item>\n                        <Menu.Item href='#logout'>\n                            <IconLogout />\n                            Log out\n                        </Menu.Item>\n                    </Menu.Content>\n                </Menu>\n            </Sidebar.Footer>\n            <Sidebar.Rail />\n            <Sidebar.Trigger />\n        </Sidebar>\n    )\n}\n",
  "application/sidebar/inset/layout.tsx": "import { SidebarInset } from '@/components/ui'\nimport AppSidebar from '@/components/app-sidebar'\nimport AppSidebarNav from '@/components/app-sidebar-nav'\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n    return (\n        <div className='flex'>\n            <AppSidebar />\n            <SidebarInset>\n                <AppSidebarNav />\n                {children}\n            </SidebarInset>\n        </div>\n    )\n}\n",
  "application/sidebar/dock-float/app-sidebar-nav.tsx": "'use client'\n\nimport { IconLogout, IconSettings } from '@tabler/icons-react'\nimport { IconApp } from '@/components/icons'\nimport { ThemeToggle } from '@/components/theme-toggle'\nimport { Link } from '@/components/ui'\nimport { Avatar } from '@/components/ui/avatar'\nimport { Breadcrumbs } from '@/components/ui/breadcrumbs'\nimport { Menu } from '@/components/ui/menu'\nimport { SidebarNav } from '@/components/ui/sidebar'\n\nexport default function AppSidebarNav() {\n    return (\n        <SidebarNav>\n            <Link className='ml-auto pl-16 md:hidden' href='#'>\n                <IconApp className='size-6' />\n            </Link>\n            <Breadcrumbs className='hidden md:flex'>\n                <Breadcrumbs.Item href='#'>Dashboard</Breadcrumbs.Item>\n                <Breadcrumbs.Item>Content</Breadcrumbs.Item>\n            </Breadcrumbs>\n            <div className='ml-auto'>\n                <ThemeToggle variant='ghost' />\n            </div>\n            <Menu>\n                <Menu.Trigger aria-label='Open Menu' className='md:hidden'>\n                    <Avatar alt='Diqi Al-Haqqi' src='https://github.com/dq-alhq.png' />\n                </Menu.Trigger>\n                <Menu.Content className='sm:min-w-(--trigger-width)' placement='right bottom'>\n                    <Menu.Header>\n                        <span className='block'>DQ Al Haqqi</span>\n                        <span className='font-normal text-muted-foreground'>@dq-alhq</span>\n                    </Menu.Header>\n                    <Menu.Item href='#settings'>\n                        <IconSettings />\n                        Settings\n                    </Menu.Item>\n                    <Menu.Item href='#logout'>\n                        <IconLogout />\n                        Log out\n                    </Menu.Item>\n                </Menu.Content>\n            </Menu>\n        </SidebarNav>\n    )\n}\n",
  "application/sidebar/dock-float/page.tsx": "import { Skeleton } from '@/components/ui'\n\nexport default function Page() {\n    return (\n        <div className='flex flex-1 flex-col gap-4 p-4'>\n            <div className='grid auto-rows-min gap-4 md:grid-cols-3'>\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n            </div>\n            <Skeleton className='min-h-[100vh] flex-1 rounded-xl bg-muted/50 md:min-h-min' />\n        </div>\n    )\n}\n",
  "application/sidebar/dock-float/app-sidebar.tsx": "'use client'\n\nimport {\n    IconChevronRight,\n    IconCreditCard,\n    IconDots,\n    IconGauge,\n    IconLogout,\n    IconMessage,\n    IconNotebook,\n    IconSettings,\n    IconShieldQuestion,\n    IconTicket\n} from '@tabler/icons-react'\nimport { IconApp } from '@/components/icons'\nimport { Menu, Sidebar, User } from '@/components/ui'\n\nexport default function AppSidebar() {\n    return (\n        <Sidebar collapsible='dock' variant='float'>\n            <Sidebar.Header>\n                <IconApp />\n                <Sidebar.Label>HQ UI</Sidebar.Label>\n            </Sidebar.Header>\n            <Sidebar.Content>\n                <Sidebar.Section title='Overview'>\n                    <Sidebar.Item href='#' isCurrent tooltip='Overview'>\n                        <IconGauge />\n                        <Sidebar.Label>Overview</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item badge='4 Pending' href='#' tooltip='Payments'>\n                        <IconCreditCard />\n                        <Sidebar.Label>Payments</Sidebar.Label>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n\n                <Sidebar.Section defaultExpandedKeys={[1]}>\n                    <Sidebar.Item id={1}>\n                        <Sidebar.SubItemTrigger>\n                            <IconDots />\n                            <Sidebar.Label>Support</Sidebar.Label>\n                        </Sidebar.SubItemTrigger>\n                        <Sidebar.SubItem>\n                            <Sidebar.Item href='#'>\n                                <IconTicket />\n                                <Sidebar.Label>Tickets</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconMessage />\n                                <Sidebar.Label>Chat Support</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconShieldQuestion />\n                                <Sidebar.Label>FAQ</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconNotebook />\n                                <Sidebar.Label>Documentation</Sidebar.Label>\n                            </Sidebar.Item>\n                        </Sidebar.SubItem>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n            </Sidebar.Content>\n            <Sidebar.Footer>\n                <Menu>\n                    <Menu.Trigger\n                        className='group flex size-full items-center justify-between rounded-lg pressed:bg-muted p-2 hover:bg-muted'\n                        slot={null}\n                    >\n                        <User\n                            description='@dq-alhq'\n                            name='DQ Al Haqqi'\n                            shape='square'\n                            src='https://github.com/dq-alhq.png'\n                        />\n                        <IconChevronRight className='group-aria-expanded:-rotate-90 size-4' />\n                    </Menu.Trigger>\n                    <Menu.Content className='sm:min-w-(--trigger-width)' placement='top left'>\n                        <Menu.Header>\n                            <span className='block'>DQ Al Haqqi</span>\n                            <span className='font-normal text-muted-foreground'>@dq-alhq</span>\n                        </Menu.Header>\n                        <Menu.Item href='#settings'>\n                            <IconSettings />\n                            Settings\n                        </Menu.Item>\n                        <Menu.Item href='#logout'>\n                            <IconLogout />\n                            Log out\n                        </Menu.Item>\n                    </Menu.Content>\n                </Menu>\n            </Sidebar.Footer>\n            <Sidebar.Rail />\n            <Sidebar.Trigger />\n        </Sidebar>\n    )\n}\n",
  "application/sidebar/dock-float/layout.tsx": "import { SidebarInset } from '@/components/ui'\nimport AppSidebar from '@/components/app-sidebar'\nimport AppSidebarNav from '@/components/app-sidebar-nav'\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n    return (\n        <div className='flex'>\n            <AppSidebar />\n            <SidebarInset>\n                <AppSidebarNav />\n                {children}\n            </SidebarInset>\n        </div>\n    )\n}\n",
  "application/navbar/basic/page.tsx": "import { Skeleton } from '@/components/ui'\n\nexport default function Page() {\n    return (\n        <div className='flex h-full flex-1 flex-col gap-4 py-4'>\n            <div className='grid auto-rows-min gap-4 md:grid-cols-3'>\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n            </div>\n            <Skeleton className='min-h-[100vh] flex-1 rounded-xl bg-muted/50 md:min-h-min' />\n        </div>\n    )\n}\n",
  "application/navbar/basic/layout.tsx": "'use client'\n\nimport { IconGauge, IconLogout, IconSearch, IconSettings, IconShield, IconShoppingBag } from '@tabler/icons-react'\nimport { IconApp } from '@/components/icons'\nimport { ThemeToggle } from '@/components/theme-toggle'\nimport { Avatar, Breadcrumbs, Button, Menu, Navbar, Separator } from '@/components/ui'\n\nexport default function AppNavbar({ children }: { children: React.ReactNode }) {\n    return (\n        <Navbar>\n            <Navbar.Nav>\n                <Navbar.Logo aria-label='Goto documenation of Navbar' href='/docs/components/layouts/navbar'>\n                    <IconApp className='size-6 sm:size-5' />\n                </Navbar.Logo>\n                <Navbar.Section>\n                    <Navbar.Item href='#' isCurrent>\n                        Home\n                    </Navbar.Item>\n                    <Navbar.Item href='#'>About</Navbar.Item>\n                    <Navbar.Item href='#'>Contact</Navbar.Item>\n                </Navbar.Section>\n\n                <Navbar.Section className='ml-auto hidden md:flex'>\n                    <Navbar.Flex className='sm:gap-x-1'>\n                        <Button aria-label='Search for products' icon variant='ghost'>\n                            <IconSearch />\n                        </Button>\n                        <ThemeToggle variant='ghost' />\n                    </Navbar.Flex>\n                    <Separator className='mr-3 ml-1 h-6' orientation='vertical' />\n                    <UserMenu />\n                </Navbar.Section>\n            </Navbar.Nav>\n            <Navbar.Compact>\n                <Navbar.Flex>\n                    <Navbar.Trigger className='-ml-2' />\n                    <Separator className='h-6 sm:mx-1' orientation='vertical' />\n                    <Navbar.Logo aria-label='Goto documenation of Navbar' href='/docs/components/layouts/navbar'>\n                        <IconApp className='size-5' />\n                    </Navbar.Logo>\n                </Navbar.Flex>\n                <Navbar.Flex>\n                    <Navbar.Flex>\n                        <Button aria-label='Search for products' icon variant='ghost'>\n                            <IconSearch />\n                        </Button>\n                        <Button aria-label='Your Bag' icon variant='ghost'>\n                            <IconShoppingBag />\n                        </Button>\n                        <ThemeToggle variant='ghost' />\n                    </Navbar.Flex>\n                    <Separator className='mr-3 ml-1 h-6' orientation='vertical' />\n                    <UserMenu />\n                </Navbar.Flex>\n            </Navbar.Compact>\n            <Navbar.Breadcrumbs>\n                <Breadcrumbs>\n                    <Breadcrumbs.Item href='#'>Home</Breadcrumbs.Item>\n                    <Breadcrumbs.Item href='#'>Blocks</Breadcrumbs.Item>\n                    <Breadcrumbs.Item>Navbar</Breadcrumbs.Item>\n                </Breadcrumbs>\n            </Navbar.Breadcrumbs>\n            <Navbar.Inset>{children}</Navbar.Inset>\n        </Navbar>\n    )\n}\n\nfunction UserMenu() {\n    return (\n        <Menu>\n            <Menu.Trigger aria-label='Open Menu'>\n                <Avatar alt='DQ' shape='square' size='sm' src='https://github.com/dq-alhq.png' />\n            </Menu.Trigger>\n            <Menu.Content className='sm:min-w-56' placement='bottom right'>\n                <Menu.Header>\n                    <span className='block'>DQ Al-Haqqi</span>\n                    <span className='font-normal text-muted-foreground'>@dq-alhq</span>\n                </Menu.Header>\n                <Menu.Item href='#dashboard'>\n                    <IconGauge />\n                    Dashboard\n                </Menu.Item>\n                <Menu.Item href='#settings'>\n                    <IconSettings />\n                    Settings\n                </Menu.Item>\n                <Menu.Item href='#security'>\n                    <IconShield />\n                    Security\n                </Menu.Item>\n                <Menu.Separator />\n                <Menu.Item href='#logout'>\n                    <IconLogout />\n                    Log out\n                </Menu.Item>\n            </Menu.Content>\n        </Menu>\n    )\n}\n",
  "application/navbar/float/page.tsx": "import { Skeleton } from '@/components/ui'\n\nexport default function Page() {\n    return (\n        <div className='flex h-full flex-1 flex-col gap-4 py-4'>\n            <div className='grid auto-rows-min gap-4 md:grid-cols-3'>\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n            </div>\n            <Skeleton className='min-h-[100vh] flex-1 rounded-xl bg-muted/50 md:min-h-min' />\n        </div>\n    )\n}\n",
  "application/navbar/float/layout.tsx": "'use client'\n\nimport { IconGauge, IconLogout, IconSearch, IconSettings, IconShield, IconShoppingBag } from '@tabler/icons-react'\nimport { IconApp } from '@/components/icons'\nimport { ThemeToggle } from '@/components/theme-toggle'\nimport { Avatar, Breadcrumbs, Button, Menu, Navbar, Separator } from '@/components/ui'\n\nexport default function AppNavbar({ children }: { children: React.ReactNode }) {\n    return (\n        <Navbar variant='float'>\n            <Navbar.Nav>\n                <Navbar.Logo aria-label='Goto documenation of Navbar' href='/docs/components/layouts/navbar'>\n                    <IconApp className='size-6 sm:size-5' />\n                </Navbar.Logo>\n                <Navbar.Section>\n                    <Navbar.Item href='#' isCurrent>\n                        Home\n                    </Navbar.Item>\n                    <Navbar.Item href='#'>About</Navbar.Item>\n                    <Navbar.Item href='#'>Contact</Navbar.Item>\n                </Navbar.Section>\n\n                <Navbar.Section className='ml-auto hidden md:flex'>\n                    <Navbar.Flex className='sm:gap-x-1'>\n                        <Button aria-label='Search for products' icon variant='ghost'>\n                            <IconSearch />\n                        </Button>\n                        <ThemeToggle variant='ghost' />\n                    </Navbar.Flex>\n                    <Separator className='mr-3 ml-1 h-6' orientation='vertical' />\n                    <UserMenu />\n                </Navbar.Section>\n            </Navbar.Nav>\n            <Navbar.Compact>\n                <Navbar.Flex>\n                    <Navbar.Trigger className='-ml-2' />\n                    <Separator className='h-6 sm:mx-1' orientation='vertical' />\n                    <Navbar.Logo aria-label='Goto documenation of Navbar' href='/docs/components/layouts/navbar'>\n                        <IconApp className='size-5' />\n                    </Navbar.Logo>\n                </Navbar.Flex>\n                <Navbar.Flex>\n                    <Navbar.Flex>\n                        <Button aria-label='Search for products' icon variant='ghost'>\n                            <IconSearch />\n                        </Button>\n                        <Button aria-label='Your Bag' icon variant='ghost'>\n                            <IconShoppingBag />\n                        </Button>\n                        <ThemeToggle variant='ghost' />\n                    </Navbar.Flex>\n                    <Separator className='mr-3 ml-1 h-6' orientation='vertical' />\n                    <UserMenu />\n                </Navbar.Flex>\n            </Navbar.Compact>\n            <Navbar.Breadcrumbs>\n                <Breadcrumbs>\n                    <Breadcrumbs.Item href='#'>Home</Breadcrumbs.Item>\n                    <Breadcrumbs.Item href='#'>Blocks</Breadcrumbs.Item>\n                    <Breadcrumbs.Item>Navbar</Breadcrumbs.Item>\n                </Breadcrumbs>\n            </Navbar.Breadcrumbs>\n            <Navbar.Inset>{children}</Navbar.Inset>\n        </Navbar>\n    )\n}\n\nfunction UserMenu() {\n    return (\n        <Menu>\n            <Menu.Trigger aria-label='Open Menu'>\n                <Avatar alt='DQ' shape='square' size='sm' src='https://github.com/dq-alhq.png' />\n            </Menu.Trigger>\n            <Menu.Content className='sm:min-w-56' placement='bottom right'>\n                <Menu.Header>\n                    <span className='block'>DQ Al-Haqqi</span>\n                    <span className='font-normal text-muted-foreground'>@dq-alhq</span>\n                </Menu.Header>\n                <Menu.Item href='#dashboard'>\n                    <IconGauge />\n                    Dashboard\n                </Menu.Item>\n                <Menu.Item href='#settings'>\n                    <IconSettings />\n                    Settings\n                </Menu.Item>\n                <Menu.Item href='#security'>\n                    <IconShield />\n                    Security\n                </Menu.Item>\n                <Menu.Separator />\n                <Menu.Item href='#logout'>\n                    <IconLogout />\n                    Log out\n                </Menu.Item>\n            </Menu.Content>\n        </Menu>\n    )\n}\n",
  "application/navbar/inset/page.tsx": "import { Skeleton } from '@/components/ui'\n\nexport default function Page() {\n    return (\n        <div className='flex h-full flex-1 flex-col gap-4 py-4'>\n            <div className='grid auto-rows-min gap-4 md:grid-cols-3'>\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n                <Skeleton className='aspect-video rounded-xl bg-muted/50' />\n            </div>\n            <Skeleton className='min-h-[100vh] flex-1 rounded-xl bg-muted/50 md:min-h-min' />\n        </div>\n    )\n}\n",
  "application/navbar/inset/layout.tsx": "'use client'\n\nimport { IconGauge, IconLogout, IconSearch, IconSettings, IconShield, IconShoppingBag } from '@tabler/icons-react'\nimport { IconApp } from '@/components/icons'\nimport { ThemeToggle } from '@/components/theme-toggle'\nimport { Avatar, Breadcrumbs, Button, Menu, Navbar, Separator } from '@/components/ui'\n\nexport default function AppNavbar({ children }: { children: React.ReactNode }) {\n    return (\n        <Navbar variant='inset'>\n            <Navbar.Nav>\n                <Navbar.Logo aria-label='Goto documenation of Navbar' href='/docs/components/layouts/navbar'>\n                    <IconApp className='size-6 sm:size-5' />\n                </Navbar.Logo>\n                <Navbar.Section>\n                    <Navbar.Item href='#' isCurrent>\n                        Home\n                    </Navbar.Item>\n                    <Navbar.Item href='#'>About</Navbar.Item>\n                    <Navbar.Item href='#'>Contact</Navbar.Item>\n                </Navbar.Section>\n\n                <Navbar.Section className='ml-auto hidden md:flex'>\n                    <Navbar.Flex className='sm:gap-x-1'>\n                        <Button aria-label='Search for products' icon variant='ghost'>\n                            <IconSearch />\n                        </Button>\n                        <ThemeToggle variant='ghost' />\n                    </Navbar.Flex>\n                    <Separator className='mr-3 ml-1 h-6' orientation='vertical' />\n                    <UserMenu />\n                </Navbar.Section>\n            </Navbar.Nav>\n            <Navbar.Compact>\n                <Navbar.Flex>\n                    <Navbar.Trigger className='-ml-2' />\n                    <Separator className='h-6 sm:mx-1' orientation='vertical' />\n                    <Navbar.Logo aria-label='Goto documenation of Navbar' href='/docs/components/layouts/navbar'>\n                        <IconApp className='size-5' />\n                    </Navbar.Logo>\n                </Navbar.Flex>\n                <Navbar.Flex>\n                    <Navbar.Flex>\n                        <Button aria-label='Search for products' icon variant='ghost'>\n                            <IconSearch />\n                        </Button>\n                        <Button aria-label='Your Bag' icon variant='ghost'>\n                            <IconShoppingBag />\n                        </Button>\n                        <ThemeToggle variant='ghost' />\n                    </Navbar.Flex>\n                    <Separator className='mr-3 ml-1 h-6' orientation='vertical' />\n                    <UserMenu />\n                </Navbar.Flex>\n            </Navbar.Compact>\n            <Navbar.Breadcrumbs>\n                <Breadcrumbs>\n                    <Breadcrumbs.Item href='#'>Home</Breadcrumbs.Item>\n                    <Breadcrumbs.Item href='#'>Blocks</Breadcrumbs.Item>\n                    <Breadcrumbs.Item>Navbar</Breadcrumbs.Item>\n                </Breadcrumbs>\n            </Navbar.Breadcrumbs>\n            <Navbar.Inset>{children}</Navbar.Inset>\n        </Navbar>\n    )\n}\n\nfunction UserMenu() {\n    return (\n        <Menu>\n            <Menu.Trigger aria-label='Open Menu'>\n                <Avatar alt='DQ' shape='square' size='sm' src='https://github.com/dq-alhq.png' />\n            </Menu.Trigger>\n            <Menu.Content className='sm:min-w-56' placement='bottom right'>\n                <Menu.Header>\n                    <span className='block'>DQ Al-Haqqi</span>\n                    <span className='font-normal text-muted-foreground'>@dq-alhq</span>\n                </Menu.Header>\n                <Menu.Item href='#dashboard'>\n                    <IconGauge />\n                    Dashboard\n                </Menu.Item>\n                <Menu.Item href='#settings'>\n                    <IconSettings />\n                    Settings\n                </Menu.Item>\n                <Menu.Item href='#security'>\n                    <IconShield />\n                    Security\n                </Menu.Item>\n                <Menu.Separator />\n                <Menu.Item href='#logout'>\n                    <IconLogout />\n                    Log out\n                </Menu.Item>\n            </Menu.Content>\n        </Menu>\n    )\n}\n",
  "application/dashboard/simple/app-sidebar-nav.tsx": "'use client'\n\nimport { IconLogout, IconSettings } from '@tabler/icons-react'\nimport { IconApp } from '@/components/icons'\nimport { ThemeToggle } from '@/components/theme-toggle'\nimport { Avatar, Breadcrumbs, Link, Menu, SidebarNav } from '@/components/ui'\n\nexport default function AppSidebarNav() {\n    return (\n        <SidebarNav>\n            <Link className='ml-auto pl-16 md:hidden' href='#'>\n                <IconApp className='size-6' />\n            </Link>\n            <Breadcrumbs className='hidden md:flex'>\n                <Breadcrumbs.Item href='#'>Dashboard</Breadcrumbs.Item>\n                <Breadcrumbs.Item>Content</Breadcrumbs.Item>\n            </Breadcrumbs>\n            <div className='ml-auto'>\n                <ThemeToggle variant='ghost' />\n            </div>\n            <Menu>\n                <Menu.Trigger aria-label='Open Menu' className='md:hidden'>\n                    <Avatar alt='Diqi Al-Haqqi' src='https://github.com/dq-alhq.png' />\n                </Menu.Trigger>\n                <Menu.Content className='sm:min-w-(--trigger-width)' placement='right bottom'>\n                    <Menu.Header>\n                        <span className='block'>DQ Al Haqqi</span>\n                        <span className='font-normal text-muted-foreground'>@dq-alhq</span>\n                    </Menu.Header>\n                    <Menu.Item href='#settings'>\n                        <IconSettings />\n                        Settings\n                    </Menu.Item>\n                    <Menu.Item href='#logout'>\n                        <IconLogout />\n                        Log out\n                    </Menu.Item>\n                </Menu.Content>\n            </Menu>\n        </SidebarNav>\n    )\n}\n",
  "application/dashboard/simple/data-table.tsx": "import { Card, Table } from '@/components/ui'\n\ntype Item = {\n    id: number\n    header: string\n    type: string\n    status: string\n    target: string\n    limit: string\n    reviewer: string\n}\n\nexport default function DataTable({ data }: { data: Item[] }) {\n    return (\n        <Card>\n            <Table>\n                <Table.Header>\n                    <Table.Column className='w-0'>#</Table.Column>\n                    <Table.Column isRowHeader>Name</Table.Column>\n                    <Table.Column>Type</Table.Column>\n                    <Table.Column>Status</Table.Column>\n                </Table.Header>\n                <Table.Body items={data}>\n                    {(item) => (\n                        <Table.Row>\n                            <Table.Cell>{item.id}</Table.Cell>\n                            <Table.Cell>{item.header}</Table.Cell>\n                            <Table.Cell>{item.type}</Table.Cell>\n                            <Table.Cell>{item.status}</Table.Cell>\n                        </Table.Row>\n                    )}\n                </Table.Body>\n            </Table>\n        </Card>\n    )\n}\n",
  "application/dashboard/simple/page.tsx": "'use client'\n\nimport { ChartArea } from '@/components/chart-area'\nimport data from '@/components/data.json'\nimport DataTable from '@/components/data-table'\nimport Stats from '@/components/stats'\n\nexport default function Dashboard() {\n    return (\n        <div className='flex flex-1 flex-col'>\n            <div className='flex flex-1 flex-col gap-2'>\n                <div className='flex flex-col gap-4 py-4 md:gap-6 md:py-6'>\n                    <Stats />\n                    <div className='px-4 lg:px-6'>\n                        <ChartArea />\n                    </div>\n                    <div className='px-4 lg:px-6'>\n                        <DataTable data={data} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n",
  "application/dashboard/simple/stats.tsx": "import { IconTrendingDown, IconTrendingUp } from '@tabler/icons-react'\nimport { Badge, Card } from '@/components/ui'\n\nexport default function Stats() {\n    return (\n        <div className='grid grid-cols-1 gap-4 px-4 md:grid-cols-2 lg:px-6 xl:grid-cols-4'>\n            <Card>\n                <Card.Header className='relative'>\n                    <Card.Description>Total Revenue</Card.Description>\n                    <Card.Title className='font-semibold text-2xl tabular-nums md:text-3xl'>$1,250.00</Card.Title>\n                    <div className='absolute top-4 right-4'>\n                        <Badge variant='outline'>\n                            <IconTrendingUp />\n                            +12.5%\n                        </Badge>\n                    </div>\n                </Card.Header>\n                <Card.Footer className='flex-col items-start gap-1 text-sm lg:flex-col'>\n                    <div className='line-clamp-1 flex gap-2 font-medium'>\n                        Trending up this month <IconTrendingUp className='size-4' />\n                    </div>\n                    <div className='text-muted-foreground'>Visitors for the last 6 months</div>\n                </Card.Footer>\n            </Card>\n            <Card>\n                <Card.Header className='relative'>\n                    <Card.Description>New Customers</Card.Description>\n                    <Card.Title className='font-semibold text-2xl tabular-nums md:text-3xl'>1,234</Card.Title>\n                    <div className='absolute top-4 right-4'>\n                        <Badge variant='outline'>\n                            <IconTrendingDown />\n                            -20%\n                        </Badge>\n                    </div>\n                </Card.Header>\n                <Card.Footer className='flex-col items-start gap-1 text-sm lg:flex-col'>\n                    <div className='line-clamp-1 flex gap-2 font-medium'>\n                        Down 20% this period <IconTrendingDown className='size-4' />\n                    </div>\n                    <div className='text-muted-foreground'>Acquisition needs attention</div>\n                </Card.Footer>\n            </Card>\n            <Card>\n                <Card.Header className='relative'>\n                    <Card.Description>Active Accounts</Card.Description>\n                    <Card.Title className='font-semibold text-2xl tabular-nums md:text-3xl'>45,678</Card.Title>\n                    <div className='absolute top-4 right-4'>\n                        <Badge variant='outline'>\n                            <IconTrendingUp />\n                            +12.5%\n                        </Badge>\n                    </div>\n                </Card.Header>\n                <Card.Footer className='flex-col items-start gap-1 text-sm lg:flex-col'>\n                    <div className='line-clamp-1 flex gap-2 font-medium'>\n                        Strong user retention <IconTrendingUp className='size-4' />\n                    </div>\n                    <div className='text-muted-foreground'>Engagement exceed targets</div>\n                </Card.Footer>\n            </Card>\n            <Card>\n                <Card.Header className='relative'>\n                    <Card.Description>Growth Rate</Card.Description>\n                    <Card.Title className='font-semibold text-2xl tabular-nums md:text-3xl'>4.5%</Card.Title>\n                    <div className='absolute top-4 right-4'>\n                        <Badge variant='outline'>\n                            <IconTrendingUp />\n                            +4.5%\n                        </Badge>\n                    </div>\n                </Card.Header>\n                <Card.Footer className='flex-col items-start gap-1 text-sm lg:flex-col'>\n                    <div className='line-clamp-1 flex gap-2 font-medium'>\n                        Steady performance <IconTrendingUp className='size-4' />\n                    </div>\n                    <div className='text-muted-foreground'>Meets growth projections</div>\n                </Card.Footer>\n            </Card>\n        </div>\n    )\n}\n",
  "application/dashboard/simple/data.json": "[\n    {\n        \"id\": 1,\n        \"header\": \"Cover page\",\n        \"type\": \"Cover page\",\n        \"status\": \"In Process\",\n        \"target\": \"18\",\n        \"limit\": \"5\",\n        \"reviewer\": \"Eddie Lake\"\n    },\n    {\n        \"id\": 2,\n        \"header\": \"Table of contents\",\n        \"type\": \"Table of contents\",\n        \"status\": \"Done\",\n        \"target\": \"29\",\n        \"limit\": \"24\",\n        \"reviewer\": \"Eddie Lake\"\n    },\n    {\n        \"id\": 3,\n        \"header\": \"Executive summary\",\n        \"type\": \"Narrative\",\n        \"status\": \"Done\",\n        \"target\": \"10\",\n        \"limit\": \"13\",\n        \"reviewer\": \"Eddie Lake\"\n    },\n    {\n        \"id\": 4,\n        \"header\": \"Technical approach\",\n        \"type\": \"Narrative\",\n        \"status\": \"Done\",\n        \"target\": \"27\",\n        \"limit\": \"23\",\n        \"reviewer\": \"Jamik Tashpulatov\"\n    },\n    {\n        \"id\": 5,\n        \"header\": \"Design\",\n        \"type\": \"Narrative\",\n        \"status\": \"In Process\",\n        \"target\": \"2\",\n        \"limit\": \"16\",\n        \"reviewer\": \"Jamik Tashpulatov\"\n    },\n    {\n        \"id\": 6,\n        \"header\": \"Capabilities\",\n        \"type\": \"Narrative\",\n        \"status\": \"In Process\",\n        \"target\": \"20\",\n        \"limit\": \"8\",\n        \"reviewer\": \"Jamik Tashpulatov\"\n    },\n    {\n        \"id\": 7,\n        \"header\": \"Integration with existing systems\",\n        \"type\": \"Narrative\",\n        \"status\": \"In Process\",\n        \"target\": \"19\",\n        \"limit\": \"21\",\n        \"reviewer\": \"Jamik Tashpulatov\"\n    },\n    {\n        \"id\": 8,\n        \"header\": \"Innovation and Advantages\",\n        \"type\": \"Narrative\",\n        \"status\": \"Done\",\n        \"target\": \"25\",\n        \"limit\": \"26\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 9,\n        \"header\": \"Overview of EMR's Innovative Solutions\",\n        \"type\": \"Technical content\",\n        \"status\": \"Done\",\n        \"target\": \"7\",\n        \"limit\": \"23\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 10,\n        \"header\": \"Advanced Algorithms and Machine Learning\",\n        \"type\": \"Narrative\",\n        \"status\": \"Done\",\n        \"target\": \"30\",\n        \"limit\": \"28\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 11,\n        \"header\": \"Adaptive Communication Protocols\",\n        \"type\": \"Narrative\",\n        \"status\": \"Done\",\n        \"target\": \"9\",\n        \"limit\": \"31\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 12,\n        \"header\": \"Advantages Over Current Technologies\",\n        \"type\": \"Narrative\",\n        \"status\": \"Done\",\n        \"target\": \"12\",\n        \"limit\": \"0\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 13,\n        \"header\": \"Past Performance\",\n        \"type\": \"Narrative\",\n        \"status\": \"Done\",\n        \"target\": \"22\",\n        \"limit\": \"33\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 14,\n        \"header\": \"Customer Feedback and Satisfaction Levels\",\n        \"type\": \"Narrative\",\n        \"status\": \"Done\",\n        \"target\": \"15\",\n        \"limit\": \"34\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 15,\n        \"header\": \"Implementation Challenges and Solutions\",\n        \"type\": \"Narrative\",\n        \"status\": \"Done\",\n        \"target\": \"3\",\n        \"limit\": \"35\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 16,\n        \"header\": \"Security Measures and Data Protection Policies\",\n        \"type\": \"Narrative\",\n        \"status\": \"In Process\",\n        \"target\": \"6\",\n        \"limit\": \"36\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 17,\n        \"header\": \"Scalability and Future Proofing\",\n        \"type\": \"Narrative\",\n        \"status\": \"Done\",\n        \"target\": \"4\",\n        \"limit\": \"37\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 18,\n        \"header\": \"Cost-Benefit Analysis\",\n        \"type\": \"Plain language\",\n        \"status\": \"Done\",\n        \"target\": \"14\",\n        \"limit\": \"38\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 19,\n        \"header\": \"User Training and Onboarding Experience\",\n        \"type\": \"Narrative\",\n        \"status\": \"Done\",\n        \"target\": \"17\",\n        \"limit\": \"39\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 20,\n        \"header\": \"Future Development Roadmap\",\n        \"type\": \"Narrative\",\n        \"status\": \"Done\",\n        \"target\": \"11\",\n        \"limit\": \"40\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 21,\n        \"header\": \"System Architecture Overview\",\n        \"type\": \"Technical content\",\n        \"status\": \"In Process\",\n        \"target\": \"24\",\n        \"limit\": \"18\",\n        \"reviewer\": \"Maya Johnson\"\n    },\n    {\n        \"id\": 22,\n        \"header\": \"Risk Management Plan\",\n        \"type\": \"Narrative\",\n        \"status\": \"Done\",\n        \"target\": \"15\",\n        \"limit\": \"22\",\n        \"reviewer\": \"Carlos Rodriguez\"\n    },\n    {\n        \"id\": 23,\n        \"header\": \"Compliance Documentation\",\n        \"type\": \"Legal\",\n        \"status\": \"In Process\",\n        \"target\": \"31\",\n        \"limit\": \"27\",\n        \"reviewer\": \"Sarah Chen\"\n    },\n    {\n        \"id\": 24,\n        \"header\": \"API Documentation\",\n        \"type\": \"Technical content\",\n        \"status\": \"Done\",\n        \"target\": \"8\",\n        \"limit\": \"12\",\n        \"reviewer\": \"Raj Patel\"\n    },\n    {\n        \"id\": 25,\n        \"header\": \"User Interface Mockups\",\n        \"type\": \"Visual\",\n        \"status\": \"In Process\",\n        \"target\": \"19\",\n        \"limit\": \"25\",\n        \"reviewer\": \"Leila Ahmadi\"\n    },\n    {\n        \"id\": 26,\n        \"header\": \"Database Schema\",\n        \"type\": \"Technical content\",\n        \"status\": \"Done\",\n        \"target\": \"22\",\n        \"limit\": \"20\",\n        \"reviewer\": \"Thomas Wilson\"\n    },\n    {\n        \"id\": 27,\n        \"header\": \"Testing Methodology\",\n        \"type\": \"Technical content\",\n        \"status\": \"In Process\",\n        \"target\": \"17\",\n        \"limit\": \"14\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 28,\n        \"header\": \"Deployment Strategy\",\n        \"type\": \"Narrative\",\n        \"status\": \"Done\",\n        \"target\": \"26\",\n        \"limit\": \"30\",\n        \"reviewer\": \"Eddie Lake\"\n    },\n    {\n        \"id\": 29,\n        \"header\": \"Budget Breakdown\",\n        \"type\": \"Financial\",\n        \"status\": \"In Process\",\n        \"target\": \"13\",\n        \"limit\": \"16\",\n        \"reviewer\": \"Jamik Tashpulatov\"\n    },\n    {\n        \"id\": 30,\n        \"header\": \"Market Analysis\",\n        \"type\": \"Research\",\n        \"status\": \"Done\",\n        \"target\": \"29\",\n        \"limit\": \"32\",\n        \"reviewer\": \"Sophia Martinez\"\n    },\n    {\n        \"id\": 31,\n        \"header\": \"Competitor Comparison\",\n        \"type\": \"Research\",\n        \"status\": \"In Process\",\n        \"target\": \"21\",\n        \"limit\": \"19\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 32,\n        \"header\": \"Maintenance Plan\",\n        \"type\": \"Technical content\",\n        \"status\": \"Done\",\n        \"target\": \"16\",\n        \"limit\": \"23\",\n        \"reviewer\": \"Alex Thompson\"\n    },\n    {\n        \"id\": 33,\n        \"header\": \"User Personas\",\n        \"type\": \"Research\",\n        \"status\": \"In Process\",\n        \"target\": \"27\",\n        \"limit\": \"24\",\n        \"reviewer\": \"Nina Patel\"\n    },\n    {\n        \"id\": 34,\n        \"header\": \"Accessibility Compliance\",\n        \"type\": \"Legal\",\n        \"status\": \"Done\",\n        \"target\": \"18\",\n        \"limit\": \"21\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 35,\n        \"header\": \"Performance Metrics\",\n        \"type\": \"Technical content\",\n        \"status\": \"In Process\",\n        \"target\": \"23\",\n        \"limit\": \"26\",\n        \"reviewer\": \"David Kim\"\n    },\n    {\n        \"id\": 36,\n        \"header\": \"Disaster Recovery Plan\",\n        \"type\": \"Technical content\",\n        \"status\": \"Done\",\n        \"target\": \"14\",\n        \"limit\": \"17\",\n        \"reviewer\": \"Jamik Tashpulatov\"\n    },\n    {\n        \"id\": 37,\n        \"header\": \"Third-party Integrations\",\n        \"type\": \"Technical content\",\n        \"status\": \"In Process\",\n        \"target\": \"25\",\n        \"limit\": \"28\",\n        \"reviewer\": \"Eddie Lake\"\n    },\n    {\n        \"id\": 38,\n        \"header\": \"User Feedback Summary\",\n        \"type\": \"Research\",\n        \"status\": \"Done\",\n        \"target\": \"20\",\n        \"limit\": \"15\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 39,\n        \"header\": \"Localization Strategy\",\n        \"type\": \"Narrative\",\n        \"status\": \"In Process\",\n        \"target\": \"12\",\n        \"limit\": \"19\",\n        \"reviewer\": \"Maria Garcia\"\n    },\n    {\n        \"id\": 40,\n        \"header\": \"Mobile Compatibility\",\n        \"type\": \"Technical content\",\n        \"status\": \"Done\",\n        \"target\": \"28\",\n        \"limit\": \"31\",\n        \"reviewer\": \"James Wilson\"\n    },\n    {\n        \"id\": 41,\n        \"header\": \"Data Migration Plan\",\n        \"type\": \"Technical content\",\n        \"status\": \"In Process\",\n        \"target\": \"19\",\n        \"limit\": \"22\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 42,\n        \"header\": \"Quality Assurance Protocols\",\n        \"type\": \"Technical content\",\n        \"status\": \"Done\",\n        \"target\": \"30\",\n        \"limit\": \"33\",\n        \"reviewer\": \"Priya Singh\"\n    },\n    {\n        \"id\": 43,\n        \"header\": \"Stakeholder Analysis\",\n        \"type\": \"Research\",\n        \"status\": \"In Process\",\n        \"target\": \"11\",\n        \"limit\": \"14\",\n        \"reviewer\": \"Eddie Lake\"\n    },\n    {\n        \"id\": 44,\n        \"header\": \"Environmental Impact Assessment\",\n        \"type\": \"Research\",\n        \"status\": \"Done\",\n        \"target\": \"24\",\n        \"limit\": \"27\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 45,\n        \"header\": \"Intellectual Property Rights\",\n        \"type\": \"Legal\",\n        \"status\": \"In Process\",\n        \"target\": \"17\",\n        \"limit\": \"20\",\n        \"reviewer\": \"Sarah Johnson\"\n    },\n    {\n        \"id\": 46,\n        \"header\": \"Customer Support Framework\",\n        \"type\": \"Narrative\",\n        \"status\": \"Done\",\n        \"target\": \"22\",\n        \"limit\": \"25\",\n        \"reviewer\": \"Jamik Tashpulatov\"\n    },\n    {\n        \"id\": 47,\n        \"header\": \"Version Control Strategy\",\n        \"type\": \"Technical content\",\n        \"status\": \"In Process\",\n        \"target\": \"15\",\n        \"limit\": \"18\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 48,\n        \"header\": \"Continuous Integration Pipeline\",\n        \"type\": \"Technical content\",\n        \"status\": \"Done\",\n        \"target\": \"26\",\n        \"limit\": \"29\",\n        \"reviewer\": \"Michael Chen\"\n    },\n    {\n        \"id\": 49,\n        \"header\": \"Regulatory Compliance\",\n        \"type\": \"Legal\",\n        \"status\": \"In Process\",\n        \"target\": \"13\",\n        \"limit\": \"16\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 50,\n        \"header\": \"User Authentication System\",\n        \"type\": \"Technical content\",\n        \"status\": \"Done\",\n        \"target\": \"28\",\n        \"limit\": \"31\",\n        \"reviewer\": \"Eddie Lake\"\n    },\n    {\n        \"id\": 51,\n        \"header\": \"Data Analytics Framework\",\n        \"type\": \"Technical content\",\n        \"status\": \"In Process\",\n        \"target\": \"21\",\n        \"limit\": \"24\",\n        \"reviewer\": \"Jamik Tashpulatov\"\n    },\n    {\n        \"id\": 52,\n        \"header\": \"Cloud Infrastructure\",\n        \"type\": \"Technical content\",\n        \"status\": \"Done\",\n        \"target\": \"16\",\n        \"limit\": \"19\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 53,\n        \"header\": \"Network Security Measures\",\n        \"type\": \"Technical content\",\n        \"status\": \"In Process\",\n        \"target\": \"29\",\n        \"limit\": \"32\",\n        \"reviewer\": \"Lisa Wong\"\n    },\n    {\n        \"id\": 54,\n        \"header\": \"Project Timeline\",\n        \"type\": \"Planning\",\n        \"status\": \"Done\",\n        \"target\": \"14\",\n        \"limit\": \"17\",\n        \"reviewer\": \"Eddie Lake\"\n    },\n    {\n        \"id\": 55,\n        \"header\": \"Resource Allocation\",\n        \"type\": \"Planning\",\n        \"status\": \"In Process\",\n        \"target\": \"27\",\n        \"limit\": \"30\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 56,\n        \"header\": \"Team Structure and Roles\",\n        \"type\": \"Planning\",\n        \"status\": \"Done\",\n        \"target\": \"20\",\n        \"limit\": \"23\",\n        \"reviewer\": \"Jamik Tashpulatov\"\n    },\n    {\n        \"id\": 57,\n        \"header\": \"Communication Protocols\",\n        \"type\": \"Planning\",\n        \"status\": \"In Process\",\n        \"target\": \"15\",\n        \"limit\": \"18\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 58,\n        \"header\": \"Success Metrics\",\n        \"type\": \"Planning\",\n        \"status\": \"Done\",\n        \"target\": \"30\",\n        \"limit\": \"33\",\n        \"reviewer\": \"Eddie Lake\"\n    },\n    {\n        \"id\": 59,\n        \"header\": \"Internationalization Support\",\n        \"type\": \"Technical content\",\n        \"status\": \"In Process\",\n        \"target\": \"23\",\n        \"limit\": \"26\",\n        \"reviewer\": \"Jamik Tashpulatov\"\n    },\n    {\n        \"id\": 60,\n        \"header\": \"Backup and Recovery Procedures\",\n        \"type\": \"Technical content\",\n        \"status\": \"Done\",\n        \"target\": \"18\",\n        \"limit\": \"21\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 61,\n        \"header\": \"Monitoring and Alerting System\",\n        \"type\": \"Technical content\",\n        \"status\": \"In Process\",\n        \"target\": \"25\",\n        \"limit\": \"28\",\n        \"reviewer\": \"Daniel Park\"\n    },\n    {\n        \"id\": 62,\n        \"header\": \"Code Review Guidelines\",\n        \"type\": \"Technical content\",\n        \"status\": \"Done\",\n        \"target\": \"12\",\n        \"limit\": \"15\",\n        \"reviewer\": \"Eddie Lake\"\n    },\n    {\n        \"id\": 63,\n        \"header\": \"Documentation Standards\",\n        \"type\": \"Technical content\",\n        \"status\": \"In Process\",\n        \"target\": \"27\",\n        \"limit\": \"30\",\n        \"reviewer\": \"Jamik Tashpulatov\"\n    },\n    {\n        \"id\": 64,\n        \"header\": \"Release Management Process\",\n        \"type\": \"Planning\",\n        \"status\": \"Done\",\n        \"target\": \"22\",\n        \"limit\": \"25\",\n        \"reviewer\": \"Assign reviewer\"\n    },\n    {\n        \"id\": 65,\n        \"header\": \"Feature Prioritization Matrix\",\n        \"type\": \"Planning\",\n        \"status\": \"In Process\",\n        \"target\": \"19\",\n        \"limit\": \"22\",\n        \"reviewer\": \"Emma Davis\"\n    },\n    {\n        \"id\": 66,\n        \"header\": \"Technical Debt Assessment\",\n        \"type\": \"Technical content\",\n        \"status\": \"Done\",\n        \"target\": \"24\",\n        \"limit\": \"27\",\n        \"reviewer\": \"Eddie Lake\"\n    },\n    {\n        \"id\": 67,\n        \"header\": \"Capacity Planning\",\n        \"type\": \"Planning\",\n        \"status\": \"In Process\",\n        \"target\": \"21\",\n        \"limit\": \"24\",\n        \"reviewer\": \"Jamik Tashpulatov\"\n    },\n    {\n        \"id\": 68,\n        \"header\": \"Service Level Agreements\",\n        \"type\": \"Legal\",\n        \"status\": \"Done\",\n        \"target\": \"26\",\n        \"limit\": \"29\",\n        \"reviewer\": \"Assign reviewer\"\n    }\n]\n",
  "application/dashboard/simple/app-sidebar.tsx": "'use client'\n\nimport {\n    IconChevronRight,\n    IconCreditCard,\n    IconDots,\n    IconGauge,\n    IconLogout,\n    IconMessage,\n    IconNotebook,\n    IconSettings,\n    IconTicket\n} from '@tabler/icons-react'\nimport { IconApp } from '@/components/icons'\nimport { Menu, Sidebar, User } from '@/components/ui'\n\nexport default function AppSidebar() {\n    return (\n        <Sidebar collapsible='dock' variant='default'>\n            <Sidebar.Header>\n                <IconApp />\n                <Sidebar.Label>HQ UI</Sidebar.Label>\n            </Sidebar.Header>\n            <Sidebar.Content>\n                <Sidebar.Section title='Overview'>\n                    <Sidebar.Item href='#' isCurrent tooltip='Overview'>\n                        <IconGauge />\n                        <Sidebar.Label>Overview</Sidebar.Label>\n                    </Sidebar.Item>\n                    <Sidebar.Item badge='4 Pending' href='#' tooltip='Payments'>\n                        <IconCreditCard />\n                        <Sidebar.Label>Payments</Sidebar.Label>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n\n                <Sidebar.Section defaultExpandedKeys={[1]}>\n                    <Sidebar.Item id={1}>\n                        <Sidebar.SubItemTrigger>\n                            <IconDots />\n                            <Sidebar.Label>Support</Sidebar.Label>\n                        </Sidebar.SubItemTrigger>\n                        <Sidebar.SubItem>\n                            <Sidebar.Item href='#'>\n                                <IconTicket />\n                                <Sidebar.Label>Tickets</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconMessage />\n                                <Sidebar.Label>Chat Support</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <Sidebar.Label>FAQ</Sidebar.Label>\n                            </Sidebar.Item>\n                            <Sidebar.Item href='#'>\n                                <IconNotebook />\n                                <Sidebar.Label>Documentation</Sidebar.Label>\n                            </Sidebar.Item>\n                        </Sidebar.SubItem>\n                    </Sidebar.Item>\n                </Sidebar.Section>\n            </Sidebar.Content>\n            <Sidebar.Footer>\n                <Menu>\n                    <Menu.Trigger\n                        className='group flex size-full items-center justify-between rounded-lg pressed:bg-muted p-2 hover:bg-muted'\n                        slot={null}\n                    >\n                        <User\n                            description='@dq-alhq'\n                            name='DQ Al Haqqi'\n                            shape='square'\n                            src='https://github.com/dq-alhq.png'\n                        />\n                        <IconChevronRight className='group-aria-expanded:-rotate-90 size-4' />\n                    </Menu.Trigger>\n                    <Menu.Content className='sm:min-w-(--trigger-width)' placement='top left'>\n                        <Menu.Header>\n                            <span className='block'>DQ Al Haqqi</span>\n                            <span className='font-normal text-muted-foreground'>@dq-alhq</span>\n                        </Menu.Header>\n                        <Menu.Item href='#settings'>\n                            <IconSettings />\n                            Settings\n                        </Menu.Item>\n                        <Menu.Item href='#logout'>\n                            <IconLogout />\n                            Log out\n                        </Menu.Item>\n                    </Menu.Content>\n                </Menu>\n            </Sidebar.Footer>\n            <Sidebar.Rail />\n            <Sidebar.Trigger />\n        </Sidebar>\n    )\n}\n",
  "application/dashboard/simple/chart-area.tsx": "'use client'\n\nimport type { Key } from 'react-aria-components'\nimport { useMemo, useState } from 'react'\nimport { AreaChart, Card, Toggle } from '@/components/ui'\n\nexport function ChartArea() {\n    const [selected, setSelected] = useState<Set<Key>>(new Set(['7d']))\n    const selectedKey = Array.from(selected)[0] as string | undefined\n\n    const engagementData = useMemo(() => {\n        if (selectedKey === '1m') {\n            return Array.from({ length: 4 }, (_, i) => ({\n                label: `Week ${i + 1}`,\n                likes: Math.floor(400 + Math.random() * 300),\n                comments: Math.floor(100 + Math.random() * 100),\n                shares: Math.floor(50 + Math.random() * 50)\n            }))\n        }\n\n        if (selectedKey === '2w') {\n            return Array.from({ length: 2 }, (_, i) => ({\n                label: `Week ${i + 1}`,\n                likes: Math.floor(800 + Math.random() * 400),\n                comments: Math.floor(200 + Math.random() * 150),\n                shares: Math.floor(100 + Math.random() * 80)\n            }))\n        }\n\n        const lengthMap: Record<string, number> = { '3d': 3, '7d': 7 }\n        const length = lengthMap[selectedKey ?? '7d'] ?? 7\n\n        return Array.from({ length }, (_, i) => ({\n            label: `Day ${i + 1}`,\n            likes: Math.floor(100 + Math.random() * 300),\n            comments: Math.floor(20 + Math.random() * 80),\n            shares: Math.floor(10 + Math.random() * 50)\n        }))\n    }, [selectedKey])\n\n    const showAllTicks = selectedKey === '3d' || selectedKey === '7d'\n\n    return (\n        <Card>\n            <Card.Header>\n                <Card.Title>Engagement</Card.Title>\n                <Card.Description>Likes, comments, and shares over a dynamic time range.</Card.Description>\n                <Card.Action>\n                    <Toggle.Group onSelectionChange={setSelected} selectedKeys={selected} size='sm'>\n                        <Toggle id='3d'>3d</Toggle>\n                        <Toggle id='7d'>7d</Toggle>\n                        <Toggle id='2w'>2w</Toggle>\n                        <Toggle id='1m'>1m</Toggle>\n                    </Toggle.Group>\n                </Card.Action>\n            </Card.Header>\n            <Card.Content>\n                <AreaChart\n                    className='aspect-video h-56 min-h-[224px] sm:h-72 sm:min-h-[288px]'\n                    config={{\n                        likes: { label: 'Likes' },\n                        comments: { label: 'Comments' },\n                        shares: { label: 'Shares' }\n                    }}\n                    data={engagementData}\n                    dataKey='label'\n                    xAxisProps={{ interval: showAllTicks ? 0 : undefined }}\n                />\n            </Card.Content>\n        </Card>\n    )\n}\n",
  "application/dashboard/simple/layout.tsx": "import { SidebarInset } from '@/components/ui'\nimport AppSidebar from '@/components/app-sidebar'\nimport AppSidebarNav from '@/components/app-sidebar-nav'\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n    return (\n        <div className='flex'>\n            <AppSidebar />\n            <SidebarInset>\n                <AppSidebarNav />\n                {children}\n            </SidebarInset>\n        </div>\n    )\n}\n",
  "application/dashboard/user-setting/page.tsx": "'use client'\n\nimport { Card, Container, Tabs } from '@/components/ui'\nimport { useIsMobile } from '@/lib/hooks'\nimport AccountSetting from '@/components/account-setting'\nimport DangerArea from '@/components/danger-area'\nimport PlanBillingSetting from '@/components/plan-billing-setting'\nimport SecuritySetting from '@/components/security-setting'\n\nexport default function UserSetting() {\n    const isMobile = useIsMobile()\n    return (\n        <Container className='py-6 xl:py-12'>\n            <Card className='mb-6'>\n                <Card.Header>\n                    <Card.Title>User Setting</Card.Title>\n                    <Card.Description>Manage your account settings and preferences.</Card.Description>\n                </Card.Header>\n            </Card>\n            <Tabs aria-label='E-Learning Platform' orientation={isMobile ? 'horizontal' : 'vertical'}>\n                <Tabs.List>\n                    <Tabs.Label id='account'>Account</Tabs.Label>\n                    <Tabs.Label id='security'>Security</Tabs.Label>\n                    <Tabs.Label id='plan'>Plan & Billing</Tabs.Label>\n                    <Tabs.Label id='danger'>Danger Area</Tabs.Label>\n                </Tabs.List>\n                <Tabs.Content id='account'>\n                    <AccountSetting />\n                </Tabs.Content>\n                <Tabs.Content id='security'>\n                    <SecuritySetting />\n                </Tabs.Content>\n                <Tabs.Content id='plan'>\n                    <PlanBillingSetting />\n                </Tabs.Content>\n                <Tabs.Content id='danger'>\n                    <DangerArea />\n                </Tabs.Content>\n            </Tabs>\n        </Container>\n    )\n}\n",
  "application/dashboard/user-setting/danger-area.tsx": "'use client'\n\nimport { IconUserX } from '@tabler/icons-react'\nimport { Button, Card, Form, Modal, Note, TextField } from '@/components/ui'\n\nexport default function SecuritySetting() {\n    return (\n        <Card>\n            <Card.Header>\n                <Card.Title>Danger Area</Card.Title>\n                <Card.Description>Delete your account.</Card.Description>\n            </Card.Header>\n            <Card.Footer className='sm:justify-start'>\n                <Modal>\n                    <Button variant='destructive'>\n                        <IconUserX />\n                        Delete Account\n                    </Button>\n                    <Modal.Content role='alertdialog'>\n                        <Modal.Header>\n                            <Modal.Title>Delete Account</Modal.Title>\n                            <Modal.Description>\n                                This will permanently delete your account and all your data\n                            </Modal.Description>\n                            <Note variant='destructive'>No undo button here, so be sure!</Note>\n                        </Modal.Header>\n                        <Form onSubmit={() => {}}>\n                            <Modal.Body>\n                                <TextField autoFocus isRequired label='Password' type='password' />\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button slot='close' variant='outline'>\n                                    Cancel\n                                </Button>\n                                <Button variant='destructive'>Confirm</Button>\n                            </Modal.Footer>\n                        </Form>\n                    </Modal.Content>\n                </Modal>\n            </Card.Footer>\n        </Card>\n    )\n}\n",
  "application/dashboard/user-setting/plan-billing-setting.tsx": "'use client'\n\nimport { IconCreditCard, IconHash, IconLock, IconMap, IconUserCircle } from '@tabler/icons-react'\nimport { Button, Card, DatePicker, Form, GridList, Note, TextField } from '@/components/ui'\n\nexport default function PlanBillingSetting() {\n    return (\n        <Card>\n            <Card.Header>\n                <Card.Title>Manage Your Plan</Card.Title>\n                <Card.Description>Upgrade or downgrade your current plan.</Card.Description>\n            </Card.Header>\n            <Form>\n                <Card.Content className='grid gap-4'>\n                    <Note>\n                        Changing the plan will take effect immediately. You will be charged for the rest of the current\n                        month.\n                    </Note>\n                    <GridList aria-label='Select items' selectionMode='single'>\n                        <GridList.Item textValue='Basic'>Basic</GridList.Item>\n                        <GridList.Item textValue='Standard'>Standard</GridList.Item>\n                        <GridList.Item textValue='Deluxe'>Deluxe</GridList.Item>\n                        <GridList.Item textValue='Ultimate'>Ultimate</GridList.Item>\n                    </GridList>\n                    <h4 className='font-semibold text-lg'>Payment Details</h4>\n                    <TextField\n                        autoFocus\n                        id='card_holder'\n                        label='Card Holder'\n                        name='card_holder'\n                        prefix={<IconUserCircle />}\n                    />\n                    <div className='grid gap-4 md:grid-cols-4'>\n                        <TextField\n                            className='md:col-span-2'\n                            id='card_number'\n                            label='Card Number'\n                            name='card_number'\n                            prefix={<IconCreditCard />}\n                        />\n                        <DatePicker id='expiration_date' label='Expiration Date' name='expiration_date' />\n                        <TextField id='cvc' label='CVC / CVC2' name='cvc' prefix={<IconLock />} />\n                    </div>\n                    <div className='grid gap-4 lg:grid-cols-2'>\n                        <TextField id='country' label='Country' name='country' prefix={<IconMap />} />\n                        <TextField id='zip' label='Zip / Postal Code' name='zip' prefix={<IconHash />} />\n                    </div>\n                </Card.Content>\n                <Card.Footer>\n                    <Button>Save</Button>\n                </Card.Footer>\n            </Form>\n        </Card>\n    )\n}\n",
  "application/dashboard/user-setting/security-setting.tsx": "'use client'\n\nimport { IconKey } from '@tabler/icons-react'\nimport { Button, Card, Form, Switch, TextField } from '@/components/ui'\n\nexport default function SecuritySetting() {\n    return (\n        <Card>\n            <Card.Header>\n                <Card.Title>Security</Card.Title>\n                <Card.Description>Secure your account.</Card.Description>\n            </Card.Header>\n            <Form>\n                <Card.Content className='grid gap-4'>\n                    <TextField\n                        autoFocus\n                        id='current_password'\n                        isRequired\n                        label='Current Password'\n                        name='current_password'\n                        prefix={<IconKey />}\n                        type='password'\n                    />\n                    <TextField\n                        id='new_password'\n                        isRequired\n                        label='New Password'\n                        name='new_password'\n                        prefix={<IconKey />}\n                        type='password'\n                    />\n                    <TextField\n                        id='new_password_confirm'\n                        isRequired\n                        label='Confirm New Password'\n                        name='new_password_confirm'\n                        prefix={<IconKey />}\n                        type='password'\n                    />\n                    <div className='text-muted-foreground'>Account Preferences</div>\n                    <Switch>Enable 2FA</Switch>\n                    <Switch>Auto Logout</Switch>\n                </Card.Content>\n                <Card.Footer>\n                    <Button>Save</Button>\n                </Card.Footer>\n            </Form>\n        </Card>\n    )\n}\n",
  "application/dashboard/user-setting/layout.tsx": "export default function Layout({ children }: { children: React.ReactNode }) {\n    return <main className='h-dvh w-full'>{children}</main>\n}\n",
  "application/dashboard/user-setting/account-setting.tsx": "'use client'\n\nimport type { DropEvent } from '@react-types/shared'\nimport { IconBrandFacebook, IconBrandGithub, IconBrandInstagram, IconBrandX } from '@tabler/icons-react'\nimport { useState } from 'react'\nimport { isFileDropItem } from 'react-aria-components'\nimport { Avatar, Button, Card, DropZone, FileTrigger, Form, Textarea, TextField } from '@/components/ui'\n\nexport default function AccountSetting() {\n    const [droppedImage, setDroppedImage] = useState<string>('')\n\n    async function onDropHandler(e: DropEvent) {\n        const item = e.items\n            .filter(isFileDropItem)\n            .find((item) => item.type === 'image/jpeg' || item.type === 'image/png')\n        if (item) {\n            const file = await item.getFile()\n            setDroppedImage(URL.createObjectURL(file))\n        }\n    }\n\n    async function onSelectHandler(e: FileList | null) {\n        if (e) {\n            const files = Array.from([...e])\n            const item = files[0]\n            if (item) {\n                setDroppedImage(URL.createObjectURL(item))\n            }\n        }\n    }\n\n    return (\n        <section className='space-y-4'>\n            <Card>\n                <Card.Header>\n                    <Card.Title>Account</Card.Title>\n                    <Card.Description>Your account details.</Card.Description>\n                </Card.Header>\n                <Form>\n                    <Card.Content className='space-y-4'>\n                        <div className='flex items-center gap-2'>\n                            <DropZone\n                                className='size-10 overflow-hidden rounded-full p-0'\n                                getDropOperation={(types) =>\n                                    types.has('image/jpeg') || types.has('image/png') ? 'copy' : 'cancel'\n                                }\n                                onDrop={onDropHandler}\n                            >\n                                <Avatar size='lg' src={droppedImage ?? ''} />\n                                <input name='image' type='hidden' value={droppedImage ?? ''} />\n                            </DropZone>\n                            <FileTrigger\n                                acceptedFileTypes={['image/png', 'image/jpeg']}\n                                onSelect={onSelectHandler}\n                                size='sm'\n                            >\n                                Upload avatar\n                            </FileTrigger>\n                        </div>\n                        <TextField\n                            autoFocus\n                            id='name'\n                            isRequired\n                            label='Name'\n                            name='name'\n                            placeholder='Enter your name'\n                        />\n                        <TextField\n                            id='email'\n                            isRequired\n                            label='Email'\n                            name='email'\n                            placeholder='Enter your email'\n                            type='email'\n                        />\n                        <Textarea id='bio' label='Bio' name='bio' placeholder='Enter your bio' />\n                    </Card.Content>\n                    <Card.Footer>\n                        <Button>Save</Button>\n                    </Card.Footer>\n                </Form>\n            </Card>\n            <Card>\n                <Form>\n                    <Card.Header>\n                        <Card.Title>Social Accounts</Card.Title>\n                        <Card.Description>Your social accounts.</Card.Description>\n                    </Card.Header>\n                    <Card.Content className='grid gap-4 lg:grid-cols-2'>\n                        <TextField id='github' label='Github Username' name='github' prefix={<IconBrandGithub />} />\n                        <TextField id='twitter' label='X Username' name='twitter' prefix={<IconBrandX />} />\n                        <TextField id='facebook' label='Facebook' name='facebook' prefix={<IconBrandFacebook />} />\n                        <TextField id='ig' label='Instagram' name='ig' prefix={<IconBrandInstagram />} />\n                    </Card.Content>\n                    <Card.Footer>\n                        <Button>Save</Button>\n                    </Card.Footer>\n                </Form>\n            </Card>\n        </section>\n    )\n}\n",
  "utils.ts": "import { type ClassValue, clsx } from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nexport const cn = (...inputs: ClassValue[]) => twMerge(clsx(inputs))\nexport const fuzzyMatch = (textValue: string, inputValue: string): boolean => {\n    if (inputValue.length === 0) return true\n    if (textValue.length === 0) return false\n    let textIndex = 0\n    let inputIndex = 0\n    while (textIndex < textValue.length && inputIndex < inputValue.length) {\n        if (textValue.toLowerCase()[textIndex] === inputValue.toLowerCase()[inputIndex]) {\n            inputIndex++\n        }\n        textIndex++\n    }\n    return inputIndex === inputValue.length\n}\n",
  "hooks.ts": "import { useEffect, useState } from 'react'\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n    const [isMobile, setIsMobile] = useState<boolean | undefined>(undefined)\n\n    useEffect(() => {\n        const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n        const onChange = () => {\n            setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n        }\n        mql.addEventListener('change', onChange)\n        setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n        return () => mql.removeEventListener('change', onChange)\n    }, [])\n\n    return !!isMobile\n}\n",
  "globals.css": "@import \"tailwindcss\";\n@import \"tw-animate-css\";\n\n@plugin 'tailwindcss-react-aria-components';\n\n@variant dark (&:is(.dark *));\n\n:root {\n    --radius: 0.625rem;\n    --background: oklch(1 0 0);\n    --foreground: oklch(0.141 0.005 285.823);\n    --card: oklch(1 0 0);\n    --card-foreground: oklch(0.141 0.005 285.823);\n    --popover: oklch(1 0 0);\n    --popover-foreground: oklch(0.141 0.005 285.823);\n    --primary: oklch(0.21 0.006 285.885);\n    --primary-foreground: oklch(0.985 0 0);\n    --secondary: oklch(0.967 0.001 286.375);\n    --secondary-foreground: oklch(0.21 0.006 285.885);\n    --muted: oklch(0.967 0.001 286.375);\n    --muted-foreground: oklch(0.552 0.016 285.938);\n    --accent: oklch(0.967 0.001 286.375);\n    --accent-foreground: oklch(0.21 0.006 285.885);\n    --destructive: oklch(0.577 0.245 27.325);\n    --border: oklch(0.92 0.004 286.32);\n    --input: oklch(0.92 0.004 286.32);\n    --ring: oklch(0.705 0.015 286.067);\n    --chart-1: oklch(0.646 0.222 41.116);\n    --chart-2: oklch(0.6 0.118 184.704);\n    --chart-3: oklch(0.398 0.07 227.392);\n    --chart-4: oklch(0.828 0.189 84.429);\n    --chart-5: oklch(0.769 0.188 70.08);\n    --sidebar: oklch(0.985 0 0);\n    --sidebar-foreground: oklch(0.141 0.005 285.823);\n    --sidebar-primary: oklch(0.21 0.006 285.885);\n    --sidebar-primary-foreground: oklch(0.985 0 0);\n    --sidebar-accent: oklch(0.967 0.001 286.375);\n    --sidebar-accent-foreground: oklch(0.21 0.006 285.885);\n    --sidebar-border: oklch(0.92 0.004 286.32);\n    --sidebar-ring: oklch(0.705 0.015 286.067);\n    --letter-spacing: 0em;\n}\n\n.dark {\n    --background: oklch(0.141 0.005 285.823);\n    --foreground: oklch(0.985 0 0);\n    --card: oklch(0.21 0.006 285.885);\n    --card-foreground: oklch(0.985 0 0);\n    --popover: oklch(0.21 0.006 285.885);\n    --popover-foreground: oklch(0.985 0 0);\n    --primary: oklch(0.92 0.004 286.32);\n    --primary-foreground: oklch(0.21 0.006 285.885);\n    --secondary: oklch(0.274 0.006 286.033);\n    --secondary-foreground: oklch(0.985 0 0);\n    --muted: oklch(0.274 0.006 286.033);\n    --muted-foreground: oklch(0.705 0.015 286.067);\n    --accent: oklch(0.274 0.006 286.033);\n    --accent-foreground: oklch(0.985 0 0);\n    --destructive: oklch(0.704 0.191 22.216);\n    --border: oklch(1 0 0 / 10%);\n    --input: oklch(1 0 0 / 15%);\n    --ring: oklch(0.552 0.016 285.938);\n    --chart-1: oklch(0.488 0.243 264.376);\n    --chart-2: oklch(0.696 0.17 162.48);\n    --chart-3: oklch(0.769 0.188 70.08);\n    --chart-4: oklch(0.627 0.265 303.9);\n    --chart-5: oklch(0.645 0.246 16.439);\n    --sidebar: oklch(0.21 0.006 285.885);\n    --sidebar-foreground: oklch(0.985 0 0);\n    --sidebar-primary: oklch(0.488 0.243 264.376);\n    --sidebar-primary-foreground: oklch(0.985 0 0);\n    --sidebar-accent: oklch(0.274 0.006 286.033);\n    --sidebar-accent-foreground: oklch(0.985 0 0);\n    --sidebar-border: oklch(1 0 0 / 10%);\n    --sidebar-ring: oklch(0.552 0.016 285.938);\n    --letter-spacing: 0em;\n}\n\n@theme inline {\n    --font-sans:\n        var(--font-sans), ui-sans-serif, system-ui, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\",\n        \"Noto Color Emoji\";\n    --font-serif: var(--font-serif), ui-serif, Georgia, Cambria, \"Times New Roman\", Times, serif;\n    --font-mono:\n        var(--font-mono), ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\",\n        monospace;\n\n    --color-background: var(--background);\n    --color-foreground: var(--foreground);\n    --color-card: var(--card);\n    --color-card-foreground: var(--card-foreground);\n    --color-popover: var(--popover);\n    --color-popover-foreground: var(--popover-foreground);\n    --color-primary: var(--primary);\n    --color-primary-foreground: var(--primary-foreground);\n    --color-secondary: var(--secondary);\n    --color-secondary-foreground: var(--secondary-foreground);\n    --color-muted: var(--muted);\n    --color-muted-foreground: var(--muted-foreground);\n    --color-accent: var(--accent);\n    --color-accent-foreground: var(--accent-foreground);\n    --color-destructive: var(--destructive);\n    --color-border: var(--border);\n    --color-input: var(--input);\n    --color-ring: var(--ring);\n    --color-chart-1: var(--chart-1);\n    --color-chart-2: var(--chart-2);\n    --color-chart-3: var(--chart-3);\n    --color-chart-4: var(--chart-4);\n    --color-chart-5: var(--chart-5);\n    --color-sidebar: var(--sidebar);\n    --color-sidebar-foreground: var(--sidebar-foreground);\n    --color-sidebar-primary: var(--sidebar-primary);\n    --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);\n    --color-sidebar-accent: var(--sidebar-accent);\n    --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);\n    --color-sidebar-border: var(--sidebar-border);\n    --color-sidebar-ring: var(--sidebar-ring);\n\n    /* Letter Spacing */\n    --tracking-tighter: calc(var(--letter-spacing) - 0.05em);\n    --tracking-tight: calc(var(--letter-spacing) - 0.025em);\n    --tracking-normal: var(--letter-spacing);\n    --tracking-wide: calc(var(--letter-spacing) + 0.025em);\n    --tracking-wider: calc(var(--letter-spacing) + 0.05em);\n    --tracking-widest: calc(var(--letter-spacing) + 0.1em);\n\n    --radius-xs: calc(var(--radius-lg) - 5px);\n    --radius-sm: calc(var(--radius) - 4px);\n    --radius-md: calc(var(--radius) - 2px);\n    --radius-lg: var(--radius);\n    --radius-xl: calc(var(--radius) + 4px);\n\n    --color-success-bg: var(--success-bg);\n    --color-success-border: var(--success-border);\n    --color-success-foreground: var(--success-foreground);\n\n    --color-info-bg: var(--info-bg);\n    --color-info-border: var(--info-border);\n    --color-info-foreground: var(--info-foreground);\n\n    --color-warning-bg: var(--warning-bg);\n    --color-warning-border: var(--warning-border);\n    --color-warning-foreground: var(--warning-foreground);\n\n    --color-error-bg: var(--error-bg);\n    --color-error-border: var(--error-border);\n    --color-error-foreground: var(--error-foreground);\n}\n\n@layer components {\n    :root {\n        --success-bg: theme(--color-emerald-50);\n        --success-border: theme(--color-emerald-100);\n        --success-foreground: theme(--color-emerald-600);\n\n        --info-bg: theme(--color-blue-600 / 15%);\n        --info-border: theme(--color-blue-600 / 15%);\n        --info-foreground: theme(--color-blue-600);\n\n        --warning-bg: theme(--color-amber-500 / 15%);\n        --warning-border: theme(--color-amber-400 / 40%);\n        --warning-foreground: theme(--color-amber-600);\n\n        --error-bg: theme(--color-red-500 / 20%);\n        --error-border: theme(--color-red-200);\n        --error-foreground: theme(--color-red-600);\n    }\n\n    .dark {\n        --success-bg: theme(--color-emerald-950);\n        --success-border: theme(--color-emerald-900);\n        --success-foreground: theme(--color-emerald-200);\n\n        --info-bg: theme(--color-blue-600 / 15%);\n        --info-border: theme(--color-blue-600 / 15%);\n        --info-foreground: theme(--color-blue-200);\n\n        --warning-bg: theme(--color-amber-400 / 10%);\n        --warning-border: theme(--color-amber-500 / 15%);\n        --warning-foreground: theme(--color-amber-200);\n\n        --error-bg: theme(--color-red-600 / 10%);\n        --error-border: theme(--color-red-600 / 15%);\n        --error-foreground: theme(--color-red-200);\n    }\n}\n\n@layer base {\n\n    *,\n    ::after,\n    ::before,\n    ::backdrop,\n    ::file-selector-button {\n        @apply border-border outline-ring/50;\n    }\n\n    * {\n        text-rendering: optimizeLegibility;\n        scrollbar-width: thin;\n        scrollbar-color: var(--border) transparent;\n    }\n\n    html {\n        font-feature-settings: \"cv02\", \"cv03\", \"cv04\", \"cv11\", \"ss01\";\n        height: 100%;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        -webkit-tap-highlight-color: transparent;\n    }\n\n    body {\n        letter-spacing: var(--letter-spacing);\n        background-color: var(--background);\n        color: var(--foreground);\n    }\n\n    ::-webkit-scrollbar {\n        width: 4px;\n    }\n\n    ::-webkit-scrollbar-track {\n        background: transparent;\n    }\n\n    ::-webkit-scrollbar-thumb {\n        background: var(--muted);\n        border-radius: 4px;\n    }\n}\n\n@layer components {\n    .no-scrollbar {\n        -ms-overflow-style: none;\n        /* Internet Explorer and Edge */\n        scrollbar-width: none;\n        /* Firefox */\n\n        ::-webkit-scrollbar {\n            display: none;\n            /* Safari and Chrome */\n        }\n    }\n\n    pre::-webkit-scrollbar {\n        display: none;\n    }\n}\n"
}